
================
DOM DEBUG OUTPUT
================

PAR Elektronische Gesundheitskarte und Telematikinfrastruktur
PAR Spezifikation
PAR KOM-LE-Clientmodul


TABLE(rows=6,cols=0+0)->
TR-> TD(0,0/1/1)->PAR Version TD(0,1/1/1)->PAR 1.16.0
TR-> TD(1,0/1/1)->PAR Revision TD(1,1/1/1)->PAR 621275
TR-> TD(2,0/1/1)->PAR Stand TD(2,1/1/1)->PAR 24.04.2023
TR-> TD(3,0/1/1)->PAR Status TD(3,1/1/1)->PAR freigegeben
TR-> TD(4,0/1/1)->PAR Klassifizierung TD(4,1/1/1)->PAR öffentlich
TR-> TD(5,0/1/1)->PAR Referenzierung TD(5,1/1/1)->PAR gemSpec_CM_KOMLE




METADATA: 
  Version: 1.16.0
  Revision: 621275
  Stand: 24.04.2023
  Status: freigegeben
  Klassifizierung: öffentlich
  Referenzierung: gemSpec_CM_KOMLE

PAR -HEADING(ids=Dokumentinformationen)Dokumentinformationen

TABLE(rows=1,cols=0)->
TR-> TD(0,0/1/1)->PAR Seit März 2020 verwendet die gematik die Bezeichnung „KIM – Kommunikation im Medizinwesen“ für die Anwendung KOM-LE. Diese neue Benennung findet sich insbesondere in Informationsmaterialien für die Zielgruppe Leistungserbringer sowie in Presseveröffentlichungen. Eine Umbenennung in den technisch-normativen Dokumenten wie Spezifikationen, Konzepten, Zulassungsdokumenten etc. mit Ausnahme von Angaben zu Domänen, E-Mail-Adressen, technischen Schnittstellen, Parametern u.ä. ist mit Stand Release 4.0.0 nicht geplant.
PAR Änderungen zur Vorversion
PAR Anpassungen des vorliegenden Dokumentes im Vergleich zur Vorversion können Sie der nachfolgenden Tabelle entnehmen.
PAR Dokumentenhistorie

TABLE(rows=21,cols=73+83+78+355+102)->
TR-> TH(0,0/1/1)->PAR Version TH(0,1/1/1)->PAR Stand TH(0,2/1/1)->PAR Kap./ Seite TH(0,3/1/1)->PAR Grund der Änderung, besondere Hinweise TH(0,4/1/1)->PAR Bearbeitung
TR-> TD(1,0/1/1)->PAR 0.5.0 TD(1,1/1/1)->PAR 19.11.13 TD(1,2/1/1)-> TD(1,3/1/1)->PAR zur Abstimmung freigegeben TD(1,4/1/1)->PAR gematik
TR-> TD(2,0/1/1)->PAR 1.0.0 TD(2,1/1/1)->PAR 27.01.14 TD(2,2/1/1)-> TD(2,3/1/1)->PAR Einarbeitung Kommentare TD(2,4/1/1)->PAR gematik
TR-> TD(3,0/1/1)->PAR 1.1.0 TD(3,1/1/1)->PAR 28.02.14 TD(3,2/1/1)->PAR 4.1.2 TD(3,3/1/1)->PAR XP-Verweis entfernt TD(3,4/1/1)->PAR gematik
TR-> TD(4,0/1/1)->PAR 1.2.0 TD(4,1/1/1)->PAR 25.07.14 TD(4,2/1/1)->PAR 3.1<br>4.1.2/4.1.4 TD(4,3/1/1)->PAR Zeitsynchronisation Konnektor ergänzt Formulierungsanpassungen TD(4,4/1/1)->PAR gematik
TR-> TD(5,0/1/1)->PAR 1.3.0 TD(5,1/1/1)->PAR 24.07.15 TD(5,2/1/1)-> TD(5,3/1/1)->PAR Begriff Betreiber durch Anbieter ersetzt TD(5,4/1/1)->PAR gematik
TR-> TD(6,0/1/1)->PAR 1.4.0 TD(6,1/1/1)->PAR 16.10.16 TD(6,2/1/1)-> TD(6,3/1/1)->PAR Anpassungen gemäß Änderungsliste TD(6,4/1/1)->PAR gematik
TR-> TD(7,0/1/1)->PAR 1.5.0 TD(7,1/1/1)->PAR 14.05.18 TD(7,2/1/1)-> TD(7,3/1/1)->PAR Einarbeitung P15.4 TD(7,4/1/1)->PAR gematik
TR-> TD(8,0/1/1)->PAR 1.6.0 TD(8,1/1/1)->PAR 15.05.2019 TD(8,2/1/1)-> TD(8,3/1/1)->PAR Einarbeitung P18.1 TD(8,4/1/1)->PAR gematik
TR-> TD(9,0/1/1)->PAR 1.7.0 TD(9,1/1/1)->PAR 02.03.20 TD(9,2/1/1)-> TD(9,3/1/1)->PAR Einarbeitung P21.1 TD(9,4/1/1)->PAR gematik
TR-> TD(10,0/1/1)->PAR 1.8.0  TD(10,1/1/1)->PAR 30.06.20 TD(10,2/1/1)-> TD(10,3/1/1)->PAR Anpassungen gemäß Änderungsliste P22.1 und Scope-Themen aus Systemdesign R4.0.0 TD(10,4/1/1)->PAR gematik
TR-> TD(11,0/1/1)->PAR 1.9.0  TD(11,1/1/1)->PAR 12.11.20 TD(11,2/1/1)-> TD(11,3/1/1)->PAR Anpassungen gemäß Änderungsliste P22.2 und Scope-Themen aus Systemdesign R4.0.1 TD(11,4/1/1)->PAR gematik
TR-> TD(12,0/1/1)->PAR 1.9.1 TD(12,1/1/1)->PAR 18.12.20 TD(12,2/1/1)-> TD(12,3/1/1)->PAR Anpassungen gemäß Änderungsliste P22.4 TD(12,4/1/1)->PAR gematik
TR-> TD(13,0/1/1)->PAR 1.10.0 TD(13,1/1/1)->PAR 19.02.21 TD(13,2/1/1)-> TD(13,3/1/1)->PAR Anpassungen gemäß Änderungsliste P22.5  TD(13,4/1/1)->PAR gematik
TR-> TD(14,0/1/1)->PAR 1.11.0 TD(14,1/1/1)->PAR 06.04.21 TD(14,2/1/1)-> TD(14,3/1/1)->PAR Anpassungen gemäß Änderungsliste KIM_Maintenance_21.1/<br>KIM 1.5.1 TD(14,4/1/1)->PAR gematik
TR-> TD(15,0/1/1)->PAR 1.11.1 TD(15,1/1/1)->PAR 20.04.21 TD(15,2/1/1)-> TD(15,3/1/1)->PAR Anpassung C_10247 aus KIM_Maintenance_21.1 vervollständigt (A_21247 entfernt) TD(15,4/1/1)->PAR gematik
TR-> TD(16,0/1/1)->PAR 1.12.0 TD(16,1/1/1)->PAR 04.08.21 TD(16,2/1/1)-> TD(16,3/1/1)->PAR Einarbeitung gemäß KIM Maintenance 21.2 /KIM 1.5.1-3 TD(16,4/1/1)->PAR gematik
TR-> TD(17,0/1/1)->PAR 1.13.0 TD(17,1/1/1)->PAR 31.01.22 TD(17,2/1/1)-> TD(17,3/1/1)->PAR Einarbeitung gemäß KIM Maintenance 21.3 /KIM 1.5.2 TD(17,4/1/1)->PAR gematik
TR-> TD(18,0/1/1)->PAR 1.14.0 TD(18,1/1/1)->PAR 20.09.22 TD(18,2/1/1)->PAR 3.2.1 und<br>3.4.4.2.2 TD(18,3/1/1)->PAR Anpassungen gemäß Änderungsliste KIM_Maintenance_22.2 - KIM 1.5.2-1 und R3.1.3-12 (C_11209)<br>Ergänzung der Beispiele in Kapitel 3.2.1 und 3.4.4.2.2  TD(18,4/1/1)->PAR gematik
TR-> TD(19,0/1/1)->PAR 1.15.0 TD(19,1/1/1)->PAR 13.01.23 TD(19,2/1/1)-> TD(19,3/1/1)->PAR Anpassungen gemäß Änderungsliste KIM_Maintenance_22.3 - KIM 1.5.2-2 TD(19,4/1/1)->PAR gematik
TR-> TD(20,0/1/1)->PAR 1.16.0 TD(20,1/1/1)->PAR 24.04.23 TD(20,2/1/1)-> TD(20,3/1/1)->PAR Anpassungen gemäß Änderungsliste KIM_Maintenance_22.3 - KIM 1.5.2-3 TD(20,4/1/1)->PAR gematik
PAR -HEADING(ids=Inhaltsverzeichnis)Inhaltsverzeichnis

<PLACEHOLDER>

PAR -HEADING(ids=1)1 Einordnung des Dokumentes
PAR -HEADING(ids=1.1)1.1 Zielsetzung
PAR Das vorliegende Dokument spezifiziert die Anforderungen an den Produkttyp KOM-LE-Clientmodul. Das Clientmodul ist verantwortlich für das Signieren und Verschlüsseln von KOM-LE-Nachrichten beim Versenden sowie für die Entschlüsselung und Signaturprüfung beim Abholen von KOM-LE-Nachrichten.
PAR Aus den Kommunikationsbeziehungen mit Clientsystem, Konnektor, Verzeichnisdienst und KOM-LE-Fachdienst resultieren vom Clientmodul anzubietende Schnittstellen, die in diesem Dokument normativ beschrieben werden. Vom Clientmodul genutzte Schnittstellen liegen zumeist in anderen Verantwortungsbereichen (Konnektor, Verzeichnisdienst). Diese werden in den entsprechenden Produkttypspezifikationen definiert.
PAR -HEADING(ids=1.2)1.2 Zielgruppe
PAR Dieses Dokument richtet sich an

LIST->
LITEM->PAR Entwickler des KOM-LE-Clientmoduls,LITEM->PAR Primärsystemhersteller undLITEM->PAR Verantwortliche für Zulassung und Test.
PAR -HEADING(ids=1.3)1.3 Geltungsbereich
PAR Dieses Dokument enthält normative Festlegungen zur Telematikinfrastruktur des deutschen Gesundheitswesens. Der Gültigkeitszeitraum der vorliegenden Version und deren Anwendung in Zulassungsverfahren werden durch die gematik GmbH in gesonderten Dokumenten (z.B. Dokumentenlandkarte, Produkttypsteckbrief, Leistungsbeschreibung) festgelegt und bekannt gegeben.
PAR -HEADING(ids=1.4)1.4 Arbeitsgrundlagen
PAR Grundlagen für die Ausführungen dieses Dokumentes sind

LIST->
LITEM->PAR Lastenheft Adressierte Kommunikation LeistungserbringerLITEM->PAR Systemspezifisches Konzept KOM-LE [gemSysL_KOMLE]LITEM->PAR KOM-LE S/MIME-Profil [gemSMIME_KOMLE]LITEM->PAR Gesamtarchitektur der TI [gemÜK_Arch_TI]LITEM->PAR Konzept Architektur der TI-Plattform [gemKPT_Arch_TIP]LITEM->PAR Spezifikation PKI [gemSpec_PKI]LITEM->PAR Verwendung kryptographischer Algorithmen in der Telematikinfrastruktur [gemSpec_Krypt]LITEM->PAR Spezifikation Konnektor [gemSpec_Kon]
PAR -HEADING(ids=1.5)1.5 Abgrenzung des Dokuments
PAR Spezifiziert werden in dem Dokument die vom Produkttyp bereitgestellten (angebotenen) Schnittstellen. Benutzte Schnittstellen werden hingegen in der Spezifikation desjenigen Produkttypen beschrieben, der diese Schnittstelle bereitstellt. Auf die entsprechenden Dokumente wird referenziert.
PAR Die Systemlösung der Fachanwendung KOM-LE ist im systemspezifischen Konzept [gemSysL_KOMLE] beschrieben. Dieses Konzept setzt die fachlichen Anforderungen des Lastenheftes auf Systemebene um, zerlegt die Fachanwendung KOM-LE in die zugehörigen Produkttypen, darunter das KOM-LE-Clientmodul und der KOM-LE-Fachdienst. Ferner definiert es die Schnittstellen zwischen den einzelnen Produkttypen. Für das Verständnis dieser Spezifikation wird die Kenntnis von [gemSysL_KOMLE] vorausgesetzt.
PAR Die Anforderungen am Fachdienst werden separat in der Spezifikationen Fachdienst KOM-LE [gemSpec_FD_KOMLE] beschrieben.
PAR Die Anforderungen an das Format der KOM-LE-Nachrichten, die zwischen dem Clientmodul und dem Fachdienst übermittelt werden, werden separat im KOM-LE-S/MIME-Profil [gemSMIME_KOMLE] beschrieben.
PAR Abbildung 1 zeigt schematisch die Einbettung des vorliegenden Dokuments in die Dokumentenlandschaft der Lastenheft- und Pflichtenheftphase in Form einer Dokumentenhierarchie.

PAR Abbildung 1: Abb_Dok_Hierarchie Dokumentenhierarchie KOM-LE
PAR -HEADING(ids=1.6)1.6 Methodik
PAR -HEADING(ids=1.6.1)1.6.1 Anforderungen
PAR Anforderungen als Ausdruck normativer Festlegungen werden durch eine eindeutige ID sowie die dem RFC 2119 [RFC2119] entsprechenden, in Großbuchstaben geschriebenen deutschen Schlüsselworte MUSS, DARF NICHT, SOLL, SOLL NICHT, KANN gekennzeichnet.
PAR Sie werden im Dokument wie folgt dargestellt:
PAR <AFO-ID> - <Titel der Afo><br>Text / Beschreibung<br>[<=]
PAR Dabei umfasst die Anforderung sämtliche innerhalb der Afo-ID und der Textmarke angeführten Inhalte.
PAR -HEADING(ids=1.6.2)1.6.2 Diagramme
PAR Die Darstellung der Spezifikationen von Komponenten erfolgt auf der Grundlage einer durchgängigen Use-Case-Modellierung als

LIST->
LITEM->PAR technische Use Cases (eingebundene Graphik sowie tabellarische Darstellung mit Vor- und Nachbedingungen gemäß Modellierungsleitfaden),LITEM->PAR Sequenz- und Aktivitätendiagramme sowieLITEM->PAR KlassendiagrammeLITEM->PAR XML-Strukturen und Schnittstellenbeschreibungen.
PAR -HEADING(ids=1.6.3)1.6.3 Nomenklatur
PAR Sofern im Text dieser Spezifikation auf die Ausgangsanforderungen verwiesen wird, erfolgt dies in eckigen Klammern, z.B. [KOMLE-A_2015]. Wird auf Eingangsanforderungen verwiesen, erfolgt dies in runden Klammern, z.B. (KOMLE-A_202).
PAR -HEADING(ids=2)2 Systemüberblick
PAR Das Clientmodul bietet die Funktionalität, die für Anwendungsfälle KOM-LE_AF_1 „Nachricht senden“ und KOM-LE_AF_2 „Nachricht empfangen“ (siehe [gemSysL_KOMLE]) relevant ist. Die Aufgabe des Clientmoduls ist das Aufbringen und Aufheben des Schutzes der Integrität und Vertraulichkeit der zwischen den KOM-LE-Teilnehmern ausgetauschten E-Mail-Nachrichten. Dabei kommuniziert das Clientmodul mit dem Clientsystem, dem KOM-LE-Fachdienst und nutzt mehrere Dienste der TI-Plattform. Optional kann das Clientmodul in das Clientsystem integriert werden. Abbildung 2 stellt die grundlegenden Elemente der KOM-LE-Architektur dar.

PAR Abbildung 2: Abb_KOMLE_Komp KOM-LE-Komponenten
PAR Die im Clientmodul zu bearbeitenden originalen MIME-Nachrichten von einem Clientsystem, die kleiner oder gleich 15 MiB sind, werden beim Senden entsprechend dem KOM-LE-S/MIME-Profil gemäß [gemSMIME_KOMLE] digital signiert und verschlüsselt und im empfangenden Clientmodul entschlüsselt und deren Signatur geprüft. Die originalen MIME-Nachrichten, die von einem Clientsystem an das Clientmodul übergeben werden, werden im KIM-Kontext als Client-Mails bezeichnet. Bei Client-Mails größer 15 MiB wird die gesamte Client-Mail auf einem separaten Speicherort (Fachdienst) verschlüsselt abgelegt (E-Mail-Daten). Das KOM-LE-S/MIME-Profil konkretisiert die S/MIME-Spezifikation und stellt sicher, dass die Interoperabilität zwischen den verschiedenen KOM-LE-Komponenten sowie der Schutz von Integrität und Vertraulichkeit für alle personenbezogenen medizinischen Daten gewährleistet werden.
PAR Jede dem KOM-LE-S/MIME-Profil entsprechende Nachricht hat die in Abbildung 3 dargestellte Struktur. Die äußere Nachricht ist eine entsprechend dem S/MIME-Standard signierte und verschlüsselte E-Mail-Nachricht. Die innere Nachricht ist die vom Clientmodul verarbeitete Client-Mail (signiert und verschlüsselt) die gemäß message/rfc822 als Anhang in die äußere Nachricht angehangen wird. Die so erzeugte Mail wird im KIM-Kontext als KOM-LE-Nachricht bezeichnet.

PAR Abbildung 3: Abb_Struk_KOMLE_Msg Struktur einer KOM-LE-Nachricht
PAR Die durch das Clientmodul versendeten Nachrichten können vom Client optional gekennzeichnet werden. Es wird empfohlen eine Dienstkennung zu setzen. Andernfalls werden Nachrichten mit einer standardisierten Dienstkennung versehen. Das hierfür notwendiges Attribut im Header der Mail (X-KIM-Dienstkennung) wird im Kapitel 3.6 beschrieben. Erfolgte durch den Client keine Belegung dieses Attributes, wird durch das Clientmodul eine Default-Kennung gesetzt. Um die Abholung der auf dem Mail-Server ankommenden Nachrichten inhaltsabhängig durchführen zu können, wird das Header-Feld "X-KIM-Dienstkennung" aus der inneren Nachricht, die signiert und verschlüsselt ist, in den äußeren Header der Nachricht übernommen.
PAR Zusätzlich wird das Clientmodul um das Administrationsmodul erweitert (siehe auch Kap. 3.7). Mit Hilfe des Administrationsmoduls kann sich der KOM-LE-Teilnehmer beim Fachdienst registrieren oder eine Deregistrierung vornehmen. Zugleich kann über das Administrationsmodul das benötigte Clientzertifikat (PKCS#12 - Datei) heruntergeladen werden.

PAR Abbildung 4: Administrationsmodul für die Kommunikation mit dem Account Manager
PAR Der Funktionsumfang des Clientmodules kann optional in das Clientsystem integriert werden. Somit ist kein separates Clientmodul mehr notwendig.
PAR Wenn das Clientmodul in das Clientsystem (PVS) integriert wird, richten sich die Anforderungen des Clientmodul an das Clientsystem (PVS). Durch die optionale Integration entfallen alle Anforderungen an die Schnittstelle zwischen Clientsystem und Clientmodul, da diese nicht mehr existiert.
PAR In diesem Szenario gilt für Anforderungen, die nur Anteile auf die Schnittstelle zwischen Clientsystem und dem Clientmodul enthalten (z.B. "vom Clientsystem erhaltene E-Mail-Nachrichten"), dass diese Anteile entfallen und die restliche Anforderung umgesetzt werden muss. Abzüglich der Tests der weggefallenen Schnittstelle ändert sich also das Zulassungsverfahren nicht.
PAR -HEADING(ids=3)3 Produktfunktionen
PAR -HEADING(ids=3.1)3.1 Allgemeine Anforderungen
REQ(ids=KOM-LE-A_2003)<b>KOM-LE-A_2003 - Unterstützung von E-Mail-Clients</b>
PAR Das KOM-LE-Clientmodul MUSS das Senden und Empfangen von Nachrichten mit marktüblichen SMTP/POP3 Desktop-E-Mail-Clients unterstützen.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2004-01)<b>KOM-LE-A_2004-01 - Verarbeitung einer Client-Mail bis zu 15 MiB</b>
PAR Das KOM-LE-Clientmodul MUSS eine decodierte MIME-Message (Client-Mail) mit einer Größe von bis zu 15 MiB verarbeiten können.<br><b>[<=]</b>

PAR Hinweis:

LIST->
LITEM->PAR Durch die Limitierung des Konnektors ist die Client-Mail Verarbeitung nur bis zu einer Größe von 15 MiB sinnvoll möglich.LITEM->PAR Es ist zu beachten dass durch die base64-Kodierung der übersendeten Client-Mail die empfangene Mailgröße am Clientmodul durch die Transportkodierung um den Faktor 1,37 erhöht ist.LITEM->PAR Wenn der Empfänger ein Clientmodul ab Version 1.5 nutzt, können mit der in Kap. 3.2 beschriebenen Vorgehensweise auch große Client-Mails über 15 MiB versendet werden.
REQ(ids=A_19513)<b>A_19513 - Bereitstellung Zertifikate aus PKCS#12-Datei</b>
PAR Das KOM-LE-Clientmodul MUSS die Zertifikate aus der PKCS#12-Datei entpacken und zur Verfügung stellen. <b>[<=]</b>

PAR Die PKCS#12-Datei wird für die Registrierung eines KOM-LE-Teilnehmers sowie bei Ablauf des Clientzertifikates benötigt.
REQ(ids=KOM-LE-A_2005)<b>KOM-LE-A_2005 - Keine persistente Speicherung von Nachrichten</b>
PAR Das KOM-LE-Clientmodul DARF NICHT die Inhalte von Nachrichten länger als es für die Aufbereitung und Übermittlung nötig ist, speichern.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2230)<b>KOM-LE-A_2230 - Synchronisation mit der Systemzeit des Konnektors</b>
PAR Das KOM-LE-Clientmodul MUSS sich unter Verwendung der Operation sync_Time mit der Systemzeit des Konnektors synchronisieren.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2006)<b>KOM-LE-A_2006 - Einzuhaltende Standards beim Senden und Empfangen</b>
PAR Das KOM-LE-Clientmodul MUSS sich beim Senden und Empfangen von Nachrichten konform zu folgenden Standards verhalten:

LIST->
LITEM->PAR IETF Draft: The LOGIN SASL Mechanism, K. Murchison, M. Crispin, August 2003,LITEM->PAR RFC 1939: Post Office Protocol – Version 3 [RFC1939],LITEM->PAR RFC 2045: Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies [RFC2045],LITEM->PAR RFC2046: Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types [RFC2046],LITEM->PAR RFC 2449: POP3 Extension Mechanism [RFC2449],LITEM->PAR RFC 3463: Enhanced Mail System Status Codes [RFC3463],LITEM->PAR RFC 4616: The PLAIN Simple Authentication and Security Layer (SASL) Mechanism, K. Zeilenga, August 2006 [RFC4616],LITEM->PAR RFC 4954: SMTP Service Extension for Authentication [RFC4954],LITEM->PAR RFC 5321: Simple Mail Transfer Protocol [RFC5321],LITEM->PAR RFC 5322: Internet Message Format [RFC5322],LITEM->PAR RFC 5750: Secure/Multipurpose Internet Mail Extensions (S/MIME) Version 3.2 Certificate Handling, B. Ramsdell, S. Turner, Januar 2010 [RFC5750] undLITEM->PAR RFC 5751: Secure/Multipurpose Internet Mail Extensions (S/MIME) Version 3.2 Message Specification, B. Ramsdell, S. Turner, Januar 2010 [RFC5751].
PAR <b>[<=]</b>

PAR Diese Spezifikation erläutert nicht alle Schritte und Einzelheiten der SMTP- und POP3-Kommunikation zwischen dem Clientsystem, dem KOM-LE-Clientmodul und dem KOM-LE-Fachdienst. Es setzt voraus, dass das Format einer E-Mail, MIME, SMTP und POP3 dem Leser bekannt sind.
REQ(ids=A_20189-02)<b>A_20189-02 - Übermittlung der benötigten KOM-LE Version des Clientmoduls</b>
PAR Der Anbieter des KOM-LE-Fachdienstes MUSS seinem KOM-LE Teilnehmer bei der Erstellung des Accounts sowie bei einem  relevanten Update des Fachdienstes, die nötige KOM-LE-Version des Clientmoduls mitteilen.<br><b>[<=]</b>

PAR Die KOM-LE-Version des Clientmodules muss mitgeteilt werden, damit der Nutzer weiß, welche Clientmodul-Version zu verwenden ist. Bei Nutzung eines Clientmodules in der KOM-LE-Version 1.0 ist eine Registrierung durch den Teilnehmer über die KOM-LE-1.5-Schnittstelle am KOM-LE-Fachdienst nicht möglich.
PAR Die Übermittlung der KOM-LE-Version vom Anbieter kann hierbei in geeigneter Form erfolgen. Die jeweilige Client-Version kann aus dem LDAP-Directory Attribut: komLeData vom VZD entnommen werden. Gültige KOM-LE-Versionen sind 1.0 und 1.5 und werden in der Form in das Header-Element X-KOM-LE-Version eingetragen. Ab der KOM-LE-Version 1.5 kann die Version mit einem "+" erweitert werden. Das "+" dient zur Erkennung, ob große KIM-Nachrichten empfangen werden können.
REQ(ids=A_20650-05)<b>A_20650-05 - Übermittlung von Fehlernachrichten</b>
PAR Das KOM-LE-Clientmodul MUSS bei der Übertragung von Fehlernachrichten ein Mail-Header-Attribut X-KIM-Fehlermeldung mit dem Wert aus der Tabelle "Tab_Fehlercodes_KOMLE-Clientmodule" befüllen. Treten weitere Fehler auf, die nicht in der Tabelle "Tab_Fehlercodes_KOMLE-Clientmodul" definierte sind, MUSS das Clientmodul für diese Fehler das Mail-Header-Attribut X-KIM-Fehlermeldung mit einem herstellerspezifischen Fehlercode befüllen, welcher mit "X" beginnt.<br><b>[<=]</b>

PAR (ids=Tabelle-#)Tabelle #: Tab_Fehlercodes_KOMLE-Clientmodule

TABLE(rows=22,cols=348+138)->
TR-> TH(0,0/1/1)->PAR Fehler TH(0,1/1/1)->PAR Wert
TR-> TD(1,0/1/2)->PAR Fehlermeldungen beim Senden einer KOM-LE-Nachricht
TR-> TD(2,0/1/1)->PAR Empfänger entfernt, wegen falscher KIM-Version TD(2,1/1/1)->PAR 4001
TR-> TD(3,0/1/1)->PAR Verschlüsselte E-Mail-Daten konnten nicht zum KOM-LE-Attachment-Service übertragen werden  TD(3,1/1/1)->PAR 4002
TR-> TD(4,0/1/1)->PAR keine eindeutige Telematik-ID mit Verschlüsselungszertifikat gefunden TD(4,1/1/1)->PAR 4003
TR-> TD(5,0/1/1)->PAR Nachricht nicht für alle Empfänger verschlüsselbar TD(5,1/1/1)->PAR 4004
TR-> TD(6,0/1/1)->PAR Für einen Empfänger existieren mehrere Verschlüsselungszertifikate mit unterschiedlichen Telematik-IDs TD(6,1/1/1)->PAR 4005
TR-> TD(7,0/1/2)->PAR Fehlermeldungen beim Empfangen einer KOM-LE-Nachricht
TR-> TD(8,0/1/1)->PAR Verschlüsselte E-Mail-Daten konnten nicht vom KOM-LE-Attachment-Service geladen werden  TD(8,1/1/1)->PAR 4006
TR-> TD(9,0/1/1)->PAR Beim Entschlüsseln der E-Mail-Daten ist ein Fehler aufgetreten TD(9,1/1/1)->PAR 4007
TR-> TD(10,0/1/1)->PAR Das verwendete Clientmodul unterstützt die in der Mail verwendete Version nicht TD(10,1/1/1)->PAR 4008
TR-> TD(11,0/1/1)->PAR Die Nachricht konnte auf Grund eines nicht verfügbaren Schlüssels nicht entschlüsselt werden TD(11,1/1/1)->PAR 4009
TR-> TD(12,0/1/1)->PAR Die Nachricht konnte aufgrund des falschen Formats nicht entschlüsselt werden TD(12,1/1/1)->PAR 4010
TR-> TD(13,0/1/1)->PAR Der Konnektor steht für die Entschlüsselung nicht zur Verfügung TD(13,1/1/1)->PAR 4011
TR-> TD(14,0/1/1)->PAR Die Prüfsumme der E-Mail-Daten stimmt nicht mit der beigefügten Prüfsumme überein. Die empfangene aufbereitete Client-Mail entspricht eventuell nicht der vom Sender auf dem KAS hinterlegten aufbereiteten Client-Mail. TD(14,1/1/1)->PAR 4012
TR-> TD(15,0/1/1)->PAR Verschlüsselte E-Mail-Daten konnten nicht heruntergeladen werden, da durch zu häufigen Zugriff der KOM-LE-Attachment-Service den Abruf verweigert.  TD(15,1/1/1)->PAR 4013
TR-> TD(16,0/1/1)->PAR Die Prüfung der Nachricht hat ergeben, dass die Nachricht nach dem Verschlüsseln manipuliert wurde. Möglicherweise wurde die verschlüsselte Nachricht auch an einen nicht empfangsberechtigten Personenkreis versendet. TD(16,1/1/1)->PAR 4014
TR-> TD(17,0/1/1)->PAR Die Prüfung der Signatur der Nachricht hat ergeben, dass die Nachricht manipuliert wurde, um einem anderen Nutzer das Entschlüsseln der Nachricht mit einem Schlüssel, der nicht in seinem Besitz ist, zu ermöglichen. TD(17,1/1/1)->PAR 4015
TR-> TD(18,0/1/1)->PAR Die Auswertung der KOM-LE-Version bei Nachrichten mit KAS-Content hat ergeben, dass die Größe der Nachricht nicht den festgelegten Account-Einstellungen entspricht. TD(18,1/1/1)->PAR 4018
TR-> TD(19,0/1/2)->PAR Sonstige Fehlermeldungen
TR-> TD(20,0/1/1)->PAR Bei der Aktualisierung der PKCS#12-Datei ist ein Fehler aufgetreten TD(20,1/1/1)->PAR 4016
TR-> TD(21,0/1/1)->PAR Die KIM-Version des Clientmoduls ist kleiner als die im Verzeichnisdienst zu seinem Eintrag hinterlegte Version TD(21,1/1/1)->PAR 4017
PAR Die Fehlermeldungen beim Senden einer KIM-Mail werden über den Fachdienst zurück an den Sender übermittelt, da eine direkte Rückgabe der Fehlernachricht zum Client nicht vorgesehen ist. Das Clientmodul befüllt im Fehlerfall das X-KIM-Fehlermeldung-Attribut und sendet dies anschließend über den Fachdienst an den Sender zurück. Die Fehlermeldungen beim Empfang einer KIM-Mail werden auf direkten Weg dem Empfänger zugestellt. Der Client (z. B. PVS) muss die Fehlercodes aus der Tabelle Tab_Fehlercodes_KOMLE-Clientmodule auswerten.
PAR Hinweis: Sollten mehrere negative Ergebnisse auftreten, KANN das Mail-Header-Attribut X-KIM-Fehlermeldung mehrmals verwendet werden.
PAR Beispiel:<br>X-KIM-Fehlermeldung: 4001<br>X-KIM-Fehlermeldung: 4004<br>X-KIM-Fehlermeldung: X99
PAR Die folgende Anforderung bezweckt, dass bei Einsatz mehrerer Clientmodule in unterschiedlichen Versionen, der KIM-Teilnehmer bei Verwendung eines Clientmoduls in einer kleineren Version darüber informiert wird, dieses zu updaten.
REQ(ids=A_21387-01)<b>A_21387-01 - Prüfung der verwendeten Clientmodul-Version beim Senden</b>
PAR Das KOM-LE-Clientmodul MUSS vor dem Versenden einer Nachricht die KOM-LE-Version des Absenders mittels des LDAP-Directory Attributs: komLeData aus dem Verzeichnisdienst [gemSpec_VZD#5] abfragen. Ist die KOM-LE-Version des Clientmoduls kleiner als die im Verzeichnisdienst eingetragene, so MUSS das Clientmodul den Absender mit einer E-Mail darüber informieren. Aus dem Inhalt der E-Mail MUSS hervorgehen, dass die verwendete Clientmodul Version veraltet ist. Die E-Mail ist weder zu signieren noch zu verschlüsseln und entspricht der Delivery Status Notification gemäß [RFC3461-3464]. Ist die KOM-LE-Version des Clientmoduls größer als die im Verzeichnisdienst abgefragte Version MUSS das Clientmodul das LDAP-Directory Attribut: komLeData für den Absender mit der neuen Versionen überschreiben.<br><b>[<=]</b>

REQ(ids=A_22416)<b>A_22416 - Anfragen von technischen Konfigurationsdaten</b>
PAR Das KOM-LE Clientmodul MUSS beim Versenden einer E-Mail die Operation getLimits am Account Manager aufrufen, um alle technischen Konfigurationsdaten eines Nutzers (dataTimeToLive, maxMailSize, quota, remainQuota) zu erhalten. Das Clientmodul KANN für jeden Nutzer-Account die abgerufenen Daten 24 Stunden zwischenspeichern (cachen).<br><b>[<=]</b>

REQ(ids=A_22417)<b>A_22417 - Einfügen des Ablaufdatums in den äußeren Mail-Header</b>
PAR Das Clientmodul MUSS beim Versand-Vorgang der verschlüsselten Mail einen Header "Expires" in den Header der äußeren Nachricht aufnehmen. Der Wert ermittelt sich aus Versandzeitpunkt (TI-Zeit) + TTL (dataTimeToLive) als offset.<br><b>[<=]</b>

REQ(ids=A_21388-01)<b>A_21388-01 - Übermittlung der Clientmodul- und Produkttypversion</b>
PAR Das Clientmodul MUSS im Header Element X-KIM-CMVersion der äußeren Nachricht die VendorID, sowie die Produktversion des verwendeten Clientmoduls gemäß des Formates:<br>"[a-zA-Z0-9_]{1,5}_[0-9]{1,2}\.[0-9]{1,2}\.[0-9]{1,2}(-25[0-5]|-2[0-4][0-9]|-[0-1]?[0-9]?[0-9]){0,1}" eintragen.<br><br>Zusätzlich MUSS das Clientmodul im Header Element X-KIM-PTVersion der äußeren Nachricht die Produkttypversion des Clientmoduls gemäß des Formates:<br> "[0-9]{1,2}\.[0-9]{1,2}\.[0-9]{1,2}(-25[0-5]|-2[0-4][0-9]|-[0-1]?[0-9]?[0-9]){0,1}"eintragen.<br><br>Zusätzlich MUSS das Clientmodul im Header-Element X-KIM-KONVersion der äußeren Nachricht die Version des verwendeten Konnektors gemäß seiner Produktversion im Format "<Productname><ProductType><ProductTypeVersion><HWVersion><FWVersion>  eintragen.<br><b>[<=]</b>

PAR Beispiel:<br>X-KIM-CMVersion: [VendorID]_2.1.2-8<br>X-KIM-PTVersion: 1.5.0-2<br>X-KIM-KONVersion: <secunet konnektor 2.0.0><Konnektor PTV4Plus><4.80.3><2.0.0><4.10.1>
PAR Die Produkttypversion entspricht dabei der Produkttypversion aus dem Produkttypsteckbrief. Die Clientmodulversion entspricht dabei der zugelassenen Produktversion, die im TI-ITSM-System hinterlegt und gepflegt wird.
REQ(ids=A_21389)<b>A_21389 - Übermittlung der Clientmodul- und Produkttypversion an die gematik</b>
PAR Der KIM-Anbieter MUSS der gematik auf Anfrage eine nicht-personenbezogene Gesamtübersicht, der sich im Feld befindenden aktiven KIM-Clientmodule, zur Verfügung stellen. <b>[<=]</b>

PAR -HEADING(ids=3.2)3.2 Umgang mit großen Client-Mails
PAR Dieses Kapitel beschreibt die Verarbeitung von Client-Mails, welche die Größe von 15 MiB überschreiten. Die Größenbeschränkung auf 15 MiB basiert auf Limitierungen der Konnektoroperationen zum Signieren und Verschlüsseln.
PAR Client-Mails mit einer Gesamtgröße bis zu 15 MiB werden entsprechend den Festlegungen in KOM-LE 1.0 behandelt. Übersteigt die Größe einer Client-Mail die 15-MiB-Grenze, wird die gesamte Client-Mail (E-Mail-Daten) durch das KOM-LE-Clientmodul auf einem Speicher des KOM-LE-Fachdienstes (KAS) abgelegt. Das KOM-LE-Clientmodul ersetzt die KOM-LE-Nachricht mit den Metadaten der auf dem KAS abgelegten E-Mail-Daten und versendet sie als signierte und verschlüsselte KOM-LE-Nachricht. Das KOM-LE-Clientmodul des Empfängers erkennt anhand der im Mail Header übergebenen X-KOM-LE-Version, dass es sich um eine KOM-LE 1.5 Nachricht handelt. Es nutzt die im Mail Body enthaltene Information, um die verschlüsselten E-Mail-Daten vom KOM-LE-Fachdienst (KAS) abzurufen, zu entschlüsseln und zu einer Client-Mail zusammenzufügen.
PAR In Kapitel "Schnittstelle I_Attachment_Services" gemäß [gemSpec_FD_KOMLE] wird der Umgang mit großen Client-Mails in einem Sequenzdiagramm erläutert.
PAR -HEADING(ids=3.2.1)3.2.1 Senden von großen Client-Mails
PAR In diesem Kapitel werden Anforderungen an das Clientmodul formuliert, die es erlauben, Client-Mails von über 15 MiB zu versenden.
REQ(ids=A_19355-01)<b>A_19355-01 - Prüfen der Nachrichtengröße</b>
PAR Das KOM-LE-Clientmodul MUSS die Größe der vom KOM-LE-Client erhaltenen Nachricht (gegen den Wert maxMailSize aus der Operation I_AccountLimit_Service::getLimits) prüfen. Im Fehlerfall wird dem KOM-LE-Client der Fehlercode X.3.4 [RFC3463] zurückgegeben.<br><b>[<=]</b>

REQ(ids=A_23467)<b>A_23467 - Übermittlung der KAS-Datenmenge</b>
PAR Das KOM-LE-Clientmodul MUSS bei der Übertragung der KOM-LE-Nachricht an den Fachdienst, die im Kontext KAS verarbeitet wurde, ein Mail-Header-Attribut X-KIM-KAS-Size mit dem Wert befüllen, der dem Attribut size in der KIM-Attachment-Datenstruktur entspricht. <b>[<=]</b>

REQ(ids=A_22340)<b>A_22340 - Cachen vom KOM-LE-Versionen</b>
PAR Das Clientmodul MUSS das Cachen von KOM-LE-Versionen der Mail-Empfänger nach der Abfrage am VZD für eine maximale Zeitdauer von 24 Stunden unterstützen.<br> <b>[<=]</b>

REQ(ids=A_19357-02)<b>A_19357-02 - Verarbeitung einer Client-Mail größer 15 MiB</b>
PAR Das KOM-LE-Clientmodul MUSS gewährleisten, dass die von einem Clientsystem übergebene Client-Mail vor der Übergabe an den Konnektor 15 MiB nicht überschreitet. Übersteigt die Größe einer Client-Mail die 15 MiB-Grenze MUSS das Clientmodul die gesamte Client-Mail verschlüsselt auf einem Speicher des KOM-LE-Fachdienstes (KAS) abgelegen und die Metadaten der auf dem KAS abgelegten Client-Mail in die zu versendende KOM-LE-Mail einbetten.<br><b>[<=]</b>

REQ(ids=A_19358-01)<b>A_19358-01 - Erzeugung symmetrischer Schlüssel</b>
PAR Das KOM-LE-Clientmodul MUSS für die Verschlüsselung der auf dem KAS abzulegenden E-Mail-Daten einen symmetrischen Schlüssel generieren. Hierbei MUSS das KOM-LE-Clientmodul die Kriterien gemäß [gemSpec_Krypt] einhalten.<br><b>[<=]</b>

PAR Hinweis: Der Initialisierungsvektor muss vom Sender pro Nachricht zufällig erzeugt werden. Dieser wird nach Konvention dem Chiffrat (=> ersten 12 Byte) vorangestellt: [IV + Chiffrat].
REQ(ids=A_19364-02)<b>A_19364-02 - Freigabelink in die Mail aufnehmen</b>
PAR Das KOM-LE-Clientmodul MUSS das Ergebnis der Operation add_Attachment [gemSpec_FD_KOMLE] prüfen. Bei einem HTTP-Status 201 MUSS das KOM-LE-Clientmodul den zurückgelieferten Freigabelink in die KIM-Attachment-Datenstruktur im Mail-Body der zu versendenden KOM-LE-Nachricht aufnehmen.<br><b>[<=]</b>

PAR Mit der folgenden Anforderung wird sichergestellt, dass ein Client nicht bereits unerwünschten Kontent (über die Attachment Datenstruktur) in die an das Clientmodul übergebene KIM-Mail eingefügt hat.
REQ(ids=A_22341)<b>A_22341 - Prüfen der Nachrichtenanhänge</b>
PAR Das KOM-LE-Clientmodul MUSS die vom KOM-LE-Client erhaltene Nachricht auf Vorhandensein von MIME konformen Content-Headern mit Content-Type: text/plain; charset=utf-8 sowie ein Content-Disposition: x-kas prüfen. Ist mindestens ein derartiger Content-Header in der Nachricht enthalten, wird dem KOM-LE-Client der SMTP-Antwortcode 451 zurückgegeben.<br> <b>[<=]</b>

REQ(ids=A_19359-07)<b>A_19359-07 - Einbetten von Informationen großer Nachrichten</b>
PAR Das KOM-LE-Clientmodul MUSS für die auf dem KAS abgelegten E-Mail-Daten folgende KIM-Attachment-Datenstruktur gemäß [Attachment_Schema] im Mail-Bod befüllen und als einziges Body-Element in den Mail-Body der vorverarbeiteten originalen Client-Mail durch den MIME-Part Content-Disposition: x-kas ersetzen.
PAR (ids=Tabelle-1-KIM-Attachment-Datenstruktur)Tabelle 1 KIM-Attachment-Datenstruktur

TABLE(rows=5,cols=258+347)->
TR-> TH(0,0/1/1)->PAR Attribut in KIM-Attachment-Datenstruktur TH(0,1/1/1)->PAR Wert
TR-> TD(1,0/1/1)->PAR link TD(1,1/1/1)->PAR Freigabelink der verschlüsselten E-Mail-Daten gemäß [A_19364]
TR-> TD(2,0/1/1)->PAR k TD(2,1/1/1)->PAR AES-GCM Key der E-Mail-Daten (symmetrischer Schlüssel) im Base64 Format 
TR-> TD(3,0/1/1)->PAR hash TD(3,1/1/1)->PAR Hashwert der E-Mail-Daten (entsprechend A_19644 [gemSpec_Krypt] zu bilden) im Base64 Format
TR-> TD(4,0/1/1)->PAR size TD(4,1/1/1)->PAR Größe der E-Mail-Daten in Byte
PAR Vor der KIM-Attachment-Datenstruktur MUSS ein MIME konformer Content Header mit
PAR Content-Type: text/plain
PAR ;
PAR charset=utf-8
PAR  sowie ein
PAR Content-Disposition: x-kas
PAR eingefügt werden.
PAR <b>[<=]</b>

PAR Hinweis: Bei den E-Mail-Daten handelt es sich um die verschlüsselte Client-Mail die auf dem KAS abgelegt wurde und über den Freigabelink eindeutig zuordenbar ist. In der zu erzeugenden KOM-LE-Nachricht wird der Mail-Header der Client-Mail übernommen und der Mail-Body mit der KIM-Attachment-Datenstruktur ersetzt. Das folgende Beispiel soll die Verarbeitung verdeutlichen:
PAR Beispiel für eine Client-Mail mit zwei Anhängen die 15 MiB überschreitet:
PAR From: "Sender" <sender@maildomain.de><br>To: <empfaenger@maildomain.de><br>Message-Id: <II8HEDLEUEU4.EG0B98QUZNPM2@STST-TEST><br>Subject: Mail mit zwei Anhängen<br>Mime-Version: 1.0
PAR X-KIM-Dienstkennung: KIM-Mail;Default;V1.0<br>X-KIM-CMVersion: [VendorID]_2.1.2-8<br>X-KIM-PTVersion: 1.5.0-2<br>X-KIM-KONVersion: <secunet konnektor 2.0.0><Konnektor PTV4Plus><4.80.3><2.0.0><4.10.1><br>X-KIM-Sendersystem: Beispiel-PVS;V2.81
PAR Content-Type: multipart/mixed; boundary="body_part_boundary"
PAR --body_part_boundary<br>Content-Type: text/plain; charset=utf-8<br>Content-Transfer-Encoding: quoted-printable<br>Content-Disposition: inline<br><br>Ein Dokument und eine Aufnahme im Anhang.<br><br>--body_part_boundary<br>Content-Type: application/msword; name="MR-2020-04-01-xyz.doc"<br>Content-Transfer-Encoding: base64<br>Content-Disposition: attachment; filename="MR-2020-04-01-xyz.doc"<br><br>ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCD<br>[Anhang gekürzt]<br>ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCD<br>ABCDABCDABCDABCDABCDABCDABCD==<br><br>--body_part_boundary<br>Content-Type: image/jpeg; name="Roentgenbild-375632378.jpg"<br>Content-Transfer-Encoding: base64<br>Content-Disposition: attachment; filename="Roentgenbild-375632378.jpg"<br><br>/9j/4AAQSkZJRgABAQEASSBIAAD/2wBDAAEBAQEBAQEBAQEBAQEBAQEDAQEBAQEBAQEBAEEBAQEB<br>[Anhang gekürzt]<br>RAQFRBcwRD8H6y8B+voDMoSa1I4Md6+UMzwKVdT3W/fz4cotgwwoZDa1sbvrwU1QcEyNlI3KwKwZ<br>uiFj1Ka6BVAM2WU4rCh+xfXS1/p573//2Q==<br><br>--body_part_boundary--
PAR Die zu erzeugende KOM-LE-Nachricht mit der KIM-Atachment-Datenstruktur vor der Verarbeitung durch den Konnektor:
PAR From: "Sender" <sender@maildomain.de><br>To: <empfaenger@maildomain.de><br>Message-Id: <II8HEDLEUEU4.EG0B98QUZNPM2@STST-TEST><br>Subject: Mail mit zwei Anhängen<br>Mime-Version: 1.0
PAR X-KIM-Dienstkennung: KIM-Mail;Default;V1.0<br>X-KIM-CMVersion: [VendorID]_2.1.2-8<br>X-KIM-PTVersion: 1.5.0-2<br>X-KIM-KONVersion: <secunet konnektor 2.0.0><Konnektor PTV4Plus><4.80.3><2.0.0><4.10.1><br>X-KIM-Sendersystem: Beispiel-PVS;V2.81
PAR Content-Type: text/plain; charset=utf-8<br>Content-Disposition: x-kas
PAR   {<br>    "link":     "HTTPS://KIM-FD1.telematik.de/CXFDTE82346dfzwr7634dfs76sd76sdtzq376e3tzsd",<br>    "k":        "RzVEY3M0MzkmNGZkc2RneCVoX2tkdFQlNXczZnZDdDM2ZGZ2eGZzJDYxITJndmR1VWpzKGk=",<br>    "hash":     "Z6A65Z2dasI2I00mM7uxtQjLsEwwl+WLMnDw8eLntaA=",<br>    "size":     25525700<br>   }
REQ(ids=A_19360-02)<b>A_19360-02 - Verschlüsselung der E-Mail-Daten</b>
PAR Das KOM-LE-Clientmodul MUSS die E-Mail-Daten, welche auf dem KAS abgelegt werden, mit dem erzeugten symmetrischen Schlüssel gemäß GS-A_5016 [gemSpec_Krypt] verschlüsseln.<br><b>[<=]</b>

REQ(ids=A_19361-01)<b>A_19361-01 - Lokalisierung des KIM Fachdienstes</b>
PAR Das KOM-LE-Clientmodul MUSS mittels DNS Service Discovery den FQDN vom KIM Fachdienst und dessen zugehörigen KAS des Senders ermitteln.<br><b>[<=]</b>

PAR Die für die Lokalisierung  benötigten DNS Service-Records werden in der [gemSpec_FD_KOMLE] im Kapitel 3.4 Service Lokalisierung beschrieben.
REQ(ids=A_19362)<b>A_19362 - Client Authentifizierung</b>
PAR Das KOM-LE-Clientmodul MUSS eine beidseitige gesicherte TLS-Verbindung zum KAS des Fachdienstes aufbauen.<br><b>[<=]</b>

PAR Der KAS ist ein Bestandteil des Fachdiensts. Deshalb gelten für die TLS-Verbindungen (inklusive genutzter Zertifikate) zum KAS ebenfalls die Festlegungen von Kap. 4.1.4.
REQ(ids=A_19363-03)<b>A_19363-03 - Übertragung von E-Mail-Daten</b>
PAR Das KOM-LE-Clientmodul MUSS für die Übertragung von E-Mail-Daten, die vom KAS des Fachdienstes bereitgestellte Operation add_Attachment aufrufen.<br><br> Im Fehlerfall MUSS das Clientmodul das Clientsystem mit dem SMTP-Antwortcode "451“ (gemäß [RFC3463]) benachrichtigen und den Versandt zum MTA mit dem RSET-Kommando abbrechen, da die Nachricht nicht übertragen werden konnte. Verarbeitungsschritte des Clientmoduls, welche die originale Nachricht betreffen (z. B. Anpassung Headerinformationen) MÜSSEN vor der Übertragung der originalen E-Mail-Daten zum KAS erfolgen.<br><b>[<=]</b>

REQ(ids=A_19365-02)<b>A_19365-02 - Senden der KOM-LE-Nachricht</b>
PAR Das KOM-LE-Clientmodul MUSS die KOM-LE-Nachricht, welche das Body-Element der KIM-Attachment-Datenstruktur beinhaltet, entsprechend den Festlegungen für Mails kleiner oder gleich 15 MiB senden. <b>[<=]</b>

REQ(ids=A_22419-01)<b>A_22419-01 - Behandlung von Quota-Überschreitung</b>
PAR Wenn das Clientmodul bei der Übertragung von E-Mail-Daten einen Fehlercode 507 vom KAS erhält, MUSS es den Mailversand abbrechen und dem KOM-LE-Client den SMTP-Fehlercode 521 gemäß [RFC3463] zurückgeben und den Versandt zum MTA mit dem RSET-Kommando abbrechen.<br><b>[<=]</b>

REQ(ids=A_22427-01)<b>A_22427-01 - I_Attachment_Services - Content-Length</b>
PAR Das KOM-LE-Clientmodul MUSS bei der Übertragung der E-Mail-Daten das HTTP-Header-Element "Content-Length" immer mit der Gesamt-Länge des Request-Bodys befüllen.<br><b>[<=]</b>

REQ(ids=A_19356-06)<b>A_19356-06 - Prüfen der Version des Empfängers</b>
PAR Das KOM-LE-Clientmodul MUSS die vom Empfänger verwendete KOM-LE-Version prüfen. Das KOM-LE-Clientmodul MUSS dazu die KOM-LE-Version des Empfängers mittels des LDAP-Directory Attributs: komLeData aus dem Verzeichnisdienst [gemSpec_VZD#5] abfragen. Ist das LDAP-Directory Attribut: komLeData für den Empfänger undefiniert, dann muss ein KOM-LE-Clientmodul mit einer Version 1.0 angenommen werden.<br>Wenn eine Client-Mail größer als 15 MiB versendet werden soll, dann MUSS für jeden Empfänger durch Abfrage des Eintrags im Verzeichnisdienst geprüft werden, ob die KOM-LE-Version des Empfängers mit einem + (zum Beispiel Wert: 1.5+) erweitert wurde. Wenn die KOM-LE-Version des Empfängers nicht mit einem + (zum Beispiel Wert: 1.5+) erweitert wurde, MUSS das KOM-LE-Clientmodul diesen Empfänger aus der Mail entfernen. Beim Entfernen eines Empfängers MUSS das KOM-LE-Clientmodul den Absender mit einer E-Mail über den Fehlerfall informieren. Aus dem Inhalt der Fehlernachricht müssen alle aus der Mail entfernten Empfänger hervorgehen. Die Fehlernachricht ist weder zu signieren noch zu verschlüsseln und entspricht der Delivery Status Notification gemäß [RFC3461-3464]. Kann die Mail für keinen der Empfänger versendet werden, wird das Senden der Nachricht abgebrochen. Dabei wird dem MTA das RSET-Kommando gesendet und das Clientsystem wird mit dem SMTP-Antwortcode "451" über den Fehlerfall informiert.<br><b>[<=]</b>

PAR -HEADING(ids=3.2.2)3.2.2 Empfangen von großen Client-Mails
PAR In diesem Kapitel werden Anforderungen an das Clientmodul formuliert, die es erlauben, große Client-Mails zu empfangen.
REQ(ids=A_23512)<b>A_23512 - Auswertung der KOM-LE-Version bei Nachrichten mit KAS-Content</b>
PAR Das Clientmodul MUSS beim Empfang einer KOM-LE-Nachricht mit einer KIM-Attachment-Datenstruktur prüfen, ob für den Empfänger eine Freigabe zum Empfang großer Nachrichten vorliegt. Ist dies nicht der Fall, MUSS das Clientmodul die Weiterverarbeitung der Nachricht und damit dem Abruf der KAS-Daten unterbinden. Das Clientmodul MUSS in diesem Fall eine Fehlernachricht an den Empfänger erzeugen. Als Fehlernachricht MUSS eine multipart/mixed MIME-Nachricht an das Clientsystem übermittelt werden, welche die verschlüsselte KOM-LE-S/MIME-Nachricht als eine message/rfc822 MIME-Einheit beinhaltet. So kann, nach Anpassung der KOM-LE-Version, die Nachricht an den Empfänger weitergeleitet und erneut abgerufen werden. Zusätzlich muss diese multipart/mixed MIME-Nachricht eine text/plain MIME-Einheit mit geeignetem Fehlertext enthalten. Die orig-date, from, sender, reply-to, to und cc Header-Elemente der neuen multipart/mixed Nachricht werden aus der empfangenen KOM-LE-S/MIME-Nachricht übernommen. Das subject Header-Element der neuen multipart/mixed Nachricht erhält den Wert „Die KIM-Nachricht kann nicht empfangen werden, weil der Empfang großer Nachrichten nicht aktiviert wurde“. Im Fehlertext der Nachricht muss der Empfänger darauf hingewiesen werden, dass eine Nachricht empfangen wurde, die aufgrund deren Größe gemäß der Account-Einstellung (KOM-LE-Version) nicht verarbeitet werden darf. Das Header-Element X-KIM-Fehlermeldung MUSS den Fehlercode 4018 enthalten. Es MUSS darauf hingewiesen werden, wie entsprechende Konfigurationen über den Account-Manager angepasst werden können und wie der Empfänger den Empfang durch Weiterleitung der Fehlernachricht wiederholen kann. <b>[<=]</b>

PAR Hinweis: Die Prüfung durch das CM des Empfängers erfolgt, indem das CM prüft ob die empfangene Mail den Header X-KIM-KAS-Size enthält und einen Wert größer 15MiB hat. Wenn das zutrifft, dann muss im VZD Eintrag des Empfängers eine Freigabe zum Empfang großer KIM-Nachrichten vorhanden sein.
REQ(ids=A_19367)<b>A_19367 - Empfangen der Nachricht</b>
PAR Das KOM-LE-Clientmodul MUSS die E-Mail-Nachricht empfangen.<br> <b>[<=]</b>

REQ(ids=A_19368)<b>A_19368 - Client Authentifizierung</b>
PAR Das KOM-LE-Clientmodul MUSS eine beidseitige gesicherte TLS-Verbindung  zum KAS des Fachdienstes aufbauen.<br><b>[<=]</b>

PAR Die Anforderungen an die TLS Authentifizierung und die Zertifikate entsprechen den Anforderungen von dem Fachdienst.
REQ(ids=A_19369-02)<b>A_19369-02 - Ermittlung von Informationen der auf dem KAS abgelegten E-Mail-Daten</b>
PAR Das KOM-LE-Clientmodul MUSS den Hash-Wert, den Freigabelink sowie den symmetrischen Schlüssel aus der KIM-Attachment-Datenstruktur, aus dem Body-Element der abgerufenen KOM-LE-Nachricht entnehmen. Das KOM-LE-Clientmodul DARF KOM-LE-Nachrichten NICHT verarbeiten, die mehr als eine KIM-Attachment-Datenstruktur gemäß [A_19359] beinhalten.<br><br>Ist mehr als eine KIM-Attachment-Datenstruktur in der abgerufenen KOM-LE-Nachrichten enthalten, MUSS das Clientmodul den Nutzer über den Fehlerfall informieren. Hierfür MUSS das Clientmodul den Mail-Body der entschlüsselten originalen Nachricht durch den folgenden Inhalt "Nachricht konnte aufgrund uneindeutiger Informationen nicht abgerufen werden" als text/plain MIME-Einheit ersetzen.<br><b>[<=]</b>

REQ(ids=A_19370-04)<b>A_19370-04 - Download von E-Mail-Daten</b>
PAR Das KOM-LE-Clientmodul MUSS die E-Mail-Daten anhand des entnommenen Freigabelinks via der Operation read_Attachment am KAS des Fachdienstes herunterladen.<br><br>Wenn beim Herunterladen der E-Mail-Daten ein Fehler auftritt, dann MUSS das KOM-LE-Clientmodul die empfangene, dem KOM-LE-S/MIME-Profil entsprechende Nachricht, als eine message/rfc822 MIME-Einheit in einer neuen multipart/mixed MIME-Nachricht dem Clientsystem übermitteln. Zusätzlich muss diese neue multipart/mixed MIME-Nachricht eine text/plain MIME-Einheit mit dem Fehlertext [Tab_Fehlertext_Download] enthalten. Die orig-date, from, sender, reply-to, to und cc Header-Elemente der neuen multipart/mixed Nachricht werden aus der empfangenen Nachricht übernommen. Das subject Header-Element der neuen multipart/mixed Nachricht erhält den Wert „Die E-Mail-Daten konnten nicht abgerufen werden“.<br><b>[<=]</b>

PAR Bei einer solchen Fehlernachricht gibt es folgende Optionen:

LIST->
LITEM->PAR Wenn die empfangene Nachricht vom Server gelöscht wurde, hat der Nutzer die Möglichkeit, durch das Senden an die eigene E-Mail-Adresse und das anschließende Abholen die Verarbeitung zu wiederholen.LITEM->PAR Wenn die empfangene Nachricht nicht vom Server gelöscht wurde, wird beim nächsten Abholen die Verarbeitung wiederholt.
PAR Tabelle "Tab_Fehlertext_Download Fehlertext beim Download von E-Mail-Daten" enthält den Fehlertext, der in die Nachricht eingeführt wird, wenn der Download von E-Mail-Daten nicht durchgeführt werden konnte.
PAR (ids=Tabelle-2-Tab_Fehlertext_Download-Fehlertext-beim-Download-von-E-Mail-Daten)Tabelle 2 Tab_Fehlertext_Download Fehlertext beim Download von E-Mail-Daten

TABLE(rows=3,cols=358+389)->
TR-> TH(0,0/1/1)->PAR Bedingung TH(0,1/1/1)->PAR Fehlertext
TR-> TD(1,0/1/1)->PAR E-Mail-Daten konnten nicht heruntergeladen werden. TD(1,1/1/1)->PAR Die E-Mail-Daten dieser Nachricht konnten nicht heruntergeladen werden. Bitte leiten Sie diese Nachricht nach einer angemessenen Zeit an Ihre eigene E-Mail-Adresse (<Email Adresse>) weiter. Beim nächsten Abholen wird der Download wiederholt.
TR-> TD(2,0/1/1)->PAR E-Mail-Daten konnten nicht entschlüsselt werden. TD(2,1/1/1)->PAR Die E-Mail-Daten dieser Nachricht konnten nicht entschlüsselt werden, bitte kontaktieren Sie den Absender der Nachricht.
REQ(ids=A_22412-01)<b>A_22412-01 - Behandlung von Zugriffs-Limitierung</b>
PAR Das Clientmodul MUSS bei Aufruf der Operation read_Attachment bei der Rückgabe des HTTP-Fehlercodes 429, das Mail-Header-Attribut X-KIM-Fehlermeldung mit dem Wert gemäß Tabelle „Tab_Fehlercodes_KOMLE-Clientmodule“ 4013 in die empfangene KOM-LE-Nachricht befüllen.<br><br>Ebenfalls MUSS das KOM-LE-Clientmodul die empfangene, dem KOM-LE-S/MIME-Profil entsprechende Nachricht, als eine message/rfc822 MIME-Einheit in einer neuen multipart/mixed MIME-Nachricht dem Clientsystem übermitteln. Zusätzlich muss diese neue multipart/mixed MIME-Nachricht eine text/plain MIME-Einheit mit dem Fehlertext gemäß der Tabelle "Tab_Fehlercodes_KOMLE-Clientmodule" enthalten. Die orig-date, from, sender, reply-to, to und cc Header-Elemente der neuen multipart/mixed Nachricht werden aus der empfangenen Nachricht übernommen. Das subject Header-Element der neuen multipart/mixed Nachricht erhält den Wert „Die E-Mail-Daten konnten nicht abgerufen werden“.<br><b>[<=]</b>

PAR Bei einer solchen Fehlernachricht gibt es folgende Optionen:

LIST->
LITEM->PAR  Wenn die empfangene Nachricht vom Server gelöscht wurde, hat der Nutzer die Möglichkeit, durch das Senden an die eigene E-Mail-Adresse und das anschließende Abholen die Verarbeitung zu wiederholen.LITEM->PAR Wenn die empfangene Nachricht nicht vom Server gelöscht wurde, wird beim nächsten Abholen die Verarbeitung wiederholt.
PAR Tabelle "Tab_Fehlercodes_KOMLE-Clientmodule" enthält den Fehlertext, der in die Nachricht eingefügt wird, wenn der Abruf von E-Mail-Daten zu häufig ausgeführt wurde.
REQ(ids=A_19371-04)<b>A_19371-04 - Entschlüsselung vom KAS abgerufener E-Mail-Daten</b>
PAR Das KOM-LE-Clientmodul MUSS die heruntergeladenen E-Mail-Daten mit dem symmetrischen Schlüssel entschlüsseln.<br><br>Wenn beim Entschlüsseln der E-Mail-Daten ein Fehler auftritt, MUSS das KOM-LE-Clientmodul den Mail-Body der entschlüsselten originalen Nachricht durch den folgenden Inhalt "Abgerufene E-Mail-Daten konnten nicht entschlüsselt werden" als text/plain MIME-Einheit ersetzen. Zusätzlich MUSS das Clientmodul das Mail-Header-Attribut X-KIM-Fehlermeldung mit dem Wert "4007" gemäß Tabelle „Tab_Fehlercodes_KOMLE-Clientmodule“ befüllen.<br><b>[<=]</b>

REQ(ids=A_19372-03)<b>A_19372-03 - Prüfen der E-Mail-Daten</b>
PAR Das KOM-LE-Clientmodul MUSS den Hash-Wert der entschlüsselten E-Mail-Daten entsprechend [A_19644] bilden und mit dem Hash-Wert aus der abgerufenene KIM-Attachment-Datenstruktur vergleichen. Bei einer Nichtübereinstimmung MUSS das KOM-LE-Clientmodul den Mail-Body der entschlüsselten originalen Nachricht durch den folgenden Inhalt als text/plain MIME-Einheit ersetzen und an den Empfänger weiterleiten:<br>"Beim Empfang dieser KIM-Nachricht wurde eine Sicherheitsverletzung erkannt. Dies kann eine technisches Ursache haben oder auf eine missbräuchliche Nutzung des KIM-Dienstes hinweisen. Zu Ihrem Schutz wurde der Inhalt dieser Nachricht durch diesen Text ausgetauscht. Bitte antworten Sie nicht auf diese Nachricht. Sie können diese Nachricht löschen. [+ optionaler Freitext der Anbieter]".<br> <br> Zusätzlich MUSS das Clientmodul das Mail-Header-Attribut X-KIM-Fehlermeldung mit dem Wert 4012 gemäß Tabelle „Tab_Fehlercodes_KOMLE-Clientmodule“ befüllen.<br><b>[<=]</b>

REQ(ids=A_19374-03)<b>A_19374-03 - Zusammensetzen der Mail</b>
PAR Das KOM-LE-Clientmodul MUSS die vom KAS abgerufenen und entschlüsselten E-Mail-Daten, als originale Nachricht (Client-Mail) wiederherstellen und ergänzt um den Vermerk der erfolgreichen Verarbeitung (Entschlüsselung und Integritätsprüfung) an das Clientsystem übermitteln.<br><b>[<=]</b>

PAR -HEADING(ids=3.3)3.3 Senden von Nachrichten
PAR -HEADING(ids=3.3.1)3.3.1 Übersicht
PAR Beim Senden von KOM-LE-Nachrichten sorgt das Clientmodul dafür, dass die gesendeten KOM-LE-Nachrichten digital signiert und verschlüsselt dem MailTransfer Agent des KOM-LE-Fachdienstes (weiter im Text als MTA bezeichnet), bei dem der Sender registriert ist, übermittelt werden. Bei Client-Mails größer 15 MiB wird die Client-Mail symmetrisch verschlüsselt und auf dem KAS des Fachdienstes abgespeichert.
PAR Abbildung 5 stellt die Interaktionen zwischen den am Senden von KOM-LE-Nachrichten beteiligten Komponenten dar. Aus der Sicht des Clientsystems agiert das Clientmodul als ein MTA und aus der Sicht des MTAs des Fachdienstes agiert das Clientmodul als MUA. Für Funktionen wie Datentransport, kryptographische Operationen und Kommunikation mit dem Verzeichnisdienst verwendet das Clientmodul entsprechende Dienste der TI-Plattform.

PAR Abbildung 5: Abb_Send_Msg Senden von Nachrichten
PAR Beim Senden von Nachrichten findet die Kommunikation zwischen dem Clientsystem, dem Clientmodul und dem MTA über SMTP statt. Das Clientmodul fungiert als SMTP Proxy, der das Clientsystem mit dem MTA verbindet, die Integrität und Vertraulichkeit der vom Clientsystem gesendeten Nachricht schützt und die Nachricht an den MTA übermittelt.
PAR Sobald die Nachricht komplett dem MTA übertragen wurde und der MTA das Ankommen der Nachricht bestätigt, übergibt das Clientmodul die Verantwortung für die Nachricht an den MTA. Die Übermittlung von Nachrichten zwischen MTAs ist nicht Bestandteil dieser Spezifikation.
PAR Es liegt in der Verantwortung des Clientmoduls sicher zu stellen, dass die Nachricht erfolgreich dem MTA übertragen wird. Falls die Übermittlung einer Nachricht an den MTA fehlschlägt (z.B. bei Verbindungsaufbau mit dem MTA, Authentifizierung gegenüber dem MTA, Verschlüsselung oder Signieren der Nachricht), benachrichtigt das Clientmodul das Clientsystem unter Verwendung entsprechenden SMTP-Antwortcodes über den Fehler.
PAR Beispiel: Verwendet das Clientsystem beim Senden von Nachrichten falsche Anmeldungsdaten, erhält es vom Clientmodul „535 5.7.8 Der Nutzer konnte nicht authentifiziert werden“ als Antwort auf sein AUTH-Kommando.
PAR Das Verhalten des Clientmoduls beim Senden von Nachrichten wird mit Hilfe der in Abbildung 6 dargestellten Zustandsmuster beschrieben. Die im Dokument dargestellten Zustände haben nur illustrativen und keinen normativen Charakter. Die Umsetzung kann sich unterscheiden, solange das Ergebnis das Gleiche ist. Die den Zuständen zugeordnete Anforderungen sind normativ, können aber außerhalb des Kontexts dieser Zustände umgesetzt werden.

PAR Abbildung 6: Abb_State_CM_Send Zustände Clientmodul beim Senden von Nachrichten
PAR Das Clientmodul lauscht auf einem TCP Port und wartet bis ein Clientsystem mit ihm eine Verbindung aufbaut. Sobald dies passiert, geht das Clientmodul in den CONNECT-Zustand über und betrachtet die SMTP-Verbindung als geöffnet. Die Verbindung zwischen dem Clientsystem und dem Clientmodul muss mit TLS geschützt werden.
PAR Im CONNECT-Zustand führt das Clientmodul einen SMTP-Dialog mit dem Clientsystem, in dem ihm die Anmeldedaten des Nutzers sowie die Adresse und die Portnummer des MTAs mitgeteilt werden. Sobald die Anmeldedaten und die Adresse des MTAs übermittelt sind, baut das Clientmodul eine über TLS geschützte SMTP-Verbindung mit dem MTA auf, authentifiziert sich und geht in den PROXY-Zustand über.
PAR Im PROXY-Zustand leitet das Clientmodul SMTP-Kommandos und SMTP-Antwortcodes zwischen dem Clientsystem und dem MTA weiter, bis das Clientsystem mit dem DATA-Kommando die Übertragung einer Nachricht initiiert. Sobald das Clientsystem anfängt, Inhalte einer Nachricht zu übertragen, geht das Clientmodul in den PROCESS-Zustand über.
PAR In PROCESS-Zustand wird die Nachricht entsprechend dem KOM-LE-S/MIME-Profile [gemSMIME_KOMLE] geschützt und anschließend an den MTA übermittelt. Sobald die Nachricht erfolgreich an den MTA übertragen wurde oder im Fehlerfall, geht das Clientmodul in den PROXY-Zustand zurück.
PAR Nachdem die Verbindungen zwischen dem Clientsystem, dem Clientmodul und dem MTA aufgebaut wurden, übermittelt das Clientmodul die SMTP-Meldungen zwischen dem Clientsystem und dem MTA so lange die beiden Verbindungen bestehen.
PAR -HEADING(ids=3.3.2)3.3.2 CONNECT-Zustand
PAR Sobald die TCP-Verbindung zwischen dem Clientsystem und dem Clientmodul aufgebaut ist, geht das Clientmodul in den CONNECT-Zustand über.
PAR -HEADING(ids=3.3.2.1)3.3.2.1 Initialisierung
REQ(ids=KOM-LE-A_2007)<b>KOM-LE-A_2007 - SMTP Begrüßung</b>
PAR Nachdem die SMTP-Verbindung zwischen dem Clientsystem und dem Clientmodul aufgebaut ist, MUSS das Clientmodul dem Clientsystem die SMTP-Begrüßung senden. Um zu signalisieren, dass Extended SMTP unterstützt wird, muss die Begrüßung „ESMTP“ enthalten.
PAR <b>[<=]</b>

PAR Beispiel einer solchen Begrüßung: 220 KOM-LE-Clientmodul ESMTP
PAR Das Clientmodul führt einen SMTP-Dialog mit dem Clientsystem bis zum Punkt, an dem das Clientsystem ihm die Adresse und die Portnummer des MTAs als einen Teil des während des Authentifizierungsverfahrens übertragenen Benutzernamens mitteilt (siehe Kapitel 3.2.2.2).
PAR Tabelle Tab_SMTP_Ant_Init beschreibt Antworten, die das Clientmodul dem Clientsystem im CONNECT-Zustand sendet.
PAR (ids=Tabelle-3)Tabelle 3: Tab_SMTP_Ant_Init Antworten Clientmodul im CONNECT-Zustand

TABLE(rows=8,cols=135+252)->
TR-> TH(0,0/1/1)->PAR SMTP-Kommando<br>(Clientsystem -> Clientmodul) TH(0,1/1/1)->PAR SMTP-Antwortcode<br>(Clientmodul -> Clientsystem)
TR-> TD(1,0/1/1)->PAR HELO TD(1,1/1/1)->PAR “250 OK” Antwortcode
TR-> TD(2,0/1/1)->PAR EHLO TD(2,1/1/1)->PAR “250 OK” Antwortcode mit folgenden EHLO Kennworten:<br>SIZE <size><br>AUTH LOGIN PLAIN<br>8BITMIME<br>ENCHANCEDSTATUSCODES<br>DSN<br>und <size> gleich oder großer als 35882577
TR-> TD(3,0/1/1)->PAR AUTH TD(3,1/1/1)->PAR Anmeldungsdaten erhalten und Verbindungsaufbau mit dem MTA beginnen (siehe Kapitel 3.2.2.2)
TR-> TD(4,0/1/1)->PAR RSET, NOOP TD(4,1/1/1)->PAR „250 OK“ Antwortcode
TR-> TD(5,0/1/1)->PAR MAIL, RCPT, DATA TD(5,1/1/1)->PAR „530 5.7.0“ Antwortcode (Authentication required)
TR-> TD(6,0/1/1)->PAR QUIT TD(6,1/1/1)->PAR „221 OK“ Antwortcode senden und die Verbindung mit dem Clientsystem schließen
TR-> TD(7,0/1/1)->PAR Andere Meldungen TD(7,1/1/1)->PAR „502  5.5.1“ Antwortcode (Invalid command)
REQ(ids=KOM-LE-A_2008)<b>KOM-LE-A_2008 - Initialer SMTP-Dialog</b>
PAR Das Clientmodul MUSS, nachdem die SMTP-Verbindung zwischen dem Clientsystem und dem Clientmodul aufgebaut wird und bis zum Punkt an dem das Clientsystem die Bestätigung des Erfolgs oder Misserfolgs seiner Authentifizierung erwartet, einen SMTP-Dialog entsprechend der Tabelle Tab_SMTP_Ant_Init mit dem Clientsystem führen.
PAR <b>[<=]</b>

PAR -HEADING(ids=3.3.2.2)3.3.2.2 Verbindungsaufbau mit MTA
PAR Das Clientmodul kann die Verbindung mit dem MTA nur dann aufbauen, wenn ihm das Clientsystem die Adresse des MTAs und die Portnummer des SMTP-Dienstes übermittelt. Das Clientmodul erwartet, dass ihm der Domain Name oder die IP-Adresse und die Portnummer während des Authentifizierungsverfahrens als Teil des Benutzernamens mitgeteilt werden.
PAR Das Clientmodul führt das Authentifizierungsverfahren mit dem Clientsystem bis zu dem Punkt, an dem es mit dem entsprechenden Antwortcode die Authentifizierung akzeptieren oder ablehnen muss. Das Clientmodul allein kann das Clientsystem nicht authentifizieren. Die Authentizität der Zugangsdaten kann nur vom MTA überprüft werden. Dazu authentifiziert sich das Clientmodul im Auftrag vom Clientsystem gegenüber dem MTA.
PAR Die MTA-Adresse und die Portnummer des SMTP-Dienstes sind als Teil des SMTP-Benutzernamens vom Clientsystem zu übergeben. Sie sind vom eigentlichen Benutzernamen durch das Zeichen ’#’ getrennt und als adresse:port String formatiert.
PAR Um mit der SM-B über den Konnektor kommunizieren zu können, werden dem KOM-LE-Clientmodul ebenfalls als Teil des SMTP-Benutzernamens, die Parameter

LIST->
LITEM->PAR MandantId,LITEM->PAR ClientSystemId undLITEM->PAR WorkplaceIdLITEM->PAR KonnektorId (optional)
PAR übergeben (siehe Kapitel 3.5 und [gemSpec_Kon] für Details zu MandantId, ClientSystemId und WorkplaceId). Der optionale Parameter KonnektorID, als Bestandteil des Aufrufkontext für SM-B, ermöglicht die Unterstützung von Multikonnektor-Umgebungen. Die Parameter entsprechen denen des aufrufenden Clients und werden voneinander durch das Zeichen ’#’ getrennt.
PAR Der Aufbau des SMTP-Benutzernamens entspricht somit dem folgenden Muster und hat der den Parametern vorangestellten Nummer in der Reihenfolge zu entsprechen:
PAR [0] Benutzername<br>[1] <Domain Adresse des SMTP-Servers>:<Port><br>[2] MandantId<br>[3] ClientsystemId<br>[4] WorkplaceId<br>— <optional> —<br>[5] KonnektorId<br>[...]

PAR Abbildung 7: Abb_MTA_Nutzername Format des SMTP- Benutzernamens
PAR Beispiel:
PAR Bei folgenden Informationen

LIST->
LITEM->PAR Benutzername des Clients = „erik.mustermann@hrst_domain.kim.telematik“,LITEM->PAR Domain Adresse des MTAs = „hrst_domain.kim.telematik“ und Portnummer = 465,LITEM->PAR MandantId = 1,LITEM->PAR ClientsystemId = KOM_LE,LITEM->PAR WorkplaceId = 7LITEM->PAR KonnektorId = Konn_1
PAR erwartet das Clientmodul, dass das Clientsystem ihm folgenden SMTP-Benutzernamen als String überträgt:
PAR erik.mustermann@hrst_domain.kim.telematik#hrst_domain.kim.telematik:465#1#KOM_LE#7#Konn_1
PAR Das KOM-LE-Clientmodul bricht die Kommunikation mit dem entsprechende SMTP-Antwortcode ab (siehe Tabelle Tab_SMTP_Verbindung), wenn der erhaltene SMTP-Benutzername nicht alle erforderlichen Parameter enthält. Beinhaltet der SMTP-Benutzername zusätzliche optionale durch ‚#’ abgegrenzte Parameter (z. B. #KonnektorId), dann müssen diese Parameter vom Clientmodul ausgewertet werden und der Sendevorgang wird fortgesetzt.
PAR Für SMTP-Authentifizierung existieren sowohl Mechanismen für die Übertragung von Nutzername und Passwort im Klartext (PLAIN und LOGIN) als auch Challenge-Response-Mechanismen. Die auf Challenge-Response (DIGEST-MD5, CRAM-MD5, NTLM) basierenden Mechanismen machen das Extrahieren des Passworts aus der Challenge-basierten Response für das Clientmodul unmöglich. Deshalb werden für die SMTP-Authentifizierung nur die PLAIN oder LOGIN-Mechanismen verwendet.
PAR Sobald das Clientmodul die Anmeldedaten des Nutzers erhält, extrahiert es die Adresse des MTAs und die Portnummer des SMTP-Dienstes aus dem Nutzernamen und baut damit  die Verbindung zum MTA auf. Die Verbindung wird über TLS geschützt. Details zum Aufbau der TLS-Verbindung werden in Kapitel 4.1.3 beschrieben.
PAR Tabelle Tab_SMTP_Verbindung enthält SMTP-Antwortcodes, die das Clientmodul dem Clientsystem bei einem Verbindungsaufbau mit dem MTA übermittelt.
PAR (ids=Tabelle-4)Tabelle 4: Tab_SMTP_Verbindung SMTP-Antwortcodes für MTA-Verbindungsaufbau

TABLE(rows=7,cols=427+304)->
TR-> TH(0,0/1/1)->PAR Bedingung TH(0,1/1/1)->PAR SMTP-Antwortcode<br>(Clientmodul -> Clientsystem)
TR-> TD(1,0/1/1)->PAR Das Clientmodul hat sich erfolgreich gegenüber dem MTA mit den vom Clientsystem erhaltenen Anmeldungsdaten authentifiziert. TD(1,1/1/1)->PAR 235 2.7.0 (Authentication successful)
TR-> TD(2,0/1/1)->PAR Das Clientsystem verwendet für die SMTP-Authentifizierung einen anderen Mechanismus als PLAIN oder LOGIN. TD(2,1/1/1)->PAR 504 5.7.4 (Security features not supported)
TR-> TD(3,0/1/1)->PAR Die vom Clientsystem erhaltene SMTP-Authentifizierungsidentität ist nicht vollständig oder  falsch formatiert (MTA-Adresse, MandantId, ClientSystemId, WorkplaceID oder Platzhalter fehlt – siehe Abbildung 6 "Abb_MTA_Nutzername Format des SMTP- Benutzernamens") TD(3,1/1/1)->PAR 501 5.5.4 (Invalid command arguments)
TR-> TD(4,0/1/1)->PAR Bei Übergabe der Parameter für den Aufrufkontext für SM-B (MandantID, ClientSystemID oder WorkplaceID) antwortet der Konnektor mit einem SOAP Fault (Code: 4004 - 4006) TD(4,1/1/1)->PAR 501 (Syntax error in parameters or arguments)
TR-> TD(5,0/1/1)->PAR Die Verbindung zwischen dem Clientmodul und dem MTA kann nicht aufgebaut werden. TD(5,1/1/1)->PAR 454 4.7.0 (Temporary authentication failure)
TR-> TD(6,0/1/1)->PAR Die Authentifizierung gegenüber dem MTA schlägt fehl. TD(6,1/1/1)->PAR 535 5.7.8 (Authentication credentials invalid)
REQ(ids=KOM-LE-A_2015-01)<b>KOM-LE-A_2015-01 - Ergebnis des Verbindungsaufbaus mit dem MTA</b>
PAR Das Clientmodul MUSS das Clientsystem über das Ergebnis des Verbindungsaufbaus mit dem MTA mit den in Tabelle Tab_SMTP_Verbindung beschriebenen SMTP-Antwortcodes informieren. <b>[<=]</b>

PAR Die Verbindungen zwischen dem Clientsystem und dem Clientmodul sowie zwischen dem Clientmodul und dem MTA bleiben solange offen, bis eine von beiden geschlossen oder abgebrochen wird. Sobald eine der beiden Verbindungen geschlossen oder abgebrochen wird, übermittelt das Clientmodul die ausstehenden SMTP-Meldungen und schließt die andere Verbindung. Die SMTP-Sitzung wird damit für den MTA, das Clientsystem und das Clientmodul beendet.
PAR Beispiel: Nachdem das Clientmodul das QUIT-Kommando vom Clientsystem erhalten und dem MTA übermittelt hat, bestätigt der MTA das Ankommen des Kommandos mit dem „221“ Antwortcode und schließt die Verbindung mit dem Clientmodul. Das Clientmodul übermittelt den „221“ Antwortcode dem Clientsystem und schließt die Verbindung mit dem Clientsystem.
REQ(ids=KOM-LE-A_2009)<b>KOM-LE-A_2009 - Unterstützung der Serverteile der Mechanismen PLAIN und LOGIN</b>
PAR Das Clientmodul MUSS für die SMTP-Authentifizierung des Clientsystems ausschließlich die Serverteile der SASL-Mechanismen PLAIN und LOGIN unterstützen.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2010)<b>KOM-LE-A_2010 - Extrahieren von MTA-Adresse, Portnummer und Kartenaufrufkontext</b>
PAR Das Clientmodul MUSS den Benutzernamen, die MTA-Adresse, die zugehörige Portnummer und den Kartenaufrufkontext aus dem vom Clientsystem erhaltenen SMTP-Benutzernamen entsprechend Abbildung Abb_MTA_Nutzer_Name extrahieren.
PAR <b>[<=]</b>

REQ(ids=A_21457)<b>A_21457 - Extrahieren der KonnektorId für Multikonnekor-Umgebungen</b>
PAR Das Clientmodul MUSS, wenn der Parameter KonnektorId im erhaltenen SMTP-Benutzernamen erhalten ist, diesen extrahieren und auswerten, um während der SMTP-Verbindung, mit einem definierten Konnektor, Nachrichten weiterzuleiten. <b>[<=]</b>

PAR Der Parameter KonnektorId ist eine Referenz auf eine URI oder eine IP-Adresse eines Konnektors, um in einer Umgebung mit mehreren Konnektoren einen bestimmten Konnektor ansprechen zu können. Diese kann beispielweise in einer Konfigurations-Datei im Clientmodul hinterlegt sein.
REQ(ids=A_21519-02)<b>A_21519-02 - Überprüfung des SMTP-Benutzernames</b>
PAR Das Clientmodul MUSS die übergebene SMTP-Benutzername-Zeichenkette auf Vollständigkeit überprüfen. Werden optionale Bestandteile des SMTP-Benutzernamens nicht genutzt, MUSS sichergestellt werden, dass später folgende optionale Bestandteile in ihrer vorgegebenen Position platziert werden. Als Platzhalter ist in so einem Fall "*" zu verwenden. Wenn die SMTP-Benutzername-Zeichenkette nicht vollständig ist, MUSS das Clientmodul den SMTP Fehlercode gemäß Tabelle "Tab_SMTP_Verbindung SMTP-Antwortcodes für MTA-Verbindungsaufbau" an das Clientsystem senden und den Vorgang abbrechen.<br><b>[<=]</b>

PAR Beispiel einer vollständigen SMTP-Benutzername-Zeichenkette:

LIST->
LITEM->PAR ohne optionale Bestandteile:
PAR erik.mustermann@hrst_domain.kim.telematik#hrst_domain.kim.telematik:465#1#KOM_LE#7

LIST->
LITEM->PAR KonnektorId als optionaler Bestandteil:
PAR erik.mustermann@hrst_domain.kim.telematik#hrst_domain.kim.telematik:465#1#KOM_LE#7#Konn_1
PAR Erfolgt die Einbindung von KIM in ein bestehendes Mail-System, kann ein übergebener Delimiter ":" zwischen dem Serveranteil und dem Port (z. B. hrst_domain.kim.telematik:465) des SMTP-Benutzernamens zu Fehlern bei der Interpretation im Bestandsystem führen. Es werden daher weitere Delimiter im Benutzernamen unterstützt, sofern die Funktionalität gemäß der Bestandsanforderungen zu den Benutzernamen, in semantischer Abgrenzung, uneingeschränkt erhalten bleiben. Es gilt, dass die Bestandteile des SMTP-Benutzernames in ihrem semantischen Bezug gemäß [RFC1123, RFC2822] einhalten müssen.
REQ(ids=KOM-LE-A_2011)<b>KOM-LE-A_2011 - Verbindungsaufbau mit dem MTA über MTA-Adresse und Portnummer</b>
PAR Das Clientmodul MUSS die MTA-Adresse und die Portnummer, die aus dem vom Clientsystem erhaltenen SMTP-Benutzernamen extrahiert wurden (siehe Abbildung Abb_MTA_Nutzer_Name), für den Verbindungsaufbau mit dem MTA verwenden.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2012)<b>KOM-LE-A_2012 - Authentisierung gegenüber dem MTA mit Benutzernamen und Passwort</b>
PAR Das Clientmodul MUSS den Benutzernamen, der aus dem vom Clientsystem erhaltenen SMTP-Benutzernamen extrahiert wurde (siehe Abbildung Abb_MTA_Nutzer_Name) sowie das vom Clientsystem erhaltene Passwort für die Authentisierung gegenüber den MTA verwenden.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2013)<b>KOM-LE-A_2013 - Unterstützung der Clientteile der Mechanismen PLAIN und LOGIN</b>
PAR Das Clientmodul MUSS für die SMTP-Authentifizierung mit dem MTA die Clientteile der der SASL-Mechanismen PLAIN und LOGIN unterstützen.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2014)<b>KOM-LE-A_2014 - Authentifizierung gegenüber MTA mit anderen Mechanismen als PLAIN und LOGIN</b>
PAR Das Clientmodul KANN für die Authentifizierung gegenüber dem MTA andere Authentifizierungsmechanismen als PLAIN oder LOGIN benutzen.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2016)<b>KOM-LE-A_2016 - Schließen der SMTP-Verbindung mit dem Clientsystem</b>
PAR Das Clientmodul MUSS die SMTP-Verbindung mit dem Clientsystem aufrechterhalten. Das Schließen der Verbindung ist nur bei folgenden Ausnahmen zulässig:

LIST->
LITEM->PAR Nachdem die Verbindung zwischen dem Clientmodul und dem MTA geschlossen oder abgebrochen wurde. In diesem Fall MUSS das Clientmodul die Verbindung mit dem Clientsystem schließen. Falls es vom MTA erhaltene und vom Clientsystem noch nicht übertragene SMTP-Antwortcodes gibt, MUSS das Clientmodul diese Antwortcodes an das Clientsystem weiterleiten und danach die Verbindung mit dem Clientsystem schließen.LITEM->PAR Wenn der MTA innerhalb eines konfigurierbaren Timeouts nicht auf ein SMTP-Kommando reagiert. In diesem Fall MUSS das Clientmodul den Antwortcode „421“ an das Clientsystem senden und anschließend die Verbindung schließen.LITEM->PAR Wenn die Verbindung zwischen dem Clientmodul und dem MTA noch nicht aufgebaut wurde und das Clientsystem das QUIT-Kommando übermittelt. In diesem Fall MUSS das Clientmodul mit „221 OK“ Antwortcode antworten und die Verbindung mit dem Clientsystem schließen.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2017)<b>KOM-LE-A_2017 - Schließen der SMTP-Verbindung mit dem MTA</b>
PAR Das Clientmodul MUSS die SMTP-Verbindung mit dem MTA aufrechterhalten. Das Schließen der Verbindung ist nur zulässig:

LIST->
LITEM->PAR Nachdem die Verbindung zwischen dem Clientmodul und dem Clientsystem geschlossen oder abgebrochen wird. In diesem Fall MUSS das Clientmodul die Verbindung mit dem MTA schließen. Falls es vom Clientsystem erhaltene und dem MTA noch nicht übertragene SMTP-Meldungen gibt, MUSS das Clientmodul diese Meldungen dem MTA übertragen, und nur danach die Verbindung mit dem MTA schließen.LITEM->PAR Wenn das Clientmodul innerhalb eines konfigurierbaren Timeouts keine neuen SMTP-Kommandos sendet. In diesem Fall MUSS das Clientmodul die Verbindung mit dem MTA schließen.
PAR <b>[<=]</b>

PAR Nachdem sich das Clientsystem gegenüber dem MTA erfolgreich authentifiziert hat, geht das Clientmodul in den PROXY-Zustand über. Anderenfalls bleibt das Clientmodul im CONNECT-Zustand.
PAR -HEADING(ids=3.3.3)3.3.3 PROXY-Zustand
PAR Im PROXY-Zustand vermittelt das Clientmodul SMTP-Meldungen und Antwortcodes zwischen dem Clientsystem und dem MTA. Das Clientmodul bleibt in diesem Zustand bis das Clientmodul das DATA-Kommando bekommt und der MTA das Erhalten von diesem Kommando mit dem Antwortcode „354“ bestätigt. Das Clientmodul leitet den Antwortcode „354“ an das Clientsystem weiter und geht in den PROCESS-Zustand über.
REQ(ids=KOM-LE-A_2018)<b>KOM-LE-A_2018 - Weiterleitung von SMTP-Meldungen und Antwortcodes</b>
PAR Nach erfolgreicher Beendigung des Authentifizierungsverfahrens mit dem MTA MUSS das Clientmodul alle vom Clientsystem erhaltenen SMTP-Meldungen, mit Ausnahme des RCPT-Kommandos und der Inhalte von E-Mail-Nachrichten (inklusive dem DATA-Kommando) sowie alle vom MTA erhaltenen Antwortcodes ohne Veränderung dem MTA bzw. dem Clientsystem unverzüglich übermitteln.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2176)<b>KOM-LE-A_2176 - Prüfen auf gültiges ENC-Zertifikat für den Empfänger im RCPT-Kommando</b>
PAR Das Clientmodul MUSS, wenn es vom Clientsystem ein RCPT TO:<recipient-address> Kommando erhält, prüfen, ob für den im Kommando aufgeführten Empfänger mindestens ein gültiges ENC-Zertifikat existiert. Da die Nachricht nur an Empfänger, die ein gültiges ENC-Zertifikat besitzen weitergeleitet werden darf, MUSS das Clientmodul im Negativfall das Kommando verwerfen und dem Clientsystem den Antwortcode „550“ senden . Im Positivfall MUSS das Clientmodul das Kommando an den MTA weiterleiten. <b>[<=]</b>

PAR -HEADING(ids=3.3.4)3.3.4 PROCESS-Zustand
PAR Im PROZESS-Zustand nimmt das Clientmodul die Inhalte der vom Clientsystem gesendeten Nachricht entgegen. Mit Hilfe von Diensten der TI-Plattform schützt es die Vertraulichkeit und Integrität der Nachricht entsprechend dem KOM-LE-S/MIME-Profil [gemSMIME_KOMLE]. Anschließend leitet das Clientmodul die geschützte Nachricht an den MTA, bei dem der Nutzer registriert ist, weiter. Im Erfolgsfall wird das Clientsystem über das Versenden der Nachricht informiert. Im Fehlerfall wird das Clientsystem mit dem entsprechenden Antwortcode über den Fehler benachrichtigt. Im folgenden Text wird eine entsprechend dem KOM-LE-S/MIME-Profil geschützte Nachricht auch als KOM-LE-S/MIME-Nachricht bezeichnet.
PAR -HEADING(ids=3.3.4.1)3.3.4.1 Empfang und Weiterleitung einer Nachricht
PAR Nachdem die Bereitschaft zum Empfangen der Nachricht dem Clientsystem mit dem Antwortcode „354“ bestätigt wurde, erwartet das Clientmodul, dass das Clientsystem mit der Übertragung der Nachricht fortfährt. Die Inhalte der Nachricht werden im Clientmodul zwischengespeichert und sobald das Clientsystem durch die „<CRLF>.<CRLF>“ Zeichensequenz das Ende der Nachricht markiert, werden die Inhalte der Nachricht im Clientmodul durch digitale Signatur und die Verschlüsselung geschützt. Die Details werden im Kapitel 3.3.4.1.1 beschrieben.
PAR KOM-LE bietet die Möglichkeit Nachrichten, die beim Abholen nicht entschlüsselt wurden (z.B. auf Grund eines fehlenden HBA mit dem entsprechenden privaten Schlüssel), nachträglich zu entschlüsseln. Um die nachträgliche Entschlüsselung einer verschlüsselten KOM-LE-Nachricht durchführen zu können, schickt der Empfänger die verschlüsselte Nachricht als ein message/rfc822 Anhang in einer neuen Nachricht an seine eigene E-Mail-Adresse. Beim nächsten Abholvorgang kann diese Nachricht, sofern die erforderliche Karte vorhanden ist, durch das Clientmodul entschlüsselt werden. Werden solche Nachrichten im Clientmodul erkannt, werden sie weder signiert noch verschlüsselt. Stattdessen wird die verschlüsselte KOM-LE-Nachricht aus dem message/rfc822 Anhang extrahiert und die from Header-Elemente werden durch das from Header-Element (E-Mail-Adresse des Absenders) der angekommenen multipart MIME-Nachricht ersetzt. Anschließend wird die Nachricht dem MTA übermittelt. Die Details werden im Kapitel 3.3.4.1.2 beschrieben.
PAR Die Benachrichtigung des Clientsystems über den Erfolg des Sendens einer Nachricht findet nur dann statt, wenn der MTA die Übernahme der Verantwortung für die Nachricht mit positiven Erledigungsstatus über den „250“ Antwortcode bestätigt. Ab diesem Moment gilt die Nachricht für das Clientsystem als versendet und der MTA hat sich zu ihrer Lieferung oder Benachrichtigung des Senders über einen Fehlerfall verpflichtet.
PAR Nachdem das Clientsystem über das erfolgreiche Senden der Nachricht oder über einen Fehlerfall mit entsprechendem Antwortcode benachrichtigt wurde, löscht das Clientmodul die zwischengespeicherten Inhalte der Nachricht und geht zurück in den PROXY-Zustand.
REQ(ids=KOM-LE-A_2019)<b>KOM-LE-A_2019 - Signatur und Verschlüsselung entsprechend KOM-LE-S/MiME-Profil</b>
PAR Das Clientmodul MUSS die vom Clientsystem erhaltene KOM-LE-Nachricht entsprechend dem KOM-LE-S/MIME-Profil [gemSMIME_KOMLE] signieren und verschlüsseln und anschließend dem MTA übermitteln.
PAR <b>[<=]</b>

PAR -HEADING(ids=3.3.4.1.1)3.3.4.1.1 Bearbeitung einer ungeschützten Nachricht
PAR Um die Vertraulichkeit und die Integrität einer Client-Mail zu schützen wird diese entsprechend dem KOM-LE-S/MIME-Profil signiert und verschlüsselt. Für das Signieren und die Verschlüsselung nutzt das Clientmodul die Dienste der TI-Plattform. Die folgende Abbildung stellt den prinzipiellen Ablauf und die Aktivitäten des Clientmoduls beim Erzeugen einer dem KOM-LE-S/MIME-Profil entsprechenden KOM-LE-Nachricht dar. Hierbei wird von einer Client-Mail Größe kleiner oder gleich 15 MiB ausgegangen.

PAR Abbildung 8: Abb_Sig_Verschl Signieren und Verschlüsseln entsprechend S/MIME Profil
PAR Für das digitale Signieren einer Nachricht verwendet das Clientmodul den privaten PrK.HCI.OSIG-Schlüssel der SM-B. Der Zugriff auf die entsprechende Karte und die Erstellung der Signatur erfolgt über die Aufrufe der entsprechenden Operationen der Außenschnittstelle des Konnektors. Eine detaillierte Beschreibung erfolgt im Kapitel 3.8.1.
PAR Wenn das Signieren fehlschlägt, wird das Senden der Nachricht abgebrochen indem dem MTA das RSET-Kommando übermittelt wird und das Clientsystem mit dem Antwortcode „451“ inklusive der entsprechenden Fehlermeldung über den Fehlerfall informiert wird.
REQ(ids=KOM-LE-A_2177)<b>KOM-LE-A_2177 - Verwenden von SignDocument und EncryptDocument</b>
PAR Das Clientmodul MUSS für das Signieren und Verschlüsseln der Nachrichten die Operationen SignDocument und EncryptDocument der Außenschnittstelle des Konnektors verwenden.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2299-01)<b>KOM-LE-A_2299-01 - Vorgehen bei Signatur und Verschlüsselung einer KOM-LE Nachricht</b>
PAR Zur Signatur und Verschlüsselung von KOM-LE Nachrichten MUSS das folgende Vorgehen umgesetzt werden:

ORDERED-LIST->
LITEM->PAR Zur CMS(CAdES)-Signatur durch den Konnektor übergibt das KOM-LE-CM beim Aufruf der SignDocument-Operation am Konnektor das zu signierende Dokument als MimeType="text/plain; charset=utf-8 Dokument. Als Antwort gibt der Konnektors einen binären CMS-Container zurück. Zum Transport sind die binären Objekte in den SOAP-Nachrichten jeweils base64-kodiert.LITEM->PAR Der binäre CMS-Container mit der signierten Nachricht wird als „application/pkcs7-mime“ MIME-Einheit vom smime-type „signed-data“ mit dem Content-Transfer-Encoding „binary“ (nicht "base64") verpackt.LITEM->PAR Zur CMS-Verschlüsselung durch den Konnektor übergibt das KOM-LE-CM beim Aufruf der EncryptDocument-Operation am Konnektor die in Schritt zwei erzeugte Nachricht als binär-Dokument. Als Antwort gibt der Konnektors einen binären CMS-Kontainer zurück. Zum Transport sind die binären Objekte in den SOAP-Nachrichten jeweils base64-kodiert.LITEM->PAR Der aus der Verschlüsselung resultierende CMS-Container wird in eine „application/pkcs7-mime“ MIME-Einheit vom smime-type „authenticated-enveloped-data“ mit dem Content-Transfer-Encoding „base64“ verpackt.
PAR <b>[<=]</b>

PAR Ein Beispiel einer diesem Profil konformen Nachricht für den Aufbau des binären CMS-Container ist in [gemSMIME_KOMLE] enthalten. Insbesondere wird auf die Aufnahme des „Content Headers“ hingewiesen.
REQ(ids=KOM-LE-A_2190)<b>KOM-LE-A_2190 - Übergabe des recipient-emails Attributs beim Signieren</b>
PAR Das Clientmodul MUSS beim Aufruf der Operation SignDocument des Konnektors das recipient-emails Attribut als Aufrufparameter in der ASN.1-Form<br>    Attribute ::= SEQUENCE {<br>            attrType OBJECT IDENTIFIER,<br>            attrValues SET OF AttributeValue }<br>übergeben. Das ASN.1-Atribut MUSS DER-kodiert und base64 verpackt im Request-Element<br><SIG:SignDocument>/<SIG:SignRequest>/<SIG:OptionalInputs>/<dss:Properties>/<dss:SignedProperties>/<dss:Property>/<dss:Value>/<CMSAttribute><br>übergeben werden.<br>​​
PAR <b>[<=]</b>

PAR Folgend ein Beispiel für den SOAP-Request beim Signieren:
PAR <?xml version="1.0" encoding="UTF-8" ?>
PAR <SIG:SignDocument xmlns:CERTCMN="http://ws.gematik.de/conn/CertificateServiceCommon/v2.0" xmlns:CONN="http://ws.gematik.de/conn/ConnectorCommon/v5.0" xmlns:CCTX="http://ws.gematik.de/conn/ConnectorContext/v2.0" xmlns:SIG="http://ws.gematik.de/conn/SignatureService/v7.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dss="urn:oasis:names:tc:dss:1.0:core:schema">
PAR   <CONN:CardHandle>zDgq6V5EsA</CONN:CardHandle>
PAR   <SIG:Crypt>RSA</SIG:Crypt>
PAR   <CCTX:Context>
PAR   <CONN:MandantId>Praxis Dr. Mustermann</CONN:MandantId>
PAR   <CONN:ClientSystemId>Mediakom-PVS-3000</CONN:ClientSystemId>
PAR   <CONN:WorkplaceId>Arztzimmer2</CONN:WorkplaceId>
PAR   </CCTX:Context>
PAR   <SIG:TvMode>NONE</SIG:TvMode>
PAR   <SIG:SignRequest RequestID="SignRequestNo_001">
PAR   <SIG:OptionalInputs>
PAR   <dss:SignatureType>urn:ietf:rfc:5652</dss:SignatureType>
PAR   <dss:Properties>
PAR   <dss:SignedProperties>
PAR   <dss:Property>
PAR   <dss:Identifier>RecipientEmailsAttribute</dss:Identifier>
PAR   <dss:Value>
PAR <CMSAttribute>QnNVakJzUjA5RWJHaGpaMGRUUVV4TlVqQnNSMDlFYkdoalowZFRRVXhOUVVGQlVRVU
PAR ZCVVVOQlJVMXRRMXAwZFUxR1VYaEVVemhp</CMSAttribute>
PAR   </dss:Value>
PAR   </dss:Property>
PAR   </dss:SignedProperties>
PAR   </dss:Properties>
PAR   <SIG:IncludeEContent>true</SIG:IncludeEContent>
PAR   </SIG:OptionalInputs>
PAR   <SIG:Document ShortText="none">
PAR <dss:Base64Data>TUlNRS1WZXJzaW9uOiAxLjANCkNvbnRlbnQtdHlwZTogdGV4dC9wbGFpbjsgY2hh
PAR cnNldD1pc28tODg1OS0xNQ0KQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogOGJpdA0KRnJvbTogPGhh
PAR bnMubXVzdGVyYXJ6dEBwcmF4aXNBLmRlPg0KVG86IDxldmEubXVzdGVyYXJ6dEBwcmF4aXNCLmRlPg0K
PAR U3ViamVjdDog3GJlcndlaXN1bmcgSHIuIE0uIFBhdGllbnRCDQpEYXRlOiBNb24sIDExIE5vdiAyMDEz
PAR IDE0OjM0OjI3ICswMTAwDQoNClNlaHIgZ2VlaHJ0ZSBGcmF1IEtvbGxlZ2luIERyLiBNdXN0ZXJhcnp0
PAR LA0KDQpoaWVybWl0IPxiZXJ3ZWlzZSBpY2ggSWhuZW4gSHIuIE0uIFBhdGllbnRCIGF1ZiBHcnVuZCAu
PAR Li4uDQoNCk1pdCBmcmV1bmRsaWNoZW4gR3L832VuLA0KDQpEci4gSGFucyBNdXN0ZXJhcnp0</dss:Ba
PAR se64Data>
PAR   </SIG:Document>
PAR   <SIG:IncludeRevocationInfo>false</SIG:IncludeRevocationInfo>
PAR   </SIG:SignRequest>
PAR </SIG:SignDocument>
PAR Da der Versand einer Nachricht an mehrere Empfänger erfolgen kann und das Clientmodul nicht erkennt, ob alle Empfänger ECC beherrschen, muss das Signieren einer Nachricht immer mit dem RSA-Schlüssel der SM-B erfolgen.
REQ(ids=KOM-LE-A_2020)<b>KOM-LE-A_2020 - Signieren der Nachricht mit dem Schlüssel Prk.HCI.OSIG</b>
PAR Das Clientmodul MUSS für das Signieren einer KOM-LE-Nachricht den privaten Schlüssel PrK.HCI.OSIG.R2048 der SM-B der medizinischen Institution verwenden.<br><b>[<=]</b>

REQ(ids=KOM-LE-A_2021)<b>KOM-LE-A_2021 - Verhalten, wenn Nachricht nicht signiert werden kann</b>
PAR Das Clientmodul MUSS dem MTA das Kommando RSET senden und das Clientsystem mit dem Antwortcode „451“ benachrichtigen, wenn das Clientmodul die vom Clientsystem erhaltene Nachricht nicht digital signieren kann.
PAR <b>[<=]</b>

PAR Die Verschlüsselung erfolgt sowohl für den Sender als auch für alle Empfänger. Die erforderlichen Verschlüsselungszertifikate C.HCI.ENC für Institutionen und C.HP.ENC für Leistungserbringer werden im Verzeichnisdienst zur Verfügung gestellt. Für die Suche nach den passenden Einträgen im Verzeichnisdienst wird die KOM-LE-E-Mail-Adresse als Suchschlüssel verwendet. Wenn der Sender bzw. ein Empfänger mehrere Verschlüsslungszertifikate hat (z.B. wenn dem Empfänger ein neuer HBA  ausgegeben wurde und der alte noch gültig ist), wird die Nachricht mit allen vorhandenen Verschlüsselungszertifikaten verschlüsselt.
REQ(ids=KOM-LE-A_2191)<b>KOM-LE-A_2191 - Übergabe des recipient-emails Attributs beim Verschlüsseln</b>
PAR Das Clientmodul MUSS beim Aufruf der Operation EncryptDocument des Konnektors das recipient-emails Attribut als Aufrufparameter in der ASN.1-Form<br>    Attribute ::= SEQUENCE {<br>            attrType OBJECT IDENTIFIER,<br>            attrValues SET OF AttributeValue }<br>übergeben. Das ASN.1-Atribut MUSS DER-kodiert und base64 verpackt im Request-Element<br><CRYPT:EncryptDocument>/<CRYPT:OptionalInputs>/<CRYPT:UnprotectedProperties>/<dss:Property>/<dss:Value>/<CMSAttribulte><br>übergeben werden.<br><br><b>[<=]</b>

PAR Folgend ein Beispiel für den SOAP-Request beim Verschlüsseln:
PAR <?xml version="1.0" encoding="UTF-8" ?>
PAR <CRYPT:EncryptDocument xmlns:CONN="http://ws.gematik.de/conn/ConnectorCommon/v5.0" xmlns:CCTX="http://ws.gematik.de/conn/ConnectorContext/v2.0" xmlns:CRYPT="http://ws.gematik.de/conn/EncryptionService/v6.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dss="urn:oasis:names:tc:dss:1.0:core:schema">
PAR   <CCTX:Context>
PAR   <CONN:MandantId>Praxis Dr. Mustermann</CONN:MandantId>
PAR   <CONN:ClientSystemId>Mediakom-PVS-3000</CONN:ClientSystemId>
PAR   <CONN:WorkplaceId>Arztzimmer2</CONN:WorkplaceId>
PAR   </CCTX:Context>
PAR   <CRYPT:RecipientKeys>
PAR   <CRYPT:CertificateOnCard>
PAR   <CONN:CardHandle>zDgq6V5EsA</CONN:CardHandle>
PAR   <CRYPT:Crypt> ECC </CRYPT:KeyReference>
PAR   </CRYPT:CertificateOnCard> <CRYPT:Certificate>UjBsR09EbGhjZ0dTQUxNQUFBUUNBRU1tQ1p0dU1GUXhEUzhi</CRYPT:Certificate>
PAR   </CRYPT:RecipientKeys>
PAR   <CONN:Document>
PAR <dss:Base64Data>QnNVakJzUjA5RWJHaGpaMGRUUVV4TlVqQnNSMDlFYkdoalowZFRRVXhOUV
PAR VGQlVRVUZCVVVOQlJVMXRRMXAwZFUxR1VYaEVVemhp</dss:Base64Data>
PAR   </CONN:Document>
PAR   <CRYPT:OptionalInputs>
PAR   <CRYPT:EncryptionType>urn:ietf:rfc:5652</CRYPT:EncryptionType>
PAR   <CRYPT:UnprotectedProperties>
PAR   <dss:Property>
PAR   <dss:Identifier>RecipientEmailsAttribute</dss:Identifier>
PAR   <dss:Value>
PAR <CMSAttribute>QnNVakJzUjA5RWJHaGpaMGRUUVV4TlVqQnNSMDlFYkdoalowZFRRVXhOUVVG
PAR QlVRVUZCVVVOQlJVMXRRMXAwZFUxR1VYaEVVemhp</CMSAttribute>
PAR   </dss:Value>
PAR   </dss:Property>
PAR   </CRYPT:UnprotectedProperties>
PAR   </CRYPT:OptionalInputs>
PAR </CRYPT:EncryptDocument>
PAR Zum Verschlüsseln der Nachricht bezieht das Clientmodul die erforderlichen Zertifikate aus dem Verzeichnisdienst der TI. Vor der Verwendung der Zertifikate für die Verschlüsselung muss das Clientmodul prüfen, ob der verwendete Konnektor die ECC-Kryptographie unterstützt. Ist dies nicht der Fall, dürfen im Verzeichnisdienst gefundene ECC-Zertifikate nicht für die Verschlüsselung benutzt werden. Unterstützt der Konnektor ECC, sind sowohl die RSA- als auch die ECC-Zertifikate für die Verschlüsselung zu verwenden. Durch diese Herangehensweise wird sichergestellt, dass auch Empfänger, die noch kein ECC beherrschen, die Nachricht entschlüsseln können. Dieses Prinzip gilt solange, bis alle TI-Beteiligten ECC beherrschen und somit die RSA-Zertifikate gesperrt sind.
REQ(ids=A_17464)<b>A_17464 - ECC-Migration, Prüfung der ECC-Fähigkeit des Konnektors</b>
PAR Das Clientmodul MUSS über eine Abfrage des Dienstverzeichnisdienstes des Konnektors prüfen, ob der verwendete Konnektor ECC-Kryptographie unterstützt. Ein Konnektor unterstützt ECC, wenn die Konnektordienstversionen des Signaturdienstes mindestens 7.4.1 und des Verschlüsselungsdienstes mindestens 6.1.1 sind. <b>[<=]</b>

REQ(ids=KOM-LE-A_2022)<b>KOM-LE-A_2022 - Verschlüsseln der Nachricht mit den Verschlüsselungszertifikaten C.HCI.ENC bzw. C.HP.ENC</b>
PAR Das Clientmodul MUSS vom Clientsystem erhaltene E-Mail-Nachrichten sowohl für jeden in den RCPT-Kommandos angegeben Empfänger als auch für den Sender aus dem from bzw. sender Header-Element der Nachricht mit allen dem Sender bzw. Empfängern zugeordneten Verschlüsselungszertifikaten (C.HCI.ENC für eine Institution oder C.HP.ENC für einen Leistungserbringer) verschlüsseln.<br><b>[<=]</b>

REQ(ids=A_17472)<b>A_17472 - ECC-Migration, Keine Verwendung von ECC-Verschlüsselungszertifikaten bei Konnektoren ohne ECC-Unterstützung</b>
PAR Verwendet das Clientmodul einen Konnektor, der die ECC-Kryptographie nicht unterstützt, DARF das Clientmodul ECC-Verschlüsselungszertifikate NICHT für die Verschlüsselung der Nachricht verwenden.<br><b>[<=]</b>

REQ(ids=KOM-LE-A_2178)<b>KOM-LE-A_2178 - Kein Versenden an Empfänger mit unterschiedlichen Telematik-IDs in den Verschlüsselungszertifikaten</b>
PAR Existieren für einen Empfänger mehrere Verschlüsselungszertifikate mit unterschiedlichen Telematik-IDs DARF das Clientmodul die Nachricht NICHT an diesen Empfänger versenden.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2192-01)<b>KOM-LE-A_2192-01 - Fehlernachricht bei Empfänger mit unterschiedlichen Telematik-IDs in den Verschlüsselungszertifikaten</b>
PAR Existieren für einen Empfänger mehrere Verschlüsselungszertifikate mit unterschiedlichen Telematik-IDs MUSS das Clientmodul den Absender der Nachricht mit einer Fehlernachricht informieren. Die Fehlernachricht ist weder zu signieren noch zu verschlüsseln und entspricht der Delivery Status Notification gemäß [RFC3461-3464].<br> <b>[<=]</b>

REQ(ids=KOM-LE-A_2023)<b>KOM-LE-A_2023 - Verschlüsselungszertifikate aus dem Verzeichnisdienst</b>
PAR Das Clientmodul MUSS in der Lage sein, die Verschlüsselungszertifikate aus dem Verzeichnisdienst der TI mit Hilfe der E-Mail-Adresse zu ermitteln.
PAR <b>[<=]</b>

PAR Nachdem die Nachricht erfolgreich signiert wurde und die entsprechenden Verschlüsselungszertifikate zur Verfügung stehen, führt das Clientmodul die Verschlüsselung der Nachricht für alle Empfänger bzw. Sender durch. Die Empfänger werden über die E-Mail-Adressen aus den RCPT-Kommandos identifiziert. Die Sender werden über die E-Mail-Adressen im sender Header-Element identifiziert. Wenn der Header der Nachricht kein sender Element enthält, werden die E-Mail-Adressen des Senders aus dem from Header-Element übernommen.
PAR Beim Verschlüsselungsvorgang sind die folgenden Szenarien möglich:

LIST->
LITEM->PAR Die Nachricht kann für alle E-Mail-Adressen (sowohl Sender als auch Empfänger) verschlüsselt werden.LITEM->PAR Es gibt E-Mail-Adressen, für die aufgrund der fehlenden oder nicht gültigen Zertifikate die Nachricht nicht verschlüsselt werden kann. In diesem Fall wird die Nachricht mit den verfügbaren Zertifikaten verschlüsselt und an den MTA übermittelt. Die E-Mail-Adressen für die die Verschlüsselung nicht durchgeführt werden konnte werden aus dem Header entfernt. Der Absender der Nachricht wird über eine im Clientmodul generierte und an den MTA übermittelte E-Mail über den Fehlerfall informiert. Die Nachricht mit der Fehlermeldung wird weder signiert noch verschlüsselt.LITEM->PAR Wenn die Verschlüsselung für keinen der Empfänger durchgeführt werden kann, wird das Senden der Nachricht abgebrochen. Dabei wird dem MTA das RSET-Kommando gesendet und das Clientsystem wird mit dem Antwortcode „451“ und der entsprechenden Fehlermeldung über den Fehlerfall informiert.
PAR Die Verschlüsselung erfolgt über die Aufrufe der entsprechenden Operationen der Außenschnittstelle des Konnektors. Eine detaillierte Beschreibung erfolgt in Kapitel 3.5.3.
REQ(ids=KOM-LE-A_2024-01)<b>KOM-LE-A_2024-01 - Information des Absenders über Empfänger, für die nicht verschlüsselt werden kann</b>
PAR Kann eine Nachricht auf Grund von fehlenden oder ungültigen Zertifikaten nicht für alle Empfänger verschlüsselt werden, MUSS das Clientmodul den Absender mit einer E-Mail über den Fehlerfall informieren. Aus dem Inhalt der Fehlernachricht müssen alle Empfänger, für die nicht verschlüsselt werden konnte, hervorgehen. Die Fehlernachricht ist weder zu signieren noch zu verschlüsseln und entspricht der Delivery Status Notification gemäß [RFC3461-3464]. Die Originalnachricht darf an die Empfänger, für die nicht verschlüsselt werden konnte, nicht versendet werden.<br><b>[<=]</b>

REQ(ids=KOM-LE-A_2025)<b>KOM-LE-A_2025 - Abbruch des Sendens, wenn keine Verschlüsselung möglich</b>
PAR Das Clientmodul MUSS das Clientsystem mit dem Antwortcode „451“ benachrichtigen und den Senden-Vorgang zum MTA mit dem RSET-Kommando abbrechen, wenn das Clientmodul die vom Clientsystem erhaltene Nachricht für keinen Empfänger verschlüsseln kann.
PAR <b>[<=]</b>

PAR Das KOM-LE-S/MIME-Profil fordert, dass jede entsprechend dem Profil verschlüsselte Nachricht das recipient-emails Attribut enthält. In diesem Attribut werden  Zusammenhänge zwischen den für die Verschlüsselung verwendeten Zertifikaten und den E-Mail-Adressen der Empfänger bzw. des Senders angegeben. Das Clientmodul befüllt dieses Attribut nur mit den E-Mail-Adressen für die die Nachricht erfolgreich verschlüsselt werden konnte.
PAR Um die Anzahl von Anfragen an den Verzeichnisdienst und die Bearbeitungszeiten zu reduzieren werden die für die Verschlüsselung verwendeten Zertifikate für eine konfigurierbare Zeitdauer im Clientmodul gecached.
REQ(ids=KOM-LE-A_2026)<b>KOM-LE-A_2026 - Cachen von Verschlüsselungszertifikaten</b>
PAR Das Clientmodul MUSS das manipulationssichere Cachen von Verschlüsselungszertifikaten für eine konfigurierbare Zeitdauer unterstützen.
PAR <b>[<=]</b>

PAR Die folgenden Schritte stellen den Schutzvorgang für eine Nachricht im Clientmodul dar. Die Schritte haben einen beschreibenden und nicht normativen Charakter. Die Umsetzung kann sich unterscheiden, solange die Anforderungen des Dokuments erfüllt sind.

ORDERED-LIST->
LITEM->PAR Der Cache und anschließend falls erforderlich der Verzeichnisdienst werden für Verschlüsselungszertifikate der Empfänger und Sender durchgesucht. Die entsprechenden E-Mail-Adressen dienen als die Suchschlüssel.LITEM->PAR Der Signaturdienst der TI-Plattform wird mit der zu sendenden Nachricht und der Referenz auf den Signaturschlüssel als Aufrufparameter aufgerufen.LITEM->PAR Der Verschlüsselungsdienst der TI-Plattform wird mit der signierten Nachricht und den gefundenen Verschlüsselungszertifikaten als Aufrufparameter aufgerufen.LITEM->PAR Die TI-Plattform prüft den Sperrstatus der übergebenen Verschlüsselungszertifikate und führt die Verschlüsselung durch, wenn alle Zertifikate gültig sind. Sollte die Prüfung eines oder mehrere Zertifikate als nicht gültig ausweisen, bricht die TI-Plattform den Verschlüsselungsvorgang ab. Falls sich unter den ungültigen Zertifikaten die aus dem Cache geholten Zertifikate befinden, wird der Verzeichnisdienst nach Ersatzzertifikaten durchsucht.

ORDERED-LIST->
LITEM->PAR Falls Ersatzzertifikate gefunden werden, wird der Verschlüsselungsvorgang wiederholt.LITEM->PAR Werden keine Ersatzzertifikate gefunden, werden diesen Zertifikaten entsprechende Empfänger aus dem Header der Nachricht entfernt und über den Fehlerfall mit Hilfe einer im Clientmodul generierten E-Mail informiert. Die ursprüngliche Nachricht wird an diese Empfänger nicht gesendet, weil sie nicht in der Lage sind, diese Nachricht zu entschlüsseln.
PAR Abbildung 9 stellt die oben beschriebenen Schritte als Aktivitätsdiagramm dar.

PAR Abbildung 9: Abb_Verschl_Msg Verschlüsselung einer Nachricht
REQ(ids=A_23174)<b>A_23174 - Sicherstellung der Empfängeradressen</b>
PAR Das Clientmodul MUSS sicherstellen, dass nur die vom Clientsystem an das Clientmodul übergebenen E-Mail-Adressen die zuvor im SMTP-Kommando RCPT TO gemäß [KOM-LE-A_2176] geprüft wurden, im Mail Header to, cc und bcc in der KOM-LE-Nachricht verbleiben.<br><b>[<=]</b>

REQ(ids=KOM-LE-A_2027)<b>KOM-LE-A_2027 - Befüllung des recipient-emails Attributs</b>
PAR Das Clientmodul MUSS für die E-Mail-Adressen, für die die Nachricht erfolgreich verschlüsselt werden konnte, einen Wert in das recipient-emails Attribut entsprechend dem KOM-LE-S/MIME-Profil einfügen.<br>​​
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2028)<b>KOM-LE-A_2028 - Entfernen von Empfängern aus dem Header der Nachricht</b>
PAR Das Clientmodul MUSS die Empfänger bzw. Sender für die die Verschlüsselung der Nachricht nicht durchgeführt werden konnte, aus to, cc bzw. from, sender Header-Elementen der Nachricht entfernen, um sicherzustellen, dass die ursprüngliche Nachricht nicht an solche Empfänger gesendet wird.
PAR <b>[<=]</b>

PAR Nachdem die Verschlüsselung durchgeführt wurde, verpackt das Clientmodul das vom Konnektor verschlüsselte CMS-Objekt in eine äußere Nachricht entsprechend KOM-LE-S/MIME-Profil und überträgt die geschützte Nachricht an den MTA.
REQ(ids=KOM-LE-A_2193)<b>KOM-LE-A_2193 - Verpacken des verschlüsselten CMS-Objektes</b>
PAR Das Clientmodul MUSS das signierte und verschlüsselte CMS-Objekt in eine äußere Nachricht entsprechend den Anforderungen KOM-LE-A_2097, KOM-LE-A_2098, KOM-LE-A_2099, KOM-LE-A_2100, KOM-LE-A_2101, KOM-LE-A_2102 des KOM-LE S/MIME Profils verpacken.<br><b>[<=]</b>

PAR -HEADING(ids=3.3.4.1.2)3.3.4.1.2 Bearbeitung einer geschützten KOM-LE-Nachricht
PAR Wenn während eines Abholvorgangs eine KOM-LE-Nachricht nicht im Clientmodul entschlüsselt werden konnte, wird sie dem Clientsystem als eine message/rfc822 Einheit mit einem Fehlertext geliefert (siehe das Beispiel im Kapitel 3.3.4.1.2). Um die Nachricht im Anhang nachträglich zu entschlüsseln und ihre Signatur prüfen zu können, muss der Nutzer die erhaltene Nachricht an seine eigene E-Mail-Adresse senden. Beim nächsten Abholvorgang wird diese Nachricht dann nochmalig im Clientmodul aufbereitet.
REQ(ids=KOM-LE-A_2029)<b>KOM-LE-A_2029 - Aufbereitung einer vom Clientsystem erhaltenen KOM-LE-S/MIME-Nachricht</b>
PAR Das Clientmodul MUSS die vom Clientsystem empfangene Nachricht, deren Body eine message/rfc822 MIME Einheit mit einer dem KOM-LE-Profil entsprechenden Nachricht (KOM-LE-S/MIME-Nachricht) enthält, in den folgenden Schritten aufbereiten:

ORDERED-LIST->
LITEM->PAR Die in message/rfc822 Einheit enthaltene KOM-LE-S/MIME-Nachricht wird aus der erhaltenen Nachricht extrahiert und dem MTA übergeben.LITEM->PAR Die vom Clientsystem erhaltene Nachricht wird verworfen.
PAR <b>[<=]</b>

PAR Beispiel für die oben beschriebene Transformation:
PAR MIME-Version: 1.0
PAR Content-Type: multipart/mixed; boundary="unique-boundary-1"
PAR Subject: WG: Signed and encrypted in attachment
PAR Date: Fri, 10 Feb 2012 14:29:21 +0100
PAR From: musterfrau@komle.de
PAR To: musterfrau@komle.de
PAR X-KIM-Dienstkennung: KIM-Mail;Default;V1.0<br>X-KIM-Sendersystem: Beispiel-PVS;V2.81
PAR This is a multi-part message in MIME format.
PAR --unique-boundary-1
PAR Content-Type: text/plain;    charset="iso-8859-1"
PAR Content-Transfer-Encoding: quoted-printable
PAR Der f=FCr die Entschl=FCsselung der Nachricht ben=F6tigte Schl=FCssel =
PAR wurde nicht gefunden. =DCberpr=FCfen Sie ob die entsprechende Karte =
PAR gesteckt ist und leiten Sie diese Nachricht an Ihre eigene Email Adresse =
PAR (musterfrau@komle.de) weiter. Beim n=E4chsten Abholen der Nachricht =
PAR wird der Entschl=FCsselungsvorgang wiederholt.
PAR --unique-boundary-1
PAR Content-Type: message/rfc822    
PAR X-KOM-LE-Version: 1.0
PAR MIME-Version: 1.0
PAR Content-Type: application/pkcs7-mime; smime-type=enveloped-data;name="smime.p7m";
PAR Content-Transfer-Encoding: base64
PAR Content-Disposition: attachment;    filename="smime.p7m"
PAR Subject: KOM-LE Nachricht
PAR Date: Fri, 9 Feb 2012 12:07:17 +0100
PAR From: mustermann@komle.de
PAR To: musterfrau@komle.de
PAR Cc: mustermann2@komle.de
PAR <verschlüsselter Inhalt>
PAR --unique-boundary-1
PAR Im Clientmodul wird diese Nachricht entsprechend der Anforderung [KOM-LE-A_2029] aufbereitet:
PAR X-KOM-LE-Version: 1.0
PAR MIME-Version: 1.0
PAR Content-Type: application/pkcs7-mime;
PAR smime-type=enveloped-data; name="smime.p7m"
PAR Content-Transfer-Encoding: base64
PAR Content-Disposition: attachment;    filename="smime.p7m"
PAR Subject: KOM-LE Nachricht
PAR Date: Fri, 9 Feb 2012 12:07:17 +0100
PAR From: mustermann@komle.de
PAR To: [musterfrau@komle.de]musterfrau@komle.de
PAR Cc: mustermann2@komle.de
PAR <Verschlüsselter Inhalt>
PAR -HEADING(ids=3.3.5)3.3.5 Beispiele
PAR Das Clientsystem (C) verbindet sich mit dem Clientmodul (M) und sendet dem MTA-Server (S) eine Nachricht (im Beispiel werden auch die Zustände des Clientmoduls dargestellt):
PAR C:     <das Clientsystem öffnet eine mit TLS geschützte Verbindung mit dem Clientmodul>
PAR M:    <CONNECT Zustand>
PAR M->C: 220 KOM-LE Clientmodul ESMTP
PAR C->M: EHLO [192.168.1.5]
PAR M->C: 250 – SIZE 35882577
PAR M->C: 250 - AUTH LOGIN PLAIN
PAR M->C: 250 – 8BITMIME
PAR M->C: 250 ENCHANCEDSTATUSCODES
PAR C->M: AUTH LOGIN
PAR M->C: 334 VXNlcm5hbWU6
PAR C->M: bXVzdGVybWFubkBrb21sZS5kZSNtYWlsLmtvbWxlLmRlOjU4NyMxI0tPTS1MRSM3==
PAR M->C: 334 UGFzc3dvcmQ6
PAR C->M: lkajsdfvlj
PAR M:    <das Clientmodul öffnet eine mit TLS geschützte Verbindung mit dem MTA>
PAR S->M: 220 SMTP Server ESMTP
PAR M->S: EHLO [192.168.1.5]
PAR S->M: 250 – SIZE 35882577
PAR S->M: 250 - AUTH LOGIN PLAIN
PAR S->M: 250 – 8BITMIME
PAR S->M: 250 ENCHANCEDSTATUSCODES
PAR M->S: AUTH LOGIN
PAR S->M: 334 VXNlcm5hbWU6
PAR M->S: bXVzdGVybWFubkBrb21sZS5kZQ==
PAR S->M: 334 UGFzc3dvcmQ6
PAR M->S: lkajsdfvlj
PAR S->M: 235 2.7.0 Authentication successful
PAR M:     <PROXY Zustand>
PAR M->C: 235 2.7.0 Authentication successful
PAR C->M: MAIL FROM:<mustermann@komle.de>
PAR M->S: MAIL FROM:<[mustermann@komle.de]mustermann@komle.de>
PAR S->M: 250 OK
PAR M->C: 250 OK
PAR C->M: RCPT TO:<[musterfrau@komle.de]musterfrau@komle.de>
PAR M->S: RCPT TO:<[musterfrau@komle.de]musterfrau@komle.de>
PAR S->M: 250 OK
PAR M->C: 250 OK
PAR C->M: DATA
PAR M->C: 354 Start mail input; end with <CRLF>.<CRLF>
PAR M:    <PROCESS Zustand>
PAR C->M: From: "Max Mustermann" <mustermann@komle.de>
PAR C->M: To: "Erika Musterfrau" <[musterfrau@komle.de]musterfrau@komle.de>
PAR C->M: Subject: Biopsie Ergebnisse für Frau S. Muster
PAR C->M: Date: Mon, 30 Jan 2012 13:14:12 +0100
PAR C->M:
PAR C->M: <Inhalt der KOM-LE Nachricht>
PAR C->M: .
PAR M:    <Die Nachricht wird im Clientmodul aufbereitet>
PAR M->S: DATA
PAR S->M: 354 Start mail input; end with <CRLF>.<CRLF>
PAR M->S: X-KOM-LE-Version: 1.0
PAR M->S: MIME-Version: 1.0
PAR M->S: From: "Max Mustermann" <mustermann@komle.de>
PAR M->S: To: "Erika Musterfrau" <musterfrau@komle.de>
PAR M->S: Subject: KOM-LE Nachricht
PAR M->S: Date: Mon, 30 Jan 2012 13:14:12 +0100
PAR M->S: Content-Type: application/pkcs7-mime; mime-type=enveloped-data;name=smime.p7m
PAR M->S: Content-Transfer-Encoding: base64
PAR M->S: Content-Disposition: attachment; filename=smime.p7m
PAR M->S:
PAR M->S: <verschlüsselter Inhalt der KOM-LE Nachricht>
PAR M->S: .
PAR M:    <PROXY Zustand>
PAR S->M: 250 Ok
PAR M->C: 250 Ok
PAR C->M: QUIT
PAR M->S: QUIT
PAR S->M: 221 Bye
PAR S:    <der MTA schließt die Verbindung mit dem Clientmodul>
PAR M->C: 221 Bye
PAR M:    <das Clientmodul schließt die Verbindung mit dem Clientsystem>
PAR Das Senden einer Nachricht wird abgebrochen, weil die Anmeldedaten keine MTA-Adresse erhalten:
PAR C:     <das Clientsystem öffnet eine mit TLS geschützte Verbindung mit dem Clientmodul>
PAR M:     <CONNECT Zustand>
PAR M->C: 220 KOM-LE Clientmodul ESMTP
PAR C->M: EHLO [192.168.1.5]
PAR M->C: 250 – SIZE 35882577
PAR M->C: 250 - AUTH LOGIN PLAIN
PAR M->C: 250 – 8BITMIME
PAR M->C: 250 ENHANCEDSTATUSCODES
PAR C->M: AUTH LOGIN
PAR M->C: 334 VXNlcm5hbWU6
PAR C->M: bXVzdGVybWFubkBrb21sZS5kZQ==
PAR M->C: 334 UGFzc3dvcmQ6
PAR C->M: lkajsdfvlj
PAR M->C: 501 5.5.4 Benutzername muss die Adresse und die Portnummer des SMTP Servers
PAR Enthalten
PAR M:    <das Clientmodul schließt die Verbindung mit dem Clientsystem>
PAR Das Senden einer Nachricht wird abgebrochen, weil Verschlüsselungszertifikate weder für mustermann@komle.de noch für musterfrau@komle.de gefunden werden konnten:
PAR ...
PAR C->M: DATA
PAR M->C: 354 Start mail input; end with <CRLF>.<CRLF>
PAR M:    <PROCESS Zustand>
PAR C->M: From: "Max Mustermann" <mustermann@komle.de>
PAR C->M: To: "Erika Musterfrau" <musterfrau@komle.de>
PAR C->M: Subject: Biopsie Ergebnisse für Frau S. Muster
PAR C->M: Date: Mon, 30 Jan 2012 13:14:12 +0100
PAR C->M:
PAR C->M: <Inhalt der KOM-LE Nachricht>
PAR C->M: .
PAR M:    <Das Clientmodul konnte die Verschlüsselungszertifikate nicht finden>
PAR M->C: 451 Die Nachricht konnte nicht verschlüsselt werden, weil
PAR Verschlüsselungszertifikate für mustermann@komle.de, [musterfrau@komle.de]musterfrau@komle.de nicht zugänglich sind
PAR M->S: RSET
PAR S->M: 250 2.0.0 Flushed
PAR C->M: QUIT
PAR M->S: QUIT
PAR S->M: 221 Bye
PAR S:    <der MTA schließt die Verbindung mit dem Clientmodul>
PAR M->C: 221 Bye
PAR M:    <das Clientmodul schließt die Verbindung mit dem Clientsystem>
PAR Das Senden einer Nachricht wird abgebrochen, weil die Verbindung zwischen dem Clientmodul und dem Clientsystem abgebrochen wird:
PAR ...
PAR M->C: 235 2.7.0 Authentifizierung erfolgreich
PAR C->M: MAIL FROM:<[mustermann@komle.de]mustermann@komle.de>
PAR M->S: MAIL FROM:<[mustermann@komle.de]mustermann@komle.de>
PAR S->M: 250 OK
PAR M->C: 250 OK
PAR C->M: RCPT TO:<[musterfrau@komle.de]musterfrau@komle.de>
PAR C:     <das Clientsystem bricht die Verbindung mit dem Clientmodul ab>
PAR M->S: RCPT TO:<[musterfrau@komle.de]musterfrau@komle.de>
PAR M:     <das Clientmodul schließt die Verbindung mit dem MTA>
PAR -HEADING(ids=3.4)3.4 Empfangen von Nachrichten
PAR In diesem Kapitel werden Anforderungen an das Clientmodul formuliert, die für den Anwendungsfall „KOM-LE_AF_2 Nachricht empfangen“ [gemSysL_KOMLE] spezifisch sind.
PAR -HEADING(ids=3.4.1)3.4.1 Übersicht
PAR Beim Empfangen von KOM-LE-Nachrichten sorgt das Clientmodul dafür, dass für abgeholte Nachrichten vor der Weiterleitung an das Clientsystem der Vertraulichkeitsschutz aufgehoben und die Integrität geprüft werden. Abbildung 10 stellt die Interaktionen zwischen den am Abholen von KOM-LE-Nachrichten beteiligten Komponenten dar. Aus Sicht des Clientsystems agiert das Clientmodul als POP3-Server, und aus Sicht des POP3-Servers des Fachdienstes (weiter im Text auch als POP3-Server bezeichnet) agiert das Clientmodul als E-Mail-Client. Für Funktionen wie Datentransport, kryptographische Operationen, Kommunikation mit dem Verzeichnisdienst verwendet das Clientmodul entsprechende Dienste der TI-Plattform.

PAR Abbildung 10: Abb_Empfangen_Msg Empfangen von Nachrichten
PAR Beim Abholen von Nachrichten findet die Kommunikation zwischen dem Clientsystem, dem Clientmodul und dem POP3-Server über POP3 statt. Das Clientmodul fungiert als POP3-Proxy, der das Clientsystem mit dem POP3-Server verbindet, die Entschlüsselung und Signaturprüfung für die abgeholten KOM-LE-Nachrichten durchführt und die entschlüsselten Nachrichten an das Clientsystem liefert. Bei einer fehlgeschlagenen Integritätsprüfung wird der Empfänger der KOM-LE-Nachricht mit einer Fehlernachricht informiert. Die Weiterleitung der Client-Mail an das Clientsystem des Empfängers wird in diesem Fall durch das Clientmodul unterbunden.
PAR Dieses Dokument spezifiziert nicht alle Schritte und Einzelheiten der POP3-Kommunikation zwischen dem Clientsystem, dem Clientmodul und dem POP3-Server. Es setzt voraus, dass POP3 und dessen Erweiterungen dem Leser bekannt sind.
PAR Das Clientmodul benachrichtigt den Nutzer über Fehler, die während der Nachrichtenübertragung zwischen dem POP3-Server und dem Clientmodul oder bei der Bearbeitung der Nachrichten im Clientmodul auftreten. In den meisten Fällen wird das Clientsystem durch POP3-Meldungen über Fehler informiert. Das Clientsystem entscheidet anschließend über das weitere Vorgehen (weitermachen oder abbrechen und den Nutzer über den Fehler informieren).
PAR Beispiel: Verwendet das Clientsystem beim Empfangen von Nachrichten falsche Anmeldungsdaten, bekommt es vom Clientmodul „-ERR Der Nutzer konnte nicht authentifiziert werden“ als Antwort auf sein PASS-Kommando.
PAR Fehler, die bei der Entschlüsselung oder Integritätsprüfung einer Nachricht auftreten, werden anders behandelt:

LIST->
LITEM->PAR Kann die Nachricht nicht entschlüsselt werden (z.B. weil der entsprechende HBA nicht zu Verfügung steht), wird durch das Clientmodul eine Fehlernachricht generiert, die die verschlüsselte Nachricht als Anhang enthält. Um die Nachricht nachträglich zu entschlüsseln und ihre Signatur zu prüfen, kann der Nutzer die Nachricht an seine eigene E-Mail-Adresse senden, Maßnahmen treffen damit beim nächsten Abholen der entsprechende Schlüssel gefunden wird und den Abholvorgang wiederholen.LITEM->PAR Wenn die Integritätsprüfung der entschlüsselten KOM-LE-Nachricht fehlschlägt (z. B. weil die Integrität der Nachricht verletzt wurde) wird die entschlüsselte Nachricht verworfen und eine Fehlernachricht an den Empfänger der KOM-LE-Nachricht gesendet.
PAR Das Verhalten des Clientmoduls beim Abholen von Nachrichten kann mit Hilfe der in Abbildung 11 dargestellten Zustandsmuster beschrieben werden und haben illustrativen und nicht normativen Charakter. Die Umsetzung kann sich unterscheiden, solange das Ergebnis das gleiche ist. Die den Zuständen zugeordnete Anforderungen sind normativ, können aber außerhalb des Kontexts dieser Zustände umgesetzt werden.

PAR Abbildung 11: Abb_Status_CM_Empfang Zustände Clientmodul beim Nachrichtenempfang
PAR Das Clientmodul lauscht auf einem TCP-Port und wartet bis ein Clientsystem mit ihm eine Verbindung aufbaut. Sobald dies passiert, geht das Clientmodul in den CONNECT-Zustand über und betrachtet die POP3-Verbindung als geöffnet. Die POP3-Verbindung zwischen dem Clientmodul und dem Clientsystem muss mit TLS erfolgen.
PAR Im CONNECT-Zustand führt das Clientmodul einen POP3-Dialog mit dem Clientsystem, in dem ihm die Anmeldedaten des Nutzers sowie die Adresse und die Portnummer des POP3-Servers mitgeteilt werden. Sobald die Anmeldedaten und die Adresse des POP3-Servers übermittelt sind, baut das Clientmodul eine über TLS geschützte POP3-Verbindung mit dem POP3-Server auf, authentifiziert sich und geht in den PROXY-Zustand über.
PAR Im PROXY-Zustand leitet das Clientmodul POP3-Meldungen und POP3-Antwortcodes zwischen dem Clientsystem und dem POP3-Server hin und her, bis das Clientsystem mit dem RETR-Kommando das Abholen einer Nachricht initiiert. Sobald der POP3-Server beginnt, Inhalte einer Nachricht zu übertragen, geht das Clientmodul in den PROCESS-Zustand über.
PAR Im PROCESS-Zustand wird die Nachricht entschlüsselt, ihre Signatur geprüft und die aufbereitete Nachricht dem Clientsystem übermittelt. Sobald die Nachricht erfolgreich an das Clientsystem übermittelt wurde oder im Fehlerfall, geht das Clientmodul in den PROXY-Zustand zurück.
PAR -HEADING(ids=3.4.2)3.4.2 CONNECT-Zustand
PAR Sobald die TCP-Verbindung zwischen dem Clientsystem und dem Clientmodul aufgebaut wurde, geht das Clientmodul in den CONNECT-Zustand über.
PAR -HEADING(ids=3.4.2.1)3.4.2.1 Initialisierung
PAR Nachdem die POP3-Verbindung zwischen dem Clientsystem und dem Clientmodul aufgebaut wurde, sendet das Clientmodul dem Clientsystem die POP3-Begrüßung.
PAR Beispiel einer solchen Begrüßung: +OK KOM-LE Clientmodul POP3
PAR Das Clientmodul führt einen POP3-Dialog mit dem Clientsystem bis ihm das Clientsystem die Adresse und die Portnummer des POP3-Servers als einen Teil des während des Authentifizierungsverfahrens übertragenen Benutzernamens mitteilt.
PAR Tabelle Tab_POP3_Ant_Init beschreibt die Antworten, die das Clientmodul dem Clientsystem im CONNECT-Zustand sendet.
PAR (ids=Tabelle-5)Tabelle 5: Tab_POP3_Ant_Init Antworten Clientmodul im CONNECT-Zustand

TABLE(rows=5,cols=254+492)->
TR-> TH(0,0/1/1)->PAR Clientsystem -> Clientmodul TH(0,1/1/1)->PAR Clientmodul -> Clientsystem
TR-> TD(1,0/1/1)->PAR CAPA TD(1,1/1/1)->PAR “+OK” Antwortcode mit folgenden CAPA Kennworten:<br>TOP<br>USER<br>SASL PLAIN<br>UIDL
TR-> TD(2,0/1/1)->PAR USER, AUTH TD(2,1/1/1)->PAR Anmeldungsdaten erhalten und Verbindungsaufbau mit dem POP3-Server fortsetzen (siehe Kapitel 3.3.2.2)
TR-> TD(3,0/1/1)->PAR QUIT TD(3,1/1/1)->PAR „+ OK“ Antwortcode senden und die Verbindung mit dem Clientsystem schließen
TR-> TD(4,0/1/1)->PAR Andere Meldungen TD(4,1/1/1)->PAR „-ERR“ Antwortcode
REQ(ids=KOM-LE-A_2030)<b>KOM-LE-A_2030 - POP3-Dialog zur Authentifizierung</b>
PAR Das Clientmodul MUSS, nachdem die POP3-Verbindung zwischen dem Clientsystem und dem Clientmodul aufgebaut wurde und bis zu dem Punkt an dem das Clientsystem die Bestätigung des Erfolgs oder Misserfolgs seiner Authentifizierung erwartet, einen POP3-Dialog entsprechend Tabelle Tab_POP3_Ant_Init mit dem Clientsystem führen.
PAR <b>[<=]</b>

PAR -HEADING(ids=3.4.2.2)3.4.2.2 Verbindungsaufbau mit dem POP3-Server
PAR Das Clientmodul kann die Verbindung mit dem POP3-Server nur dann aufbauen, wenn ihm das Clientsystem die Adresse des POP3-Servers und die Portnummer des POP3-Dienstes übermittelt. Das Clientmodul erwartet, dass der Domain Name oder die IP-Adresse und die Portnummer während des Authentifizierungsverfahrens als Teil des Benutzernamens übergeben werden.
PAR Das Clientmodul führt das Authentifizierungsverfahren mit dem Clientsystem bis zu dem Punkt, an dem es mit dem entsprechenden Antwortcode die Authentifizierung akzeptieren oder ablehnen muss. Das Clientmodul allein kann das Clientsystem nicht authentifizieren. Die Authentizität der Zugangsdaten kann nur vom POP3-Server überprüft werden. Dazu authentisiert sich das Clientmodul im Auftrag vom Clientsystem gegenüber dem POP3-Server.
PAR Die Server Adresse und die Portnummer des POP3-Dienstes sind als Teil des POP3-Benutzernamens vom Clientsystem zu übergeben. Sie sind vom eigentlichen Benutzernamen durch das Zeichen ’#’ getrennt und als adresse:port String formatiert.
PAR Um mit SM-B/HBA über den Konnektor kommunizieren zu können, werden dem KOM-LE-Clientmodul ebenfalls als Teil des POP3-Benutzernamens, die

LIST->
LITEM->PAR MandantIdLITEM->PAR ClientSystemIdLITEM->PAR WorkplaceIdLITEM->PAR UserId (optional – ist für einen Zugriff auf HBA erforderlich)LITEM->PAR KonnektorId (optional).
PAR übergeben (siehe Kapitel 3.5 und [gemSpec_Kon] für Details zu MandantId, ClientSystemId, WorkplaceId und UserId). Der optionale Parameter KonnektorId, als Bestandteil des Aufrufkontext für SM-B, ermöglicht die Unterstützung von Multikonnektor-Umgebungen. Die Parameter entsprechen denen des aufrufenden Clients und werden voneinander durch das Zeichen ’#’ getrennt. Der Parameter UserId wird nur für den Zugriff auf einen HBA benötigt und kann entfallen wenn kein HBA erforderlich ist (z.B. wenn die Entschlüsselung der empfangenen Nachrichten ausschließlich mit SM-B durchgeführt wird). Der optionale Parameter KonnektorId kann ebenfalls entfallen, wenn das Clientmodul nicht mit mehreren Konnektoren kommunizieren muss.
PAR Die Reihenfolge der Parameter entspricht dem folgenden Muster und hat der den Parametern vorangestellten Nummer in der Reihenfolge zu entsprechen:
PAR [0] Benutzername<br>[1] <Domain Adresse des POP3-Servers>:<Port><br>[2] MandantId<br>[3] ClientsystemId<br>[4] WorkplaceId<br>— <optional> —<br>[5] UserId<br>[6] KonnektorId<br>[...]

PAR Abbildung 12: Abb_POP3_Nutzer_Name Format des POP3- Benutzernamens
PAR Beispiel:
PAR Bei folgenden Informationen

LIST->
LITEM->PAR Benutzername des Clients = „erik.mustermann@hrst_domain.kim.telematik“,LITEM->PAR Domain Adresse des POP3-Servers = „hrst_domain.kim.telematik“ und Portnummer = 995,LITEM->PAR MandantId = 1,LITEM->PAR ClientsystemId = KOM_LE,LITEM->PAR WorkplaceId = 7,LITEM->PAR UserId = 13LITEM->PAR KonnektorId = Konn_1
PAR erwartet das Clientmodul, dass das Clientsystem ihm den folgenden POP3-Benutzernamen als String überträgt:
PAR erik.mustermann@hrst_domain.kim.telematik#hrst_domain.kim.telematik:995#1#KOM_LE#7#13#Konn_1
PAR Enthält der POP3-Benutzername nicht alle erforderlichen Parameter, bricht das KOM-LE-Clientmodul den Empfangsvorgang mit dem -ERR Antwortcode ab. Wenn der erhaltene POP3-Benutzername zusätzliche optionale durch das Zeichen ‚#’ abgegrenzte Parameter enthält (z.B. #UserId#KonnektorId), dann müssen diese Parameter vom Clientmodul ausgewertet werden und der Empfangsvorgang wird fortgesetzt.
PAR Es gibt mehrere Benutzername/Password-basierte POP3-Authentifizierungsmechanismen:

LIST->
LITEM->PAR Mechanismen, wo die Übertragung von Benutzername und Passwort im Klartext erfolgt (USER/PASS und PLAIN)LITEM->PAR Challenge-Response-Mechanismen, wo der Benutzername im Klartext und das Passwort in Form eines auf vom Server erhaltenen Challenge-basierten Responses übertragen wird (DIGEST-MD5, CRAM-MD5, NTLM).
PAR Die auf Challenge-Response basierten Mechanismen machen das Extrahieren des Passworts aus der Challenge-basierten Response für das Clientmodul unpraktikabel. Deshalb werden für die Clientsystem-Clientmodul-Authentifizierung die PLAIN oder USER/PASS-Mechanismen verwendet.
PAR Sobald das Clientmodul die Anmeldedaten des Nutzers erhält, extrahiert es die Adresse des POP3-Servers und die Portnummer des POP3-Dienstes aus dem Nutzernamen und baut damit die Verbindung zum POP3-Server auf. Die Verbindung wird über TLS geschützt. Details zum Aufbau der TLS-Verbindung werden in Kapitel 4.1.3 beschrieben.
PAR Tabelle Tab_POP3_Verbindung enthält POP3-Antwortcodes, die das Clientmodul dem Clientsystem bei einem Verbindungsaufbau mit dem POP3-Server übermittelt.
PAR (ids=Tabelle-6)Tabelle 6: Tab_POP3_Verbindung Antwortcodes für POP3-Server-Verbindungsaufbau

TABLE(rows=7,cols=571+175)->
TR-> TH(0,0/1/1)->PAR Bedingung TH(0,1/1/1)->PAR POP3 Antwortcode<br>(Clientmodul -> Clientsystem)
TR-> TD(1,0/1/1)->PAR Das Clientsystem hat sich erfolgreich gegenüber dem POP3-Server mit den vom Clientsystem erhaltenen Anmeldungsdaten authentifiziert. TD(1,1/1/1)->PAR +OK
TR-> TD(2,0/1/1)->PAR Das Clientsystem verwendet für die POP3-Authentifizierung einen anderen Mechanismus als USER/PASS oder PLAIN. TD(2,1/1/1)->PAR -ERR
TR-> TD(3,0/1/1)->PAR Die vom Clientsystem erhaltene POP3-Authentifizierungsidentität ist nicht vollständig oder  falsch formatiert (POP3 Server Adresse, MandantId, ClientSystemId, WorkplaceID oder Platzhalter fehlt – siehe Abbildung "Abb_POP3_Nutzer_Name Format des POP3- Benutzernamens"). TD(3,1/1/1)->PAR -ERR
TR-> TD(4,0/1/1)->PAR Bei Übergabe der Parameter für den Aufrufkontext für SM-B (MandantID, ClientSystemID oder WorkplaceID) antwortet der Konnektor mit einem SOAP Fault (Code: 4004 - 4006) TD(4,1/1/1)->PAR -ERR
TR-> TD(5,0/1/1)->PAR Die Verbindung zwischen dem Clientmodul und dem POP3-Server kann nicht aufgebaut werden. TD(5,1/1/1)->PAR -ERR
TR-> TD(6,0/1/1)->PAR Die Authentifizierung gegenüber dem MTA schlägt fehl. TD(6,1/1/1)->PAR -ERR
REQ(ids=KOM-LE-A_2037-01)<b>KOM-LE-A_2037-01 - Antwortcodes des Verbindungsaufbaus mit dem POP3-Server</b>
PAR Das Clientmodul MUSS das Clientsystem über das Ergebnis des Verbindungsaufbaus mit dem POP3-Server mit den in der Tabelle Tab_POP3_Verbindung beschriebenen POP3-Antwortcodes informieren. <b>[<=]</b>

PAR Die Verbindungen zwischen dem Clientsystem und dem Clientmodul sowie zwischen dem Clientmodul und dem POP3-Server bleiben solange offen, bis eine der beiden geschlossen oder abgebrochen wird. Sobald eine der beiden Verbindungen geschlossen oder abgebrochen wird, übermittelt das Clientmodul die ausstehenden POP3-Meldungen und schließt die andere Verbindung. Die POP3-Sitzung wird damit für den POP3-Server, das Clientsystem und das Clientmodul beendet.
PAR Beispiel:
PAR Nachdem das Clientmodul das QUIT-Kommando vom Clientsystem erhält und dem POP3-Server übermittelt, bestätigt der POP3-Server das Ankommen des Kommandos mit dem Antwortcode „+OK“ und schließt die Verbindung mit dem Clientmodul. Das Clientmodul übermittelt den Antwortcode „+OK“ an das Clientsystem und schließt die Verbindung mit dem Clientsystem.
REQ(ids=KOM-LE-A_2031)<b>KOM-LE-A_2031 - Unterstützung der Serverteile der Mechanismen USER/PASS und SASL PLAIN</b>
PAR Das Clientmodul MUSS für die POP3-Authentifizierung des Clientsystems die Serverteile der USER/PASS und SASL-PLAIN-Mechanismen unterstützen.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2032)<b>KOM-LE-A_2032 - Extrahieren der Zugangsdaten des POP3-Servers und des Kartenaufrufkontextes</b>
PAR Das Clientmodul MUSS die Zugangsdaten für den POP3-Server und den Kartenaufrufcontext aus dem vom Clientsystem erhaltenen POP3-Benutzernamen entsprechend Abbildung Abb_POP3_Nutzer_Name extrahieren.
PAR <b>[<=]</b>

REQ(ids=A_21517)<b>A_21517 - POP3 - Extrahieren der KonnektorId für Multikonnekor-Umgebungen</b>
PAR Das Clientmodul MUSS, wenn der Parameter KonnektorId im erhaltenen POP3-Benutzernamen erhalten ist, diesen extrahieren und auswerten, um während der POP3-Verbindung, mit einem definierten Konnektor, Nachrichten weiterzuleiten. <b>[<=]</b>

PAR Der Parameter KonnektorId ist eine Referenz auf eine URI oder eine IP-Adresse eines Konnektors, um in einer Umgebung mit mehreren Konnektoren einen bestimmten Konnektor ansprechen zu können. Diese kann beispielweise in einer Konfigurations-Datei im Clientmodul hinterlegt sein.
REQ(ids=A_21518-02)<b>A_21518-02 - Überprüfung des POP3-Benutzernames</b>
PAR Das Clientmodul MUSS die übergebene POP3-Benutzername-Zeichenkette auf Vollständigkeit überprüfen. Werden optionale Bestandteile des POP3-Benutzernamens nicht genutzt, MUSS sichergestellt werden das später folgende optionale Bestandteile in ihrer vorgegebenen Position platziert werden. Als Platzhalter ist in so einem Fall "*" zu verwenden. Wenn die POP3-Benutzername-Zeichenkette nicht vollständig ist, MUSS das Clientmodul den POP3 Fehlercode gemäß Tabelle "Tab_POP3_Verbindung Antwortcodes für POP3-Server-Verbindungsaufbau" an das Clientsystem senden und den Vorgang abbrechen.<br><b>[<=]</b>

PAR Beispiel einer vollständigen POP3-Benutzername-Zeichenkette:

LIST->
LITEM->PAR ohne optionale Bestandteile:
PAR erik.mustermann@hrst_domain.kim.telematik#hrst_domain.kim.telematik:995#1#KOM_LE#7

LIST->
LITEM->PAR nur UserId als optionaler Bestandteil:
PAR erik.mustermann@hrst_domain.kim.telematik#hrst_domain.kim.telematik:995#1#KOM_LE#7#13

LIST->
LITEM->PAR keine UserId jedoch die KonnektorId:
PAR erik.mustermann@hrst_domain.kim.telematik#hrst_domain.kim.telematik:995#1#KOM_LE#7#*#Konn_1

LIST->
LITEM->PAR UserId und KonnektorId als optionale Bestandteile:
PAR erik.mustermann@hrst_domain.kim.telematik#hrst_domain.kim.telematik:995#1#KOM_LE#7#13#Konn_1
PAR Erfolgt die Einbindung von KIM in ein bestehendes Mail-System, kann ein übergebener Delimiter ":" zwischen dem Serveranteil und dem Port (z. B. hrst_domain.kim.telematik:995) des POP3-Benutzernamens zu Fehlern bei der Interpretation im Bestandsystem führen. Es werden daher weitere Delimiter im Benutzernamen unterstützt, sofern die Funktionalität gemäß der Bestandsanforderungen zu den Benutzernamen, in semantischer Abgrenzung, uneingeschränkt erhalten bleiben. Es gilt, dass die Bestandteile des POP3-Benutzernames in ihrem semantischen Bezug gemäß [RFC1123, RFC2822] einhalten müssen.
REQ(ids=KOM-LE-A_2033-01)<b>KOM-LE-A_2033-01 - Verbindungsaufbau mit POP3-Server über Adresse und Portnummer</b>
PAR Das Clientmodul MUSS die POP3-Adresse und die Portnummer, die aus dem vom Clientsystem erhaltenen POP3-Benutzernamen extrahiert wurden (siehe Abbildung Abb_POP3_Nutzer_Name), für den Verbindungsaufbau mit dem POP3-Server verwenden. <b>[<=]</b>

REQ(ids=KOM-LE-A_2034)<b>KOM-LE-A_2034 - Authentifizierung gegenüber POP3-Server mit Benutzernamen und Passwort</b>
PAR Das Clientmodul MUSS den Benutzernamen, der aus dem vom Clientsystem erhaltenen POP3-Benutzernamen extrahiert wurde (siehe Abbildung Abb_POP3_Nutzer_Name) sowie das vom Clientsystem erhaltene Passwort für die Authentifizierung gegenüber den POP3-Server verwenden.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2035)<b>KOM-LE-A_2035 - Unterstützung der Clientteile der Mechanismen USER/PASS und SASL PLAIN</b>
PAR Das Clientmodul MUSS für das Authentifizierungsverfahren mit dem POP3-Server den Clientteil der USER/PASS und SASL-PLAIN-Mechanismen für POP3-Authentifizierung unterstützen.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2036)<b>KOM-LE-A_2036 - Authentifizierung gegenüber POP3-Server mit anderen Mechanismen als USER/PASS oder SASL PLAIN</b>
PAR Das Clientmodul KANN für das Authentifizierungsverfahren mit dem POP3-Server andere als USER/PASS oder SASL-PLAIN-Authentifizierungsmechanismen benutzen.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2038)<b>KOM-LE-A_2038 - Schließen der POP3-Verbindung mit dem Clientsystem</b>
PAR Das Clientmodul MUSS die POP3-Verbindung mit dem Clientsystem aufrechterhalten. Das Schließen der Verbindung ist nur bei folgenden Ausnahmen zulässig:

LIST->
LITEM->PAR Nachdem die Verbindung zwischen dem Clientmodul und dem POP3-Server geschlossen wird. In diesem Fall MUSS das Clientmodul die Verbindung mit dem POP3-Server schließen. Falls es vom POP3-Server erhaltene und dem Clientsystem noch nicht übertragene POP3-Meldungen gibt, MUSS das Clientmodul diese Meldungen dem Clientsystem übertragen, und nur danach die Verbindung mit dem Clientsystem schließen.LITEM->PAR Wenn der POP3-Server innerhalb eines konfigurierbaren Timeouts nicht auf ein POP3-Kommando reagiert. In diesem Fall MUSS das Clientmodul den Antwortcode „- ERR timeout“ an das Clientsystem senden und anschließend die Verbindung schließen.LITEM->PAR Wenn die Verbindung zwischen dem Clientmodul und dem POP3-Server noch nicht aufgebaut wurde und das Clientsystem das QUIT-Kommando übermittelt. In diesem Fall MUSS das Clientmodul mit „+OK“ Antwortcode antworten und die Verbindung mit dem Clientsystem schließen.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2039)<b>KOM-LE-A_2039 - Schließen der POP3-Verbindung mit dem POP3-Server</b>
PAR Das Clientmodul MUSS die POP3-Verbindung mit dem POP3-Server aufrechterhalten. Das Schließen der Verbindung ist nur zulässig:

LIST->
LITEM->PAR Nachdem die Verbindung zwischen dem Clientmodul und dem Clientsystem geschlossen wird. In diesem Fall MUSS das Clientmodul die Verbindung mit dem POP3-Server schließen. Falls es vom Clientsystem erhaltene und dem POP3-Server noch nicht übertragene POP3-Kommandos gibt, MUSS das Clientmodul diese Kommandos dem POP3-Server übertragen und nur danach die Verbindung mit dem POP3-Server schließen.LITEM->PAR Wenn das Clientmodul innerhalb eines konfigurierbaren Timeouts keine neuen PoP3-Kommandos sendet. In diesem Fall MUSS das Clientmodul die Verbindung mit dem MTA schließen.
PAR <b>[<=]</b>

PAR Nachdem das Clientsystem sich gegenüber dem POP3-Server erfolgreich authentifiziert hat, geht das Clientmodul in den PROXY-Zustand über. Anderenfalls bleibt das Clientmodul im CONNECT-Zustand.
PAR -HEADING(ids=3.4.3)3.4.3 PROXY-Zustand
PAR Im PROXY-Zustand vermittelt das Clientmodul POP3-Meldungen und Antwortcodes zwischen dem Clientsystem und dem POP3-Server. Das Clientmodul bleibt in diesem Zustand bis das Clientsystem das RETR-Kommando sendet und der POP3-Server das Erhalten dieses Kommandos mit dem Antwortcode „+OK“ bestätigt. Das Clientmodul leitet den Antwortcode „+OK“ an das Clientsystem weiter und geht in den PROCESS-Zustand über.
PAR In diesem Zustand kann das Clientmodul vom Clientsystem das TOP-Kommando erhalten, das <MsgID> und <N> als Parameter hat. Es fordert den POP3-Server zur Übertragung des Headers und von <N> Nachrichtenzeilen der durch <MsgID> identifizierten Nachricht auf. Um sicherzustellen, dass das Clientmodul keine Teile einer verschlüsselten S/MIME-Nachricht bekommt, wird der Parameter <N> vom Clientmodul immer auf 0 gesetzt.
REQ(ids=KOM-LE-A_2040)<b>KOM-LE-A_2040 - Übermittlung von POP3-Kommandos und -Meldungen nach erfolgreicher Authentifizierung</b>
PAR Das Clientmodul MUSS, nachdem das Authentifizierungsverfahren mit dem Clientsystem erfolgreich beendet ist, alle vom Clientsystem erhaltenen POP3-Kommandos, mit Ausnahme des TOP-Kommandos, bzw. alle vom POP3-Server erhaltenen POP3-Meldungen, mit Ausnahme von Inhalten vom E-Mail-Nachrichten, ohne jegliche Veränderungen dem POP3-Server bzw. dem Clientsystem übermitteln.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2041)<b>KOM-LE-A_2041 - Setzen des Parameters       des TOP-Kommandos auf Null </b>
PAR Das Clientmodul MUSS, wenn es vom Clientsystem ein TOP <MsgID> <N> Kommando mit einem von Null abweichenden Parameter <N> erhält, den Wert des Parameters <N> auf Null setzen, bevor das Kommando dem POP3-Server übermittelt wird.
PAR <b>[<=]</b>

PAR Hinweis für Implementierung
PAR Wegen eines Thunderbird-Bugs:
PAR Das getrennte Laden von Header und Body ist in Thunderbird nicht korrekt implementiert. Möglicher Bugfix im CM: Bei TOP 0 den Msg Header ändern: MIME Element(MIME-Version: 1.0) aus Header entfernen, dann klappt das nachladen.
PAR -HEADING(ids=3.4.4)3.4.4 PROCESS-Zustand
PAR Im PROZESS-Zustand nimmt das Clientmodul die Inhalte der vom POP3-Server abgerufenen KOM-LE-Nachricht entgegen, entschlüsselt die Nachricht, prüft deren Integrität und leitet die aufbereitete Client-Mail dem Clientsystem weiter. Im Erfolgsfall wird in die aufbereitete Client-Mail ein Vermerk hinzugefügt und das Clientsystem über das erfolgreiche Abholen der Nachricht informiert. Im Fehlerfall wird das Clientsystem mit dem entsprechenden Antwortcode und Fehlernachricht über den Fehler informiert.
PAR -HEADING(ids=3.4.4.1)3.4.4.1 Empfang und Weiterleitung einer Nachricht
PAR Nachdem der POP3-Server das Erhalten des RETR-Kommandos mit dem Antwortcode „+OK“ bestätigt, erwartet das Clientmodul, dass der POP3-Server mit der Übertragung der Nachricht beginnt. Die Inhalte der Nachricht werden im Clientmodul zwischengespeichert. Wenn die Nachricht eine entsprechend dem KOM-LE-S/MIME-Profil geschützte Nachricht ist, bereitet das Clientmodul die erhaltene Nachricht auf und übermittelt sie anschließend dem Clientsystem. Wenn es keine KOM-LE-S/MIME-Nachricht ist, wird sie ohne jegliche Änderungen dem Clientsystem übermittelt.
PAR Nachdem die Nachricht dem Clientsystem übermittelt wurde, löscht das Clientmodul die zwischengespeicherten Nachrichtinhalte und geht in den PROXY-Zustand zurück.
REQ(ids=A_21236)<b>A_21236 - Headerfeld „Return-Path“ der äußeren Nachricht</b>
PAR Das Clientmodul MUSS, nach dem Empfang der E-Mail vom Fachdienst, das im Header der äußeren Nachricht enthaltene Header-Element Return-Path, vor der Weiterleitung an den E-Mail-Client des Empfängers, in den Header der entschlüsselten Mail an den Empfänger übernehmen. <b>[<=]</b>

PAR -HEADING(ids=3.4.4.2)3.4.4.2 Aufbereitung einer Nachricht
PAR Das Clientmodul soll zwischen den KOM-LE S/MIME und anderen Nachrichten unterscheiden. Wenn die angekommene Nachricht eine KOM-LE-S/MIME-Nachricht ist, entschlüsselt das Clientmodul ihre Inhalte und führt die Prüfung ihrer Signatur durch. Die KOM-LE-S/MIME-Nachrichten sind anhand des X-KOM-LE-Version Header-Elements erkennbar. Wenn die ankommende Nachricht keine KOM-LE-S/MIME-Nachricht ist (z.B. nicht signierte und nicht verschlüsselte Fehlernachrichten), soll sie ohne weitere Veränderungen dem Clientsystem übermittelt werden.
REQ(ids=A_21390)<b>A_21390 - Prüfung auf eine KOM-LE-S/MIME-Nachricht</b>
PAR Zur Unterscheidung einer KOM-LE-S/MIME-Nachricht von einer anderen Nachricht MUSS das Clientmodul prüfen, ob das Header-Element X-KOM-LE-Version in der äußeren Nachricht vorhanden ist. Wenn das Header-Element nicht gesetzt ist, MUSS das Clientmodul die Nachricht ohne weitere Veränderungen an das Clientsystem übermitteln. Wenn das Header-Element gesetzt ist, MUSS das Clientmodul die Nachricht wie eine KOM-LE-S/MIME-Nachricht behandeln.<br><b>[<=]</b>

REQ(ids=A_21391-02)<b>A_21391-02 - Auswertung des X-KOM-LE-Version Header Elements</b>
PAR Das Clientmodul MUSS prüfen, ob das Header-Element X-KOM-LE-Version in der äußeren Nachricht eine vom Clientmodul unterstützte Version enthält. Wenn das nicht der Fall ist, MUSS das Clientmodul den Nutzer mit einer E-Mail über den Fehlerfall informieren. Die Fehlernachricht entspricht einer multipart/mixed MIME-Nachricht. Die Originalnachricht MUSS als message/rfc822 MIME-Einheit in die Fehlernachricht eingepackt werden. Zusätzlich muss diese neue multipart/mixed MIME-Nachricht eine text/plain MIME-Einheit mit dem Fehlertext, "Das verwendete Clientmodul unterstützt die in der empfangenen Nachricht angegebene KIM-Version <KIMVersion> nicht." enthalten. Die orig-date, from, sender, reply-to, to und cc Header-Elemente der neuen multipart/mixed Nachricht werden aus der empfangenen Nachricht übernommen. Das subject Header-Element der neuen multipart/mixed Nachricht erhält den Wert „Die KIM-Version der empfangenen Nachricht wird nicht unterstützt“.<br><b>[<=]</b>

PAR Bei einer Nachricht mit dem Subject „Die KIM-Version der empfangenen Nachricht wird nicht unterstützt“ gibt es folgende Optionen:

LIST->
LITEM->PAR Wenn die empfangene Nachricht vom Server gelöscht wurde, hat der Nutzer die Möglichkeit durch das Senden an die eigene E-Mail-Adresse und das anschließende Abholen über ein Clientmodul mit passender Version die Aufbereitung zu wiederholen.LITEM->PAR Wenn die empfangene Nachricht nicht vom Server gelöscht wurde, wird beim nächsten Abholen dieser Nachricht die Aufbereitung wiederholt.
PAR Für die Entschlüsselung und die Signaturprüfung verwendet das Clientmodul die Dienste der TI-Plattform, die dem Clientmodul über Schnittstellen des Konnektors zur Verfügung gestellt werden.
PAR Für die vereinfachte Darstellung wird im Folgenden ein Beispiel einer Fehlernachricht ohne die Originalnachricht dargestellt:
PAR From: "Sender" <sender@maildomain.de><br>To: <empfaenger@maildomain.de><br>Message-Id: <II8HEDLEUEU4.EG0B98QUZNPM2@STST-TEST><br>Subject: Die KIM-Version der empfangenen Nachricht wird nicht unterstützt<br>MIME-Version: 1.0<br>Content-Type: multipart/mixed; boundary="=-hDUtypluINBWKuVpu2reTw=="<br>X-KIM-Fehlermeldung: 4008<br><br>--=-hDUtypluINBWKuVpu2reTw==<br>Content-Type: text/plain; charset=utf-8<br>Content-Transfer-Encoding: quoted-printable<br><br>Das verwendete Clientmodul unterstützt die in der empfangenen<br>Nachricht angegebene KIM-Version [1.5] nicht.<br>Das verwendete Clientmodul unterstützt nur Nachrichten einer KIM-<br>Version [1.0].<br><br>Es wird empfohlen, das verwendete Clientmodul zu aktualisieren!<br>Leiten Sie diese Mail an Ihre eigene KIM-E-Mail-Adresse weiter, um die<br>Nachrichtenverarbeitung beim nächsten Abruf der Nachricht zu<br>wiederholen.
PAR -HEADING(ids=3.4.4.2.1)3.4.4.2.1 Entschlüsselung
PAR Für die Entschlüsselung der ankommenden Nachricht wird der private Schlüssel PrK.HCI.ENC bzw. Prk.HP.ENC verwendet, der dem Verschlüsselungszertifikat der Institution bzw. des Leistungserbringers zugeordnet ist. Der Zugriff auf die entsprechende Karte und die Entschlüsselung erfolgen über die Aufrufe der entsprechenden Operationen der Außenschnittstelle des Konnektors. Eine detaillierte Beschreibung erfolgt im Kapitel 3.8.4.
PAR Wenn die Nachricht für mehrere Empfänger verschlüsselt wurde, liegt es in der Verantwortung des Clientmoduls sicherzustellen, dass die Nachricht mit dem Schlüssel des den Abholvorgang auslösenden Nutzers entschlüsselt wird. Der erforderliche Schlüssel kann mit Hilfe des im KOM-LE-S/MIME-Profil beschriebenen recipient-emails Attributs im EnvelopedData CMS-Objekt identifiziert werden. Das EnvelopedData CMS-Objekt enthält die verschlüsselten Inhalte und im recipient-emails Attribut werden die Zusammenhänge zwischen den E-Mail-Adressen der Empfänger und den verwendeten Verschlüsselungszertifikaten definiert. Das ermöglicht die Identifizierung des erforderlichen Verschlüsselungszertifikats, dessen zugehöriger privater Schlüssel für die Entschlüsselung verwendet werden soll. Dadurch kann vermieden werden, dass die Nachricht mit dem freigeschalteten Schlüssel eines Empfängers entschlüsselt wird, der nicht derjenige ist, der den Abholvorgang ausgelöst hat. Das Clientmodul geht davon aus, dass der Nutzername, der für die POP3-Authentifizierung verwendet wurde, der E-Mail-Adresse des Empfängers entspricht und benutzt ihn, um den entsprechenden RecipientIdentifier aus dem recipient-emails Attribut auszulesen. Wenn es keinen RecipientIdentifier gibt, der dem POP3-Nutzernamen des Empfängers entspricht, wird die Entschlüsselung als fehlgeschlagen betrachtet.
PAR Wenn die Entschlüsselung fehlschlägt, wird dem Clientsystem die verschlüsselte Nachricht im Anhang einer Fehlernachricht übermittelt. Hierzu wird die angekommene KOM-LE-S/MIME-Nachricht als eine message/rfc822 MIME-Einheit in eine multipart/mixed MIME-Nachricht verpackt, die zusätzlich eine text/plain MIME-Einheit mit der Fehlermeldung enthält. Die orig-date, from, sender, reply-to, to und cc Header-Elemente der neuen Nachricht werden aus der ursprünglichen Nachricht übernommen. Der Betreff der neuen Nachricht enthält die Zeichenkette „Die Nachricht konnte nicht entschlüsselt werden“.
PAR Beispiel:
PAR Kann eine Nachricht auf Grund des fehlenden HBA mit dem erforderlichen privaten Schlüssel nicht im Clientmodul entschlüsselt werden, wird die Nachricht wie folgt dem Clientsystem übermittelt:
PAR MIME-Version: 1.0
PAR Content-Type: multipart/mixed; boundary="unique-boundary-1"
PAR Subject: Die Nachricht konnte nicht entschlüsselt werden
PAR Date: Fri, 9 Feb 2012 12:07:17 +0100
PAR From: mustermann@komle.de
PAR To: musterfrau@komle.de
PAR X-KIM-Fehlermeldung: cmgerr_4
PAR This is a multi-part message in MIME format.
PAR --unique-boundary-1
PAR Content-Type: text/plain;    charset="iso-8859-1"
PAR Content-Transfer-Encoding: quoted-printable
PAR Der f=FCr die Entschl=FCsselung der Nachricht ben=F6tigte Schl=FCssel =
PAR wurde nicht gefunden. =DCberpr=FCfen Sie ob die entsprechende Karte =
PAR gesteckt ist und leiten Sie diese Nachricht an Ihre eigene Email Adresse =
PAR (musterfrau@komle.de) weiter. Beim n=E4chsten Abholen wird der =
PAR Entschl=FCsselungsvorgang wiederholt.
PAR --unique-boundary-1
PAR Content-Type: message/rfc822    
PAR X-KOM-LE-Version: 1.0
PAR MIME-Version: 1.0
PAR Content-Type: application/pkcs7-mime; name="smime.p7m"; name="smime.p7m"
PAR Content-Transfer-Encoding: base64
PAR Content-Disposition: attachment;    filename="smime.p7m"
PAR Subject: KOM-LE Nachricht
PAR Date: Fri, 9 Feb 2012 12:07:17 +0100
PAR From: mustermann@komle.de
PAR To: [musterfrau@komle.de]musterfrau@komle.de
PAR 567GhIGfHfYT6ghyHhHUujpfyF4f8HHGTrfvhJhjH776tbB9HG4VQbnj7
PAR 77n8HHGT9HG4VQpfyF467GhIGfHfYT6rfvbnj756tbBghyHhHUujhJhjH
PAR HUujhJh4VQpfyF467GhIGfHfYGTrfvbnjT6jH7756tbB9H7n8HHGghyHh
PAR ...
PAR 9efmAAAAAAAAAAAAAA==
PAR --unique-boundary-1--
REQ(ids=KOM-LE-A_2042)<b>KOM-LE-A_2042 - Entschlüsselung einer KOM-LE-SMIME-Nachricht</b>
PAR Das Clientmodul MUSS eine vom POP3-Server erhaltene und dem KOM-LE-S/MIME-Profil entsprechende E-Mail entschlüsseln. Nachrichten, die nicht dem KOM-LE-S/MIME-Profil entsprechen, sind ohne Veränderung an das Clientsystem  weiterzuleiten.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2043)<b>KOM-LE-A_2043 - Beachtung des recipient-emails Attributs bei der Entschlüsselung</b>
PAR Das Clientmodul MUSS bei der Entschlüsselung das recipient-emails Attribut des EnvelopedData-CMS-Objekts beachten, um die Nachricht mit dem Schlüssel des Nutzers, der den Abholvorgang ausgelöst hat, zu entschlüsseln.
PAR <b>[<=]</b>

REQ(ids=A_20628)<b>A_20628 - Beachtung des received-Header-Attributs bei der Entschlüsselung</b>
PAR Das Clientmodul MUSS nach erfolgreicher Entschlüsselung des EnvelopedData-CMS-Objekts das received-Header-Attribut in den Header der entschlüsselten Nachricht übernehmen. <b>[<=]</b>

REQ(ids=KOM-LE-A_2044)<b>KOM-LE-A_2044 - E-Mail-Adresse des den Abholvorgang auslösenden Nutzers</b>
PAR Das Clientmodul MUSS den vom Clientsystem erhaltenen POP3-Usernamen (ohne den #server:port#... Teil) als die E-Mail-Adresse des den Abholvorgang auslösenden Nutzers betrachten.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2045)<b>KOM-LE-A_2045 - Entschlüsselung nur mit Schlüsseln des abholenden Nutzers</b>
PAR Das Clientmodul DARF für die Entschlüsselung einer Nachricht Schlüssel NICHT verwenden, wenn sie von anderen Nutzern stammen als von dem der den Abholvorgang ausgelöst hat.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2179-01)<b>KOM-LE-A_2179-01 - Vermerk in der Nachricht bei erfolgreicher Entschlüsselung</b>
PAR Das Clientmodul MUSS bei erfolgreicher Entschlüsselung der KOM-LE-Nachricht den Vermerk „Die Nachricht wurde entschlüsselt.“ an den Text der Nachricht anhängen. Es ist dabei das Format des TextParts zu beachten (mediatype text/html oder text/plain) und der Vermerk diesem Format anzupassen. <b>[<=]</b>

REQ(ids=KOM-LE-A_2046)<b>KOM-LE-A_2046 - Aufbau der Fehlernachricht bei fehlgeschlagener Entschlüsselung</b>
PAR Das Clientmodul MUSS eine empfangene, dem KOM-LE-S/MIME-Profil entsprechende Nachricht, die z.B. auf Grund des fehlenden Schlüssels nicht entschlüsselt werden kann, als eine message/rfc822 MIME-Einheit in einer neuen multipart/mixed MIME-Nachricht dem Clientsystem übermitteln. Zusätzlich muss diese neue multipart/mixed MIME-Nachricht eine text/plain MIME-Einheit mit dem Fehlertext enthalten. Die orig-date, from, sender, reply-to, to und cc Header-Elemente der neuen multipart/mixed Nachricht werden aus der empfangenen Nachricht übernommen. Das subject Header-Element der neuen multipart/mixed Nachricht erhält den Wert „Die Nachricht konnte nicht entschlüsselt werden“.
PAR <b>[<=]</b>

PAR Bei einer Nachricht mit dem Subject „Die Nachricht konnte nicht entschlüsselt werden“ gibt es folgende Optionen:

LIST->
LITEM->PAR Wenn die empfangene Nachricht vom Server gelöscht wurde, hat der Nutzer die Möglichkeit durch das Senden an die eigene E-Mail-Adresse und das anschließende Abholen die Aufbereitung zu wiederholen.LITEM->PAR Wenn die empfangene Nachricht nicht vom Server gelöscht wurde, wird beim nächsten Abholen dieser Nachricht die Aufbereitung wiederholt.
PAR Tabelle Tab_Fehlertext_Entschl enthält die Fehlertexte, die in die Nachricht eingeführt werden, wenn die Entschlüsselung nicht durchgeführt werden konnte.
PAR (ids=Tabelle-#)Tabelle #: Tab_Fehlertext_Entschl Fehlertexte für Entschlüsselungsfehler

TABLE(rows=5,cols=22+334+365)->
TR-> TH(0,0/1/1)->PAR ID* TH(0,1/1/1)->PAR Bedingung TH(0,2/1/1)->PAR Fehlertexte
TR-> TD(1,0/1/1)->PAR 00 TD(1,1/1/1)->PAR Die KOM-LE-Nachricht wurde erfolgreich entschlüsselt. TD(1,2/1/1)->PAR Die KOM-LE-Nachricht wurde erfolgreich entschlüsselt.
TR-> TD(2,0/1/1)->PAR 01 TD(2,1/1/1)->PAR Die KOM-LE-Nachricht konnte auf Grund eines nicht verfügbaren Schlüssels nicht entschlüsselt werden. TD(2,2/1/1)->PAR Der für die Entschlüsselung der Nachricht benötigte Schlüssel wurde nicht gefunden. Überprüfen Sie ob die entsprechende Karte gesteckt ist und leiten Sie diese Nachricht an Ihre eigene E-Mail-Adresse (<Email Adresse>) weiter. Beim nächsten Abholen wird der Entschlüsselungsvorgang wiederholt.
TR-> TD(3,0/1/1)->PAR 02 TD(3,1/1/1)->PAR Die KOM-LE-Nachricht konnte aufgrund des falschen Formats nicht entschlüsselt werden (z.B. enthält die Nachricht das X-KOM-LE-Version Header-Element, entspricht aber nicht dem KOM-LE-S/MIME-Profil). TD(3,2/1/1)->PAR Die Nachricht wurde als eine verschlüsselte KIM-Nachricht gekennzeichnet, konnte aber auf Grund des falschen Formats nicht entschlüsselt werden. Die Verschlüsselte Nachricht befindet sich im Anhang. Bitte kontaktieren Sie den Absender der Nachricht.
TR-> TD(4,0/1/1)->PAR 03 TD(4,1/1/1)->PAR Der Konnektor steht für die Entschlüsselung nicht zur Verfügung. TD(4,2/1/1)->PAR Die Entschlüsselung konnte nicht erfolgen, weil der Konnektor nicht antwortet. Stellen Sie sicher, dass der Konnektor wieder zur Verfügung steht und leiten Sie diese Nachricht an Ihre eigene E-Mail-Adresse (<Email Adresse>) weiter. Beim nächsten Abholen wird der Entschlüsselungsvorgang wiederholt.
PAR *) Hinweis: Die in der Tabelle enthaltene ID des jeweiligen Prüfvermerks kann gemäß [KOM-LE-A_2047] als ID dem Fehlertext der MIME Fehlernachricht hinzugefügt werden und muss in das X-KIM-DecryptionResult Header-Element aufgenommen werden, um damit eine spätere automatische Auswertung zu ermöglichen.
REQ(ids=KOM-LE-A_2047-02)<b>KOM-LE-A_2047-02 - Fehlertexte bei fehlgeschlagener Entschlüsselung</b>
PAR Das Clientmodul MUSS bei fehlgeschlagener Entschlüsselung entsprechend der jeweiligen Bedingung den in Tabelle "Tab_Fehlertext_Entschl" definierten Fehlertexte in die text/plain MIME-Einheit der multipart/mixed MIME-Fehlernachricht aufnehmen. Zusätzlich MUSS das Clientmodul ein Mail-Header-Attribut X-KIM-DecryptionResult mit der dazugehörigen ID aus der Tabelle "Tab_Fehlertext_Entschl" Fehlercode befüllen. Treten im Entschlüsselungsprozess Fehler auf, die nicht in der Tabelle "Tab_Fehlertext_Entschl" definierte sind, MUSS das Clientmodul für diese Fehler das Mail-Header-Attribut X-KIM-DecryptionResult mit einem herstellerspezifischen Fehlercode befüllen, welcher mit "X" beginnt. <b>[<=]</b>

PAR Hinweis: Sollten mehrere negative Ergebnisse bei der Entschlüsselung einer KOM-LE Nachricht hervorgehen KANN das Mail-Header-Attribut X-KIM-DecryptionResult mehrmals verwendet werden.<br><br>Beispiel:<br>X-KIM-DecryptionResult: 01<br>X-KIM-DecryptionResult: 02<br>X-KIM-DecryptionResult: X99
PAR -HEADING(ids=3.4.4.2.2)3.4.4.2.2 Integritätsprüfung
PAR Nachdem die angekommene Nachricht erfolgreich entschlüsselt wurde, prüft das Clientmodul ihre Integrität. Dabei werden die digitale Signatur der Nachricht, der Zertifizierungspfad für das Signaturzertifikat und die Integrität des recipient-emails Attributs geprüft. Für die Signaturprüfung der Nachricht wird das im CMS-Objekt mitgelieferte C.HCI.OSIG-Institutionszertifikat benutzt. Die Prüfung der Signatur erfolgt über die Aufrufe der entsprechenden Operationen der Außenschnittstelle des Konnektors. Eine detaillierte Beschreibung erfolgt in Kapitel 3.8.2.
PAR In der Tabelle "Tab_Verm_Sig_Prüf" werden die Prüfergebnisse mit den entsprechenden Fehlercodes sowie die Vermerke zusammengefasst. Die Prüfergebnisse entsprechen dem Gesamtergebnis für die Prüfung einer nicht qualifizierten Dokumentensignatur (nonQES) für die Operation VerifyDocument des Konnektors gemäß [gemSpec_KON#TAB_KON_754] und [gemSpec_KON#TAB_KON_124].
PAR Wenn die Integritätsprüfung der entschlüsselten KOM-LE-Nachricht fehlschlägt, dann wird eine Fehlernachricht gemäß [A_23165] generiert und das X-KIM-IntegrityCheckResult Header-Element mit der jeweiligen ID gemäß der Tabelle "Tab_Verm_Sig_Prüf" befüllt.
PAR (ids=Tabelle-7)Tabelle 7: Tab_Verm_Sig_Prüf Vermerke mit Ergebnissen der Signaturprüfung

TABLE(rows=10,cols=30+149+89+192+239)->
TR-> TH(0,0/1/1)->PAR ID* TH(0,1/1/1)->PAR Prüfergebnis TH(0,2/1/1)->PAR Fehlercode TH(0,3/1/1)->PAR Ergebnis TH(0,4/1/1)->PAR Vermerk
TR-> TD(1,0/1/1)->PAR 01 TD(1,1/1/1)->PAR true TD(1,2/1/1)->PAR - TD(1,3/1/1)->PAR Die Signatur der Nachricht wurde erfolgreich geprüft. TD(1,4/1/1)->PAR Die Signatur wurde erfolgreich geprüft.
TR-> TD(2,0/1/1)->PAR 02 TD(2,1/1/1)->PAR false TD(2,2/1/1)->PAR 4115 TD(2,3/1/1)->PAR Die Integrität der Nachricht wurde verletzt. TD(2,4/1/1)->PAR -
TR-> TD(3,0/1/1)->PAR 03 TD(3,1/1/1)->PAR false TD(3,2/1/1)->PAR 4253 TD(3,3/1/1)->PAR Die digitale Signatur ist nicht vorhanden. TD(3,4/1/1)->PAR - 
TR-> TD(4,0/1/1)->PAR 04 TD(4,1/1/1)->PAR false TD(4,2/1/1)->PAR 4112 TD(4,3/1/1)->PAR Die digitale Signatur konnte aufgrund des falschen Formats nicht geprüft werden. TD(4,4/1/1)->PAR - 
TR-> TD(5,0/1/1)->PAR 05 TD(5,1/1/1)->PAR false  TD(5,2/1/1)->PAR 4206 TD(5,3/1/1)->PAR Der Zertifizierungspfad des Signaturzertifikats kann nicht validiert werden. TD(5,4/1/1)->PAR - 
TR-> TD(6,0/1/1)->PAR 06 TD(6,1/1/1)->PAR false  TD(6,2/1/1)->PAR [Fehlercode] TD(6,3/1/1)->PAR Die digitale Signatur konnte aufgrund eines nicht zuordenbaren Fehlercodes des Konnektors nicht geprüft werden. TD(6,4/1/1)->PAR -
TR-> TD(7,0/1/1)->PAR 07 TD(7,1/1/1)->PAR true TD(7,2/1/1)->PAR 4264 TD(7,3/1/1)->PAR Die digitale Signatur ist mathematisch korrekt, der Zertifikatsstatus des Signaturzertifikats konnte aber nicht geprüft werden. TD(7,4/1/1)->PAR Die Signatur wurde erfolgreich geprüft. 
TR-> TD(8,0/1/1)->PAR 08 TD(8,1/1/1)->PAR false  TD(8,2/1/1)->PAR - TD(8,3/1/1)->PAR Die digitale Signatur ist mathematisch korrekt und der Zertifikatsstatus des Signaturzertifikats konnte erfolgreich geprüft werden, aber beim Vergleich der Header-Elemente from, sender, reply-to, to und cc der äußeren Nachricht mit denen der inneren Nachricht wurden Abweichungen festgestellt. TD(8,4/1/1)->PAR - 
TR-> TD(9,0/1/1)->PAR 09 TD(9,1/1/1)->PAR false  TD(9,2/1/1)->PAR - TD(9,3/1/1)->PAR Die digitale Signatur ist mathematisch korrekt und der Zertifikatsstatus des Signaturzertifikats konnte erfolgreich geprüft werden, aber das recipient-emails-Attribut aus signerInfos enthält nicht die gleichen Werte wie das recipient-emails-Attribut aus dem enveloped-data CMS-Objekt. TD(9,4/1/1)->PAR - 
PAR Es folgt ein Beispiel einer entschlüsselten multipart/mixed Nachricht deren Signatur erfolgreich geprüft wurde. Die Nachricht enthält eine text/plain Einheit im Nachrichtentext und einen Arztbrief als PDF-Anhang.
PAR Date: Fri, 9 Feb 2012 12:07:17 +0100
PAR MIME-Version: 1.0
PAR From: mustermann@komle.de
PAR To: musterfrau@komle.de
PAR Subject: Arztbrief
PAR Content-Type: multipart/mixed;
PAR X-KIM-Dienstkennung: Arztbrief;VHitG-Versand;V1.2<br>X-KIM-CMVersion: [VendorID]_2.1.2-8<br>X-KIM-PTVersion: 1.5.0-2<br>X-KIM-KONVersion: <secunet konnektor 2.0.0><Konnektor PTV4Plus><4.80.3><2.0.0><4.10.1><br>X-KIM-Sendersystem: Beispiel-PVS;V2.81
PAR boundary="unique-boundary-1"
PAR This is a multi-part message in MIME format.
PAR --unique-boundary-1
PAR Content-Type: text/plain;    charset="iso-8859-1"
PAR Content-Transfer-Encoding: 8bit
PAR Sehr Geehrte Frau Dr. Musterfrau,
PAR hiermit sende ich Ihnen den Arztbrief f=FCr Herrn H. Muster.
PAR Mit Freundlichen Gr=FC=DFen
PAR Dr. med. Mustermann
PAR Arzt f=FCr Allgemeinmedizin
PAR ---------------------------------------------
PAR Die Nachricht wurde entschl=FCsselt
PAR Die Signatur wurde erfolgreich gepr=FCft.
PAR --unique-boundary-1
PAR Content-Type: application/pdf;
PAR name="Arztbrief_Muster.pdf"
PAR Content-Transfer-Encoding: base64
PAR Content-Disposition: attachment;
PAR Content-Description: eAB-PDF-signed
PAR filename="Arztbrief_Muster.pdf"
PAR JVBERi0xLjQNCiXDpMO8w7bDnw0KMiAwIG9iag0KPDwgL0xlbmd0aCAzIDAgUg0KICAgL0Zp
PAR bHRlciAvRmxhdGVEZWNvZGUNCj4+DQpzdHJlYW0NCnicrVhda1sxDH0P5D/4uQ+3lvxxfaEM
PAR ...
PAR OEJCQUExQzY0NDU+IF0NCj4+DQpzdGFydHhyZWYNCjIyNDU3Mg0KJSVFT0YNCg==
PAR --unique-boundary-1--
REQ(ids=KOM-LE-A_2048-01)<b>KOM-LE-A_2048-01 - Prüfung der Signatur und Integrität einer KOM-LE-Nachricht</b>
PAR Das Clientmodul MUSS die Integrität der KOM-LE-Nachricht prüfen. Dabei müssen die digitale Signatur selbst, der Zertifizierungspfad für das verwendete Signaturzertifikat, die Integrität des Headers der äußeren Nachricht und die Integrität des recipient-emails Attributs geprüft werden.<br>Bei der Prüfung der Integrität des Headers der äußeren Nachricht sind die Header-Elemente from, sender, reply-to, to und cc mit denen der signierten inneren Nachricht zu vergleichen.<br>Bei der Prüfung der Integrität des recipient-emails Attributs sind die Werte dieses Attributs aus signerInfos und aus dem enveloped-data CMS-Objekt miteinander zu vergleichen.<br><b>[<=]</b>

PAR Hinweis: Für lange Header-Elemente (z. B. bei reply-to) muss "folding" gemäß [RFC822] unterstützt werden.
REQ(ids=KOM-LE-A_2050-05)<b>KOM-LE-A_2050-05 - Verhalten bei positiver Integritätsprüfung</b>
PAR Das Clientmodul MUSS nach einer Integritätsprüfung einer KOM-LE-Nachricht mit positivem Prüfergebnis (true) den in Tabelle "Tab_Verm_Sig_Prüf" definierten Vermerk an den Nachrichtentext der KOM-LE-Nachricht anfügen. Es ist dabei das Format des TextParts zu beachten (mediatype text/html oder text/plain) und der Vermerk diesem Format anzupassen. Zusätzlich MUSS das Clientmodul ein Mail-Header-Attribut X-KIM-IntegrityCheckResult mit der dazugehörigen ID aus der Tabelle "Tab_Verm_Sig_Prüf" befüllen.<br><b>[<=]</b>

REQ(ids=A_23165)<b>A_23165 - Verhalten bei fehlgeschlagener Integritätsprüfung</b>
PAR Das Clientmodul MUSS nach einer fehlgeschlagenen Integritätsprüfung den Mail-Body der entschlüsselten originalen Nachricht mit dem folgenden Inhalt als text/plain MIME-Einheit ersetzen und an den Empfänger weiterleiten:<br>"Beim Empfang dieser KIM-Nachricht wurde eine Sicherheitsverletzung erkannt. Dies kann eine technisches Ursache haben oder auf eine missbräuchliche Nutzung des KIM-Dienstes hinweisen. Zu Ihrem Schutz wurde der Inhalt dieser Nachricht durch diesen Text ausgetauscht. Bitte kontaktieren Sie den Absender und/oder Ihren Administrator."<br><br>Alternativ MUSS es möglich sein, über eine Konfiguration im Clientmodul, die entschlüsselte (originale) Nachricht trotz fehlgeschlagener Integritätsprüfung und Beachtung nachfolgender Anforderungen dem Empfänger weiterzuleiten.<br><br>Zusätzlich MUSS das Clientmodul das Mail-Header-Attribut X-KIM-IntegrityCheckResult mit der dazugehörigen ID aus der Tabelle "Tab_Verm_Sig_Prüf" befüllen. Kommt es bei der Integritätsprüfung zu Fehlern, die nicht in der Tabelle "Tab_Verm_Sig_Prüf" definierte sind, MUSS das Clientmodul für diese Fehler das Mail-Header-Attribut X-KIM-IntegrityCheckResult mit einem herstellerspezifischen Fehlercode befüllen, welcher mit "X" beginnt.<br><b>[<=]</b>

PAR Hinweis:

LIST->
LITEM->PAR Es muss sichergestellt werden, dass das Verhalten bei fehlgeschlagener Integritätsprüfung konfigurierbar ist. Dies gewährleistet, dass z. B. keine durch die Krankenkasse beim Leistungserbringer bestätigte eAU (signalisiert durch eine DSN) verworfen wird.LITEM->PAR Sollten mehrere negative Ergebnisse aus der Integritätsprüfung hervorgehen KANN das Mail-Header-Attribut X-KIM-IntegrityCheckResult mehrmals verwendet werden.<br><br>Beispiel:<br> X-KIM-IntegrityCheckResult: 08<br>X-KIM-IntegrityCheckResult: X99
PAR -HEADING(ids=3.4.5)3.4.5 Beispiele
PAR Das Clientsystem (C) verbindet sich mit dem Clientmodul (M) und holt vom POP3-Server (S) eine Nachricht (im Beispiel werden auch die Zustände des Clientmoduls dargestellt):
PAR C:    <das Clientsystem öffnet eine mit TLS geschützte Verbindung mit dem Clientmodul>
PAR M:    <CONNECT Zustand>
PAR M->C: +OK KOM-LE Clientmodul POP3
PAR C->M: CAPA
PAR M->C: +OK Capability list follows
PAR M->C: TOP
PAR M->C: USER
PAR M->C: SASL PLAIN
PAR M->C: UIDL
PAR M->C: .
PAR C->M: USER [mustermann@komle.de#pop.komle.de:110]mustermann@komle.de#pop.komle.de:110#1#KOM-LE#7
PAR M->C: +OK
PAR C->M: PASS password
PAR M:    <das Clientmodul öffnet eine mit TLS geschützte Verbindung mit dem POP3 Server>
PAR S->M: +OK POP Server Ready
PAR M->S: CAPA
PAR S->M: +OK Capability list follows
PAR S->M: TOP
PAR S->M: USER
PAR S->M: SASL PLAIN CRAM-MD5
PAR S->M: UIDL
PAR S->M: RESP-CODES
PAR S->M: .
PAR M->S: USER [mustermann@komle.de]mustermann@komle.de
PAR S->M: +OK
PAR M->S: PASS password
PAR S->M: +OK Maildrop ready
PAR M:    <PROXY Zustand>
PAR M->C: +OK Maildrop ready
PAR C->M: STAT
PAR M->S: STAT
PAR S->M: +OK 1 13950
PAR M->C: +OK 1 13950
PAR C->M: LIST
PAR M->S: LIST
PAR S->M: +OK
PAR M->C: +OK
PAR S->M: 1 13950
PAR M->C: 1 13950
PAR S->M: .
PAR M->C: .
PAR C->M: UIDL
PAR M->S: UIDL
PAR S->M: +OK
PAR M->C: +OK
PAR S->M: 1 01SDF8-1RiSd50vfv-00FGJN
PAR M->C: 1 01SDF8-1RiSd50vfv-00FGJN
PAR S->M: .
PAR M->C: .
PAR C->M: RETR 1
PAR M->S: RETR 1
PAR S->M: +OK
PAR M->C: +OK
PAR M:    <PROCESS Zustand>
PAR S->M: <Inhalt der verschlüsselten KOM-LE Nachricht>
PAR S->M: .
PAR M:    <die Nachricht wird im Clientmodul aufbereitet>
PAR M->C: <Inhalt der KOM-LE Nachricht>
PAR M->C: .
PAR M:    <PROXY Zustand>
PAR C->M: QUIT
PAR M->S: QUIT
PAR S->M: +OK
PAR S:    <der POP3 Server schließt die Verbindung mit dem Clientmodul>
PAR M->S: +OK
PAR M:    <das Clientmodul schließt die Verbindung mit dem Clientsystem>
PAR Während des Löschens einer Nachricht wird die Verbindung zwischen dem Clientmodul und dem POP3-Server abgebrochen:
PAR ...
PAR C->M: UIDL
PAR M->S: UIDL
PAR S->M: +OK
PAR M->C: +OK
PAR S->M: 1 01SDF8-1RiSd50vfv-00FGJN
PAR M->C: 1 01SDF8-1RiSd50vfv-00FGJN
PAR S->M: .
PAR M->C: .
PAR C->M: DELE 1
PAR C:    <die Verbindung zwischen dem Clientmodul und dem Clientsystem wird abgebrochen>
PAR M->S: DELE 1
PAR M:    <die Verbindung zwischen dem Clientmodul und dem POP3 Server wird geschlossen>
PAR -HEADING(ids=3.5)3.5 Übermittlung von Kontaktdaten
PAR Ein KOM-LE-Nutzer soll die Möglichkeit haben in seinem Clientsystem die Suche nach den E-Mail-Adressen der Empfänger seiner KOM-LE-Nachrichten durchzuführen. Die TI-Plattform stellt einen Verzeichnisdienst zur Verfügung, der unter anderem Einträge mit Kontaktdaten von KOM-LE-Nutzern enthält. Der Verzeichnisdienst kann über LDAP abgefragt werden und kann somit als Adressbuch für KOM-LE benutzt werden. Eine detaillierte Beschreibung des Verzeichnisdienstes der TI-Plattform befindet sich in [gemSpec_VZD]. Um LDAP-Anfragen gegenüber dem Verzeichnisdienst durchzuführen, fungiert der Konnektor als LDAP-Proxy wie in [gemSpec_Kon] beschrieben.
PAR Der Verzeichnisdienst kann direkt von Clientsystemen, die die entsprechenden LDAP-Suchanfragen generieren, angefragt werden. Das LDAP-Schema des Verzeichnisdienstes wird in [gemSpec_VZD] beschrieben.
PAR -HEADING(ids=3.6)3.6 Übermittlung von E-Mail-Kategorien
PAR Das Clientmodul soll die Kategorisierung von versendeten E-Mails ermöglichen. Zusätzlich zu den für den Versand einer gültigen E-Mail notwendigen Header-Feldern wird ein weiteres Attribut im Header eingefügt und mit der Information befüllt, welche der verwendete E-Mail-Client liefert.
REQ(ids=A_19488-02)<b>A_19488-02 - E-Mail-Kategorisierung</b>
PAR Das KOM-LE-Clientmodul MUSS die ihm im Mail-Header gemäß der Tabelle "Tab_Header_Kat Header-Feld Kategorie" bereitgestellte Information zur Kategorisierung einer zu übertragenden E-Mail weiterleiten. Die Benennung dieses zusätzlichen E-Mail-Header-Feldes erfolgt wie in Tabelle "Tab_Header_Kat festgelegt". Wenn vom Mail-Client keine Informationen übergeben werden können, wird durch das KOM-LE-Clientmodul der Default-Wert aus der X-KIM-Dienstkennung gesetzt. <b>[<=]</b>

PAR (ids=Tabelle-8)Tabelle 8: Tab_Header_Kat Header-Feld Kategorie

TABLE(rows=2,cols=126+110+94+278)->
TR-> TH(0,0/1/1)->PAR Header-Feld TH(0,1/1/1)->PAR Name TH(0,2/1/1)->PAR Verpflichtend TH(0,3/1/1)->PAR Beschreibung
TR-> TD(1,0/1/1)->PAR X-KIM-Dienstkennung TD(1,1/1/1)->PAR E-Mail-Kategorie TD(1,2/1/1)->PAR optional TD(1,3/1/1)->PAR Zusätzliches E-Mail-Header-Feld, enthält die auf die E-Mail bezogene Dienstkennung mit Bezug auf deren Inhalt.<br>Wenn vom Mail-Client keine Informationen übergeben werden können, wird durch das KOM-LE-Clientmodul der Default-Wert aus der X-KIM-Dienstkennung gesetzt.
PAR Die zu verwendenden Dienstkennungen werden durch die gematik festgelegt und sind über das Fachportal der gematik im Bereich "Toolkit" abrufbar. Die dort durch die gematik auf der Seite "Dienstkennung" administrierte Übersicht liefert bei Bedarf die Default-Dienstkennung. Diese wird durch das Clientmodul vor der weiteren Verarbeitung in das Headerfeld X-KIM-Dienstkennung der ursprünglichen E-Mail eingetragen, wenn keine Dienstkennung durch den Mail-Client des Senders eingetragen wurde.
PAR Das Header-Feld X-KIM-Dienstkennung wird im unverschlüsselten Header der E-Mail enthalten sein, um eine eventuelle Verarbeitung der E-Mail auf Seiten des Empfängers zu ermöglichen. Eine entsprechende Festlegung erfolgt in der [gemSMIME_KOMLE] im Kapitel 2.1.1.1.
PAR -HEADING(ids=3.7)3.7 Administrationsmodul
PAR Das Administrationsmodul ist Bestandteil des KOM-LE-Clientmoduls. Das Modul ermöglicht die Verwaltung des Accounts des KOM-LE-Teilnehmers. Dazu kommuniziert das Administrationsmodul über eine TLS-Verbindung mit dem Account Manager des KOM-LE-Fachdienstes. Zum Funktionsumfang des Modules gehören:

LIST->
LITEM->PAR Registrierung des neuen KOM-LE-Teilnehmers,LITEM->PAR Deregistrierung des KOM-LE-Teilnehmers,LITEM->PAR Beantragen und Herunterladen der PKCS#12-Datei,LITEM->PAR Lokalisierung des Account Managers über DNS Service Discovery,LITEM->PAR Meldung der KIM-Version an den Account Manager,LITEM->PAR Verwaltung von Abwesenheitsnotizen.
PAR Im ersten Schritt konfiguriert der KOM-LE-Teilnehmer einmalig die Domain des KOM-LE-Fachdienstes im Administrationsmodul. Dadurch ist das Administrationsmodul in der Lage, den Account Manager über DNS Service Discovery zu lokalisieren. Danach können sich neue KOM-LE-Teilnehmer über das Administrationsmodul bei ihrem KOM-LE-Fachdienst registrieren und die benötigte PKCS#12 Dateien für das Clientmodul herunterladen.
PAR Die konzeptionelle Betrachtung für das Administrationsmodul sieht wie folgt aus:

ORDERED-LIST->
LITEM->PAR Der Leistungserbringer schließt einen Vertrag mit einem KOM-LE-Anbieter
ORDERED-LIST->
LITEM->PAR Der KOM-LE-Anbieter übermittelt die folgenden Zugangsdaten an den Leistungserbringer (das Verfahren wird vom KOM-LE-Anbieter festgelegt):
ORDERED-LIST->
LITEM->PAR eine referenceID für die Zuordnung beim Anbieter sowieLITEM->PAR das initiale PasswortLITEM->PAR Falls für das KIM Clientmodul/Administrationsmodul die Client Authentifizierungsmethode gegenüber dem Konnektor noch nicht konfiguriert wurde, muss diese Konfiguration jetzt erfolge. Für die Authentifizierungsmethode TLS-Client-Authentifizierung des Clientsystems am verwendeten Konnektor kann dies folgendermassen erfolgen, falls noch kein TLS Client Zertifikat im KIM Clientmodul vorliegt:
ORDERED-LIST->
LITEM->PAR Über das Managementinterface des Konnektors wird das X.509-Zertifikat für das KIM Clientmodul und der  zugehörigen privaten Schlüssel erzeugt und exportiert.LITEM->PAR Über das KIM Administrationsmodul werden X.509-Zertifikat und der zugehörigen privaten Schlüssel importiert.LITEM->PAR Mit dem importierten X.509-Zertifikat kann das KIM Administrationsmodul die Verbindungen zum Konnektor aufbauen, welche zur Signatur der JSON Web Token nötig sind.LITEM->PAR Der Leistungserbringer verwendet das Administrationsmodul, um sich am Account Manager seines Fachdienstes zu registrieren
ORDERED-LIST->
LITEM->PAR Es wird eine serverseitig authentisierte TLS-Verbindung zwischen dem Administrationsmodul und dem Account Manager des Fachdienstes aufgebaut.LITEM->PAR Im Zuge des Registrierungsprozesses wird die Operation register() am Account Manager aufgerufen und folgende Parameter an den Account Manager übermittelt:
ORDERED-LIST->
LITEM->PAR die referenceID,LITEM->PAR das initiale Passwort,LITEM->PAR eine E-Mail-Adresse,LITEM->PAR das neue Passwort,LITEM->PAR die KIM-Version.LITEM->PAR Der Request wird mit dem Auth-Zertifikat der verwendeten Karte (HBA oder SMC-B) signiertLITEM->PAR Der KOM-LE-Anbieter trägt die angegebene E-Mail-Adresse sowie die KIM-Version in den Verzeichnisdienst einLITEM->PAR Optional: Automatisiertes Beantragen des kryptografischen Materials (PKCS#12-Datei)
ORDERED-LIST->
LITEM->PAR Das Administrationsmodul generiert ein Passwort gemäß [gemSpec_Krypt] zum Sichern der PKCS#12-Datei.LITEM->PAR Anschließend ruft das Administrationsmodul die Operation createCert() auf, um das kryptografische Material (PKCS#12) anzufordern.LITEM->PAR Das Administrationsmodul übergibt die PKCS#12-Datei an das Clientmodul.LITEM->PAR Dieses Zertifikat wird anschließend vom Clientmodul für alle E-Mail-Adressen und KIM-Fachdienste verwendet. Weiterhin wird dieses Zertifikat für die TLS-Client Authentisierung gegenüber dem Konnektor genutzt.
PAR -HEADING(ids=3.7.1)3.7.1 Allgemeine Anforderungen
REQ(ids=A_19453)<b>A_19453 - Aktualisierung PKCS#12-Datei Administrationsmodul</b>
PAR Das Administrationsmodul MUSS die PKCS#12-Datei dem Clientmodul für die Weiterverarbeitung übergeben.<br> <b>[<=]</b>

REQ(ids=A_19454)<b>A_19454 - Dialoggestaltung Administrationsmodul</b>
PAR Das Administrationsmodul SOLL die Dialoggestaltung gemäß [EN ISO 9241#Teil110] sicherstellen.<br> <b>[<=]</b>

REQ(ids=A_19455)<b>A_19455 - Formulardialoge Administrationsmodul</b>
PAR Das Administrationsmodul SOLL bei Verwendung von Formulardialogen die Anforderungen und Empfehlungen gemäß [DIN EN ISO 9241-143:2012-06] beachten.<br> <b>[<=]</b>

REQ(ids=A_19456-02)<b>A_19456-02 - Domain Fachdienst Administrationsmodul</b>
PAR Das Administrationsmodul MUSS die Auswahl der genutzten Fachdienste ermöglichen. <br><b>[<=]</b>

PAR Die Domain des Anbieters kann z.B. die folgende Ausprägung haben:
PAR hrst.kim.telematik
REQ(ids=A_19523)<b>A_19523 - Service-Discovery Administrationsmodul</b>
PAR Das Administrationsmodul MUSS die zur Kommunikation mit dem Account Manager des Fachdienstes notwendigen Informationen durch DNS Service Discovery nach den in [gemSpec_FD_KOMLE#Tab_KOMLE_Service Discovery] und [gemSpec_FD_KOMLE#Tab_KOMLE_FQDN] ermitteln.<br><b>[<=]</b>

REQ(ids=A_19457-02)<b>A_19457-02 - Client Authentisierung Administrationsmodul</b>
PAR Das Administrationsmodul MUSS bei der initialen Registrierung eine serverseitig gesicherte TLS-Verbindung zum Account Managers des Fachdienstes aufbauen.<br><br>Für die Authentisierung am Account Manager MUSS das Administrationsmodul ein JSON-Web-Token gemäß [RFC7519] mit den Elementen aus der folgenden Tabelle erzeugen und zusammen mit dem Passwort des Nutzers an den Account Manager übergeben.<br><br> <b>[<=]</b>

PAR Der Parameter "alg": "PS256" ist informativ. Anstatt einer üblichen Signatur bildet er den Hash gemäß [gemSpec_Krypt#A_19644]. Dieser wird mittels der externalAuthenticate-Funktion des Konnektors mit dem AUT-Zertifikat des HBA bzw. der SMC-B signiert. Als Signature Type muss RSASSA-PSS verwendet werden. Diese Signatur wird anstatt des Signaturteils des Tokens angehängt.
PAR Der Account Manager ist Bestandteil des Fachdiensts und deshalb gelten für die TLS-Verbindungen (inklusive genutzter Zertifikate) zum Account Manager ebenfalls die Festlegungen von Kap. 4.1.4.
REQ(ids=A_20773)<b>A_20773 - I_AccountManager_Service Zeichensatz Clientmodul</b>
PAR Das Administrationsmodul  MUSS für die Inhalte aller Operationen (Request und Response) der Schnittstelle  I_AccountManager_Service den UTF-8-Zeichensatz unterstützen. <b>[<=]</b>

PAR Abweichung außerhalb der Leistungserbringerumgebung
PAR Für Umgebungen außerhalb der Leistungserbringerumgebung (z. B. im Rechenzentrum) können von den Anforderungen zur Dialogsteuerung abgewichen werden.
REQ(ids=A_20188)<b>A_20188 - Formulardialoge Administrationsmodul - außerhalb der Leistungserbringerumgebung</b>
PAR Das Administrationsmodul KANN bei Verwendung außerhalb der Leistungserbringerumgebung von der Dialogsteuerung abweichen.<br><b>[<=]</b>

REQ(ids=A_21396)<b>A_21396 - Darstellung von Ereignissen</b>
PAR Das Administrationsmodul MUSS bei Aufruf der Operationen am Account Manager die Ergebnisse der Operationen sowie Fehlernachrichten darstellen.<br> <b>[<=]</b>

REQ(ids=A_21380)<b>A_21380 - Verwaltung von Abwesenheitsnotizen</b>
PAR Das Clientmodul MUSS es dem Nutzer ermöglichen, Abwesenheitsnotizen über die Schnittstelle I_AccountManager_Service am Account Manager verwalten zu können.<br> <b>[<=]</b>

REQ(ids=A_23505)<b>A_23505 - Bereitschaft zum Empfang großer Nachrichten</b>
PAR Das Clientmodul MUSS es dem Nutzer ermöglichen, die optionale Bereitschaft zum Empfang großer Nachrichten über die Schnittstelle I_AccountManager_Service am Account Manager verwalten zu können. Die Bereitschaft zum Empfang großer Nachrichten MUSS über die KOM-LE-Version, ergänzt durch ein +, eingetragen werden. Erkennt das Clientmodul die beabsichtigte Bereitschaft zum Empfang großer Nachrichten, MUSS es den Nutzer hinsichtlich der sich daraus ergebenden Risiken beim Senden und Empfangen von großen Dateien informieren. Dass Clientmodul MUSS es dem Nutzer ermöglichen, die erteilte Bereitschaft zurückzusetzen. <b>[<=]</b>

PAR Hinweis: Wird durch das Clientmodul die KOM-LE-Version auch für die Sender in einem lokalen Cache hinterlegt, ist eine Aktualisierung jeweils nach einer Änderung erforderlich.
PAR -HEADING(ids=3.7.2)3.7.2 Registrierung KOM-LE-Teilnehmer
REQ(ids=A_19458-01)<b>A_19458-01 - Initiale Anmeldung KOM-LE-Teilnehmer Administrationsmodul</b>
PAR Das Administrationsmodul MUSS sich bei der initialen Anmeldung mit der referenceID und dem initialen Passwort am Account Manager authentifizieren.<br><b>[<=]</b>

REQ(ids=A_19459)<b>A_19459 - Registrierung Aufruf KOM-LE-Teilnehmer Administrationsmodul</b>
PAR Das Administrationsmodul MUSS die Registrierung des neuen KOM-LE-Teilnehmers am Account Manager ermöglichen. <b>[<=]</b>

REQ(ids=A_19460)<b>A_19460 - Registrierungsdialog KOM-LE-Teilnehmer Administrationsmodul</b>
PAR Das Administrationsmodul MUSS die Registrierung des neuen KOM-LE-Teilnehmers im Dialog durchführen.<br><b>[<=]</b>

REQ(ids=A_19462)<b>A_19462 - Registrierungsfehler KOM-LE-Teilnehmer Administrationsmodul</b>
PAR Das Administrationsmodul MUSS Fehler bei der Registrierung verständlich anzeigen und dem Anwender Handlungsoptionen anbieten.<br><b>[<=]</b>

PAR -HEADING(ids=3.7.3)3.7.3 Deregistrierung KOM-LE-Teilnehmer
REQ(ids=A_19463)<b>A_19463 - Deregistrierung Aufruf KOM-LE-Teilnehmer Administrationsmodul</b>
PAR Das Administrationsmodul MUSS die Deregistrierung des KOM-LE-Teilnehmers am Account Manager ermöglichen.<br><b>[<=]</b>

REQ(ids=A_19464-03)<b>A_19464-03 - Deregistrierungsdialog KOM-LE-Teilnehmer Administrationsmodul</b>
PAR Das Administrationsmodul MUSS die Deregistrierung  des KOM-LE-Teilnehmers im Dialog durchführen. Im Verlauf der Deregistrierung MUSS der KOM-LE-Teilnehmer in geeigneter Form informiert werden, dass nach der Deregistrierung diese zunächst nur temporär für 30 Tage umgesetzt wird. Nach Ablauf dieses Zeitraumes ist kein weiterer Zugriff auf den E-Mail-Account möglich und der gelöschte Account kann nicht wiederhergestellt werden. Innerhalb der 30 Tage ist der Zugriff auf das E-Mail-Konto zum Abholen von Nachrichten weiterhin möglich. Das Administrationsmodul MUSS die Rücknahme der Deregistrierung innerhalb der 30 Tage ermöglichen, um die E-Mail-Adresse wieder nutzen zu können. Hierfür MUSS das Administrationsmodul die Operation revokeDeregistration am Account Manager aufrufen.<br> <b>[<=]</b>

PAR -HEADING(ids=3.7.4)3.7.4 Download PKCS#12 KOM-LE-Teilnehmer
REQ(ids=A_19468-02)<b>A_19468-02 - Beantragen und Herunterladen der PKCS#12 Datei</b>
PAR Das Administrationsmodul MUSS die PKCS#12-Datei über die Operation createCert() am Account Manager beantragen und vom Account Manager herunterladen. Nach dem Herunterladen der PKCS#12-Datei MUSS das Administrationsmodul diese mit dem vom Administrationsmodul erzeugten symmetrischen Schlüssel entschlüsseln.<br><b>[<=]</b>

REQ(ids=A_21381)<b>A_21381 - Automatischer Abruf der PKCS#12-Datei</b>
PAR Das Administrationsmodul MUSS einen Monat vor Ablauf des TLS-Zertifikates automatisch ein neues Zertifikat über die Operation createCert() beantragen und herunterladen. Die zeitliche Gültigkeit des Zertifikats muss vom Clientmodul beim TLS-Verbindungsaufbau geprüft werden.<br><br>Wenn während der Aktualisierung ein Fehler auftritt, dann MUSS das KOM-LE-Clientmodul den Absender mit einer E-Mail über den Fehlerfall informieren. Aus dem Inhalt der Fehlernachricht MUSS hervorgehen, dass bei der Aktualisierung der PKCS#12-Datei ein Fehler aufgetreten ist. Die Fehlernachricht ist weder zu signieren noch zu verschlüsseln und entspricht der Delivery Status Notification gemäß [RFC3461-3464]. Zusätzlich muss der vom Account Manager gemeldeter Fehlertext wie folgt eingefügt werden: Fehlertext: <message>.<br><b>[<=]</b>

REQ(ids=A_21382)<b>A_21382 - Generierung eines symmetrischen Schlüssels für die PKCS#12-Datei</b>
PAR Das Administrationsmodul MUSS bei Aufruf der Operation createCert() einen symmetrischen Schlüssel gemäß den Kriterien [gemSpec_Kryp] generieren und als Parameter CertPassword übergeben.<br><b>[<=]</b>

PAR -HEADING(ids=3.8)3.8 Kryptographischen Schnittstellen des Konnektors
PAR Das digitale Signieren und die Verschlüsselung von Nachrichten sowie deren Entschlüsselung und die Prüfung ihrer digitalen Signaturen beinhalten den Zugriff auf die SOAP-Schnittstellen des Konnektors, die die folgenden Operationen zu Verfügung stellen:

LIST->
LITEM->PAR SignDocument - Erzeugung einer digitalen Signatur,LITEM->PAR VerifyDocument – Prüfung einer digitalen Signatur,LITEM->PAR EncryptDocument – Verschlüsselung undLITEM->PAR DecryptDocument - Entschlüsselung.
PAR Die Verschlüsselung und das digitale Signieren erfordern dabei den Zugriff auf eine SM-B und/oder einen HBA mit dem erforderlichen Schlüsselmaterial. Zur Erstellung einer digitalen Signatur ist der Zugriff auf den geheimen Schlüssel PrK.HCI.OSIG einer SM-B erforderlich. Für die Verschlüsselung ist der Zugriff auf den geheimen Schlüssel Prk.HCI.ENC einer SM-B oder Prk.HP.ENC eines HBA notwendig.
PAR Der Zugriff auf den entsprechenden geheimen Schlüssel erfolgt während der Durchführung der SignDocument und DecryptDocument Operationen. Die Eingangsparameter der beiden Operationen beinhalten das Context Element (Aufrufkontext). Der Aufrufkontext umfasst die Angaben zu Mandanten (MandantId), Arbeitsplatz (WorkplaceId), Anwendung (ClientSystemId) und Identifikation des Benutzers (UserId). Die Angaben zur Identifikation des Benutzers (UserId) sind optional und nur für Aufrufe, die einen Zugriff auf den HBA brauchen, erforderlich. Die Elemente des Aufrufkontexts werden dem Clientmodul als Teile des MTA- bzw. POP3-Benutzernamens übertragen (siehe Kapitel 3.2.2.2, 3.3.2.2).
PAR Zur Identifikation der Karte benötigen die Operationen zusätzlich den Parameter cardHandle. Das cardHandle gilt für die Dauer des Steckzyklus einer Karte und wird beim Stecken einer Karte vom Konnektor generiert. Um eine Karte über mehreren Steckzyklen zu identifizieren kann die Seriennummer der Karte (ICCSN) verwendet werden.
PAR Die über den Konnektor verfügbaren SM-Bs und HBAs, ihre Handles und ICCSNs können über die GetCards Operation des Konnektors ermittelt werden.
PAR -HEADING(ids=3.8.1)3.8.1 Erstellung der digitalen Signatur einer Nachricht mit einer SM-B
PAR Das Signieren von ausgehenden Nachrichten erfolgt mit dem Schlüssel PrK.HCI.OSIG der SM-B, die der Institution des Senders entspricht. Ein Konnektor kann von mehreren Institutionen (Mandaten) gleichzeitig benutzt werden und dementsprechend mit mehreren SM-Bs, die den unterschiedlichen Identitäten entsprechen, ausgestattet sein. Die Ermittlung der SM-B, die für die Erstellung der Nachrichtensignatur verwendet werden soll, kann entsprechend dem in der Abbildung "Abb_Zugriff_SMB SM-B-Zugriff zur Erstellung der Nachrichtensignatur" dargestellten Aktivitätsdiagramm erfolgen. Die Aktivitäten und deren Reihenfolge haben illustrativen und nicht normativen Charakter. Die konkrete Umsetzung kann sich unterscheiden, solange das Ergebnis das Gleiche ist.

PAR Abbildung 13: Abb_Zugriff_SMB SM-B-Zugriff zur Erstellung der Nachrichtensignatur
PAR Es folgt die Beschreibung der einzelnen Aktivitäten des Diagramms:

ORDERED-LIST->
LITEM->PAR Die über den Konnektor verfügbaren Karten werden über die Operation GetCards mit dem Parameter Context (dem Sender entsprechender Aufrufkontext aus dem Benutzernamen) ermittelt.LITEM->PAR In den anhand des Aufrufkontexts über GetCards ermittelten Karten wird nach einer verfügbaren SM-B gesucht:

LIST->
LITEM->PAR Falls eine verfügbare SM-B gefunden wurde, wird mit Aktivität 3 fortgesetzt.LITEM->PAR Falls sich unter den verfügbaren Karten keine SM-B befindet, kann die Nachricht nicht signiert werden und das Senden wird abgebrochen.

ORDERED-LIST->
LITEM->PAR Um festzustellen, ob die Eingabe der PIN für die Freischaltung der Karte notwendig ist, wird die GetPinStatus Operation des Konnektors aufgerufen. Dabei werden die Parameter Context (dem Sender entsprechender Aufrufkontext), CardHandle (Handle der ausgewählten SM-B) und PinTyp (PIN.SMC) verwendet.

LIST->
LITEM->PAR Falls die Karte freigeschaltet ist, fährt das Clientmodul mit Aktivität 5 fort.LITEM->PAR Falls eine PIN-Eingabe erforderlich ist, fährt das Clientmodul mit Aktivität 4 fort.

ORDERED-LIST->
LITEM->PAR Für die Eingabe der PIN zur Freischaltung der ausgewählten Karte wird die VerifyPin Operation des Konnektors verwendet. Die Operation wird mit den Parametern Context (dem Sender entsprechender Aufrufkontext), CardHandle (Handle der ausgewählten SM-B), PinTyp (PIN.SMC) aufgerufen. Der Sender wird zur Eingabe der PIN über das Display des Kartenterminals angefordert.LITEM->PAR Die Signatur der KOM-LE-Nachricht erfolgt unter Verwendung der SignDocument Operation des Konnektors. Dabei werden die Parameter Context (dem Sender entsprechender Aufrufkontext), CardHandle (Handle der ausgewählten SM-B), KeyReference (C.OSIG_RSA) verwendet. Die Verwendung weiterer Parameter muss unter Berücksichtigung der Anforderungen aus [gemSMIME_KOMLE] erfolgen.
REQ(ids=KOM-LE-A_2052)<b>KOM-LE-A_2052 - Quellen zur Ermittlung der SM-B des Senders beim Signieren</b>
PAR Das Clientmodul MUSS die Menge der verfügbaren Karten, die über die Operation GetCards des Konnektors anhand des Aufrufkontexts des Senders ermittelt werden, nach einer verfügbaren SM-B durchsuchen.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2057)<b>KOM-LE-A_2057 - Abbrechen des Signierens, wenn keine SM-B verfügbar ist</b>
PAR Das Clientmodul MUSS das Signieren einer Nachricht abbrechen, wenn für die Erstellung der Signatur keine SM-B verfügbar/gesteckt ist.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2058)<b>KOM-LE-A_2058 - Abbrechen des Signierens, wenn Freischaltung der erforderlichen SM-B fehlschlägt</b>
PAR Das Clientmodul MUSS das Signieren einer Nachricht abbrechen, wenn die Freischaltung der für die Erstellung der Signatur erforderlichen SM-B fehlschlägt.
PAR <b>[<=]</b>

PAR -HEADING(ids=3.8.2)3.8.2 Prüfung der digitalen Signatur einer Nachricht
PAR Die Prüfung der digitalen Signatur einer Nachricht erfolgt mittels der VerifyDocument Operation des Konnektors. Dabei werden die Parameter Context (dem Empfänger entsprechender Aufrufkontext) und Document (signierte Daten) verwendet.
PAR -HEADING(ids=3.8.3)3.8.3 Verschlüsselung einer Nachricht
PAR Die Verschlüsselung einer Nachricht erfolgt mittels der EncryptDocument Operation des Konnektors. Dabei werden die Parameter Context (dem Empfänger entsprechender Aufrufkontext), Document (zu verschlüsselnde Daten) und Certificate (alle Zertifikate mit denen die Nachricht verschlüsselt werden soll) verwendet.
PAR -HEADING(ids=3.8.4)3.8.4 Entschlüsselung einer Nachricht mit einer SM-B bzw. einem HBA
PAR Für die Entschlüsselung von empfangenen Nachrichten verwendet das Clientmodul den privaten Schlüssel PrK.HP.ENC eines HBA bzw. den privaten Schlüssel PrK.HCI.ENC einer SM-B. Die Zuordnung von den für die Verschlüsselung verwendeten Zertifikaten und den E-Mail-Adressen der Empfänger wird im recipient-emails Attribut des CMS-Objektes mit den verschlüsselten Daten abgebildet (siehe [gemSMIME_KOMLE]). Die Ermittlung des HBAs bzw. der SM-B, die für die Entschlüsselung der empfangenen Nachricht verwendet wird, kann entsprechend dem in Abbildung 14 dargestellten Aktivitätsdiagramm durchgeführt werden. Die Aktivitäten und deren Reihenfolge haben illustrativen und nicht normativen Charakter. Die konkrete Umsetzung kann sich unterscheiden, solange das Ergebnis das Gleiche ist.

PAR Abbildung 14: Abb_Zugriff_SMB_HBA SM-B/HBA-Zugriff zur Nachrichtentschlüsselung
PAR Es folgt die Beschreibung der einzelnen Aktivitäten des Diagramms:

ORDERED-LIST->
LITEM->PAR Die über den Konnektor verfügbaren Karten werden über die Operation GetCards mit dem Parameter Context (dem Empfänger entsprechender Aufrufkontext) ermittelt.LITEM->PAR Um die Anzahl der Zugriffe auf die Schnittstellen des Konnektors zu reduzieren, verwaltet das Clientmodul einen Cache, der Zuordnungen zwischen E-Mail-Adresse, Zertifikats-ID und ICCSN von HBA/SM-B zwischenspeichert. Dabei sind die gespeicherten Zertifikats-IDs vom ASN.1-Typ IssuerAndSerialNumber (siehe [gemSMIME_KOMLE#2.3.3]). Der Cache wird anhand der E-Mail-Adresse des Empfängers und der zugehörigen Zertifikats-IDs aus dem recipient-emails Attribut des CMS-Objektes durchsucht.

LIST->
LITEM->PAR Falls ein passender Eintrag im Cache gefunden wird und die ICCSN dieses Eintrages mit einer über GetCards ermittelten ICCSN übereinstimmt, fährt das Clientmodul mit Aktivität 5 fort.LITEM->PAR Falls der Cache keine passenden Einträge enthält, fährt das Clientmodul mit Aktivität 3 fort.

ORDERED-LIST->
LITEM->PAR Die IDs der Verschlüsselungszertifikate (Ermittlung über die Operation ReadCardCertificate des Konnektors) der über GetCards ermittelten HBAs und SM-Bs werden mit den Zertifikats-IDs aus dem recipient-emails Attribut des CMS-Objektes, die zur E-Mail-Adresse des Empfängers gehören, verglichen. Bei der Ermittlung der Zertifikate über die Operation ReadCardCertificate ist sowohl das RSA-ENC-Zertifikat als auch ECC-ENC-Zertifikat der  Karten zu berücksichtigen.

LIST->
LITEM->PAR Falls eine Karte mit passender Zertifikats-ID vorhanden ist, fährt das Clientmodul mit Aktivität 4 fort.LITEM->PAR Falls keine passende Karte gefunden wird, wird die Entschlüsselung der Nachricht abgebrochen.

ORDERED-LIST->
LITEM->PAR Die ermittelte (ICCSN – E-Mail-Adresse – Zertifikats-ID) Zuordnung wird im Cache des Clientmoduls gespeichert.LITEM->PAR Um festzustellen ob die Eingabe der PIN zur Freischaltung der ermittelten Karte notwendig ist, wird die Operation GetPinStatus des Konnektors mit den Parametern Context (dem Empfänger entsprechender Aufrufkontext), CardHandle (Handle der SM-B bzw. des HBA), PinTyp (PIN.SMC für SM-B bzw. PIN.CH für HBA) aufgerufen.

LIST->
LITEM->PAR Falls die Karte freigeschaltet ist, fährt das Clientmodul mit Aktivität 7 fort.LITEM->PAR Falls die PIN-Eingabe erforderlich ist, fährt das Clientmodul mit Aktivität 6 fort.

ORDERED-LIST->
LITEM->PAR Die Operation VerifyPin des Konnektors wird mit den Parametern Context (dem Empfänger entsprechender Aufrufkontext), CardHandle (Handle der/des ausgewählten SM-B/HBA), PinTyp (PIN.SMC für SM-B bzw. PIN.CH für HBA) aufgerufen. Der Empfänger wird zur Eingabe der PIN über das Display des Kartenterminals aufgefordert.LITEM->PAR Die Operation DecryptDocument des Konnektors wird mit den Parametern Context (dem Empfänger entsprechender Aufrufkontext), CardHandle (Handle der SM-B bzw. des HBA), KeyReference (C.ENC_RSA oder C.ENC_ECC ), Document (die verschlüsselten Daten) aufgerufen.
REQ(ids=KOM-LE-A_2059)<b>KOM-LE-A_2059 - Verwendung des recipient-emails Attributs beim Entschlüsseln</b>
PAR Das Clientmodul MUSS die Suche nach der zur Entschlüsselung erforderlichen Karte anhand der E-Mail-Adresse des Empfängers und der zugehörigen Zertifikats-IDs aus dem recipient-emails Attribut des CMS-Objektes der KOM-LE-Nachricht durchführen.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2060)<b>KOM-LE-A_2060 - Quellen zur Ermittlung der erforderlichen Karte beim Entschlüsseln</b>
PAR Das Clientmodul MUSS für die Ermittlung der zur Entschlüsselung einer Nachricht erforderlichen Karte primär seinen Cache durchsuchen. Wird die erforderliche Karte nicht über den Cache gefunden, MUSS das Clientmodul die Menge der verfügbaren Karten (wird über die Operation GetCards des Konnektors ermittelt) nach der Karte mit dem passenden Verschlüsselungszertifikat (unter Verwendung der Operation ReadCardCertificate des Konnektors) durchsuchen.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2061)<b>KOM-LE-A_2061 - Speichern von Zuordnungen im Cache beim Entschlüsseln</b>
PAR Wird beim Entschlüsseln die erforderliche Karte (SM-B bzw. HBA) unter Verwendung der Operation ReadCardCertificate des Konnektors ermittelt, MUSS das Clientmodul die zu dieser Karte korrespondierende Zuordnung von E-Mail-Adresse des Empfängers, Zertifikats-ID und ICCSN im Cache speichern.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2062)<b>KOM-LE-A_2062 - Abbrechen des Entschlüsseln, wenn die erforderliche Karte nicht verfügbar ist</b>
PAR Das Clientmodul MUSS die Entschlüsselung einer Nachricht abbrechen, wenn die für die Entschlüsselung erforderliche Karte (SM-B bzw. HBA) nicht verfügbar ist.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2063)<b>KOM-LE-A_2063 - Abbrechen des Entschlüsseln, wenn Freischaltung der erforderlichen Karte fehlschlägt</b>
PAR Das Clientmodul MUSS die Entschlüsselung einer Nachricht abbrechen, wenn die Freischaltung der für die Entschlüsselung erforderlichen Karte fehlschlägt.
PAR <b>[<=]</b>

PAR -HEADING(ids=4)4 Nichtfunktionale Anforderungen
PAR In diesem Kapitel werden nichtfunktionale Anforderungen an das KOM-LE-Clientmodul definiert.
PAR -HEADING(ids=4.1)4.1 Transportsicherung
PAR Beim Senden bzw. Empfangen von Nachrichten baut das Clientmodul mit folgenden Systemen Verbindungen auf:

LIST->
LITEM->PAR Clientsysteme (muss stets über TLS erfolgen),LITEM->PAR KOM-LE-Fachdienste (muss stets über TLS erfolgen) undLITEM->PAR Konnektor (muss stets über TLS erfolgen).
PAR In diesem Kapitel werden die Anforderungen an den Aufbau der TLS-Verbindungen mit diesen Systemen definiert.
PAR -HEADING(ids=4.1.1)4.1.1 Allgemeine Festlegungen
PAR Die Vorgaben zu X.509-Identitäten für die TLS/SSL-Authentifizierung, unterstützten TLS-Versionen und TLS Cipher Suites werden aus [gemSpec_Krypt] übernommen.
REQ(ids=KOM-LE-A_2064-02)<b>KOM-LE-A_2064-02 - Verwendung von X.509-Identitäten bei der TLS-Authentifizierung</b>
PAR Das Clientmodul KOM-LE MUSS bei der Verwendung von X.509-Identitäten für die TLS-Authentifizierung sowie dem Aufbau von TLS-Verbindungen die Vorgaben aus [gemSpec_Krypt] beachten. Hierbei sind zusätzlich auch Cipher-Suites und Kurven aus [BSI-TR-02102-2]  Kapitel 3.3 akzeptabel um Kompatibilität mit gängigen Clientsystemen und PVSen bzw. Mailclients, sowie gängigen Plattformen für Fachdienste sicherzustellen.<br><b>[<=]</b>

PAR Der Aufbau von TLS-Verbindungen mit Clientsystemen oder die zertifikatsbasierte clientseitige Authentisierung beim Aufbau von TLS-Verbindungen mit dem Konnektor oder den Fachdiensten erfordert das Vorhandensein des entsprechenden Schlüsselmaterials.
PAR Üblicherweise liegt ein Zertifikat zusammen mit dem zugehörigen geheimen Schlüssel in einem standardisierten und passwortgeschützten Format (p12) [PKCS#12] vor. Das Clientmodul kann ein Zertifikat und den zugehörigen geheimen Schlüssel auf mindestens zwei Arten nutzen:

ORDERED-LIST->
LITEM->PAR Das Clientmodul importiert das Zertifikat und den Schlüssel aus der p12-Datei und verwaltet diese anschließend in einem eigenen Schlüsselspeicher. Dazu muss während des Importvorgangs das Passwort der p12-Datei eingegeben werden (Transportsicherung). Danach hat das Clientmodul Zugriff auf den für den TLS-Verbindungsaufbau benötigten privaten Schlüssel.LITEM->PAR Das Clientmodul nutzt einen Systemschlüsselspeicher, z.B. den Zertifikatsspeicher von Windows oder den des Java JRE. Auch hier ist für den Importvorgang das Passwort des der p12-Datei einzugeben. Anschließend stehen das Zertifikat und der Schlüssel über entsprechende Systemfunktionen/Bibliotheken zur Verfügung. Idealerweise kann der Administrator des Clientmoduls im gewählten Zertifikatsspeicher browsen und das gewünschte Zertifikat für die Verwendung auswählen. Alternativ kann in der Clientmodul-Konfiguration eine eindeutige Referenz auf das Zertifikat (Name oder Index) eingegeben werden.
REQ(ids=A_17239)<b>A_17239 - ECC-Migration, Unterstützung verschiedener kryptografischer Verfahren bei der TLS-Verwendung</b>
PAR Das Clientmodul KOM-LE MUSS parallel RSA und ECC unterstützen. Als TLS-Client MUSS das Clientmodul KOM-LE  bevorzugt ECC verwenden, falls es auf einen TLS-Server, der beide Verfahren unterstützt, trifft.<br><br><b>[<=]</b>

REQ(ids=KOM-LE-A_2065)<b>KOM-LE-A_2065 - Schutz des Schlüsselspeichers für TLS-Verbindungen</b>
PAR Das Clientmodul MUSS das für den Aufbau von TLS-Verbindungen mit dem Fachdienst, dem Konnektor und Clientsystemen benötigte Schlüsselmaterial in einem mindestens durch Passwort geschützten sicheren Schlüsselspeicher ablegen. <b>[<=]</b>

PAR Lösungen die Zertifikat und Schlüsselmaterial in der ausgelieferten Software des Clientmoduls enthalten und Lösungen bei denen derselbe Schlüssel für mehrere Clientmodule verwendet wird, sind aus Sicherheitsgründen nicht zulässig.
REQ(ids=KOM-LE-A_2300)<b>KOM-LE-A_2300 - Import des Schlüsselmaterial für TLS-Verbindungen</b>
PAR Das Clientmodul DARF Schlüsselmaterial für den Aufbau von TLS-Verbindungen NICHT im Auslieferungszustand in der Software enthalten, sondern muss dieses nach Installation importieren. <b>[<=]</b>

REQ(ids=KOM-LE-A_2301-02)<b>KOM-LE-A_2301-02 - Individuelles Schlüsselmaterial für TLS-Verbindungen</b>
PAR Das Clientmodul MUSS das vom KOM-LE-Anbieter bereitgestellte Schlüsselmaterial in Form der PKCS#12 Datei für jeden Aufbau von TLS-Verbindungen nutzen. Das Clientmodul MUSS das notwendige Schlüsselmaterial über die Schnittstelle I_AccountManager_Service vom KOM-LE-Fachdienst beziehen.<br> <b>[<=]</b>

REQ(ids=A_18783)<b>A_18783 - Import Schlüssel und Zertifikat als PKCS#12 Datei</b>
PAR Das Clientmodul KOM-LE MUSS das Schlüsselmaterial und das Zertifikat für die TLS-Verbindungen als passwortgeschützte PKCS#12 Datei importieren können. <b>[<=]</b>

PAR -HEADING(ids=4.1.2)4.1.2 Transportsicherung zwischen Clientsystem und Clientmodul
PAR Die SMTP- und POP3-Verbindungen zwischen dem Clientmodul und den Clientsystemen müssen über TLS geschützt werden, sofern Clientmodul und E-Mail-Client nicht auf demselben PC laufen.
REQ(ids=KOM-LE-A_2066)<b>KOM-LE-A_2066 - Verwendung von TLS für SMTP-Verbindungen mit Clientsystemen</b>
PAR Für SMTP-Verbindungen zwischen Clientsystem und Clientmodul MUSS TLS verwendet werden, wenn das Clientmodul nicht auf demselben Gerät läuft wie das Clientsystem.<br><b>[<=]</b>

REQ(ids=KOM-LE-A_2067)<b>KOM-LE-A_2067 - Verwendung von TLS für POP3-Verbindungen mit Clientsystemen</b>
PAR Für POP3-Verbindungen zwischen Clientsystem und Clientmodul MUSS TLS verwendet werden, wenn das Clientmodul nicht auf demselben Gerät läuft wie das Clientsystem.<br><b>[<=]</b>

REQ(ids=KOM-LE-A_2181)<b>KOM-LE-A_2181 - Authentifizierung von Clientsystemen gegenüber dem Clientmodul</b>
PAR Das Clientmodul MUSS für den Aufbau von TLS-Verbindungen mit den Clientsystemen sowohl die Möglichkeit, die zertifikatsbasierte Clientauthentifizierung zu verwenden, als auch ohne Clientauthentifizierung zu arbeiten, unterstützen.
PAR <b>[<=]</b>

PAR Die Server-Authentisierung erfolgt mit einem Zertifikat, das im gemäß KOM-LE_2065 geschützten Schlüsselspeicher gespeichert wird.
PAR -HEADING(ids=4.1.3)4.1.3 Transportsicherung zwischen Clientmodul und Konnektor
PAR Die Kommunikation zwischen Clientmodul und Konnektor basiert auf HTTP. Der Konnektor bietet vier Varianten der HTTP(S)-Verbindung an:

ORDERED-LIST->
LITEM->PAR TLS deaktiviert. Verwendung von HTTP ohne Absicherung auf Transportebene wird vom Konnektor akzeptiert.LITEM->PAR TLS ohne Client-Authentifizierung.LITEM->PAR TLS mit Client-Authentifizierung. Die Client-Authentisierung muss mit den Zertifikaten erfolgen, die der Administrator entweder mit seinen eigenen Mitteln selbst oder mittels des Konnektors erzeugt. In beiden Fällen müssen diese Zertifikate sowohl im Clientmodul (hier zusammen mit ihren privaten Schlüsseln), als auch im Konnektor vorhanden sein.LITEM->PAR Kombination von TLS ohne Client-Authentifizierung und HTTP-Basic-Authentifizierung. Das Clientmodul muss Benutzername und Passwort für die HTTP-Basic-Authentifizierung statisch konfigurieren, so dass eine Übereinstimmung mit der Konfiguration am Konnektor besteht.
PAR Für die Basic-Authentifizierung (auch “Basic Access Authentication”, ein Standard der HTTP-Authentifizierung) soll dabei das Clientmodul die notwendigen Parameter „Benutzername“ und „Passwort“ verwalten. Das Clientmodul muss über entsprechende Konfigurationsparameter verfügen. Diese müssen mit den gleichen Werten für Benutzername und Passwort befüllt werden, wie an der Managementschnittstelle des Konnektors.
PAR Die zertifikatsbasierte Client-Authentifizierung erfolgt mit einem Zertifikat, das im gemäß KOM-LE-A_2065 passwortgeschützten Schlüsselspeicher gespeichert wird.
REQ(ids=KOM-LE-A_2070)<b>KOM-LE-A_2070 - Verbindungsaufbau mit dem Konnektor mit TLS</b>
PAR Das Clientmodul MUSS für Verbindungen mit dem Konnektor immer TLS verwenden.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2071)<b>KOM-LE-A_2071 - TLS-Verbindung mit dem Konnektor mit oder ohne zertifikatsbasierter Client-Authentifizierung</b>
PAR Das Clientmodul MUSS konfigurierbar die Verwendung von TLS mit oder ohne zertifikatsbasierter Client-Authentifizierung für Verbindungen mit dem Konnektor ermöglichen. Standardmäßig muss die zertifikatsbasierte Client-Authentifizierung aktiviert sein.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2072)<b>KOM-LE-A_2072 - Verwendung von HTTP-Basic-Authentifizierung für TLS-Verbindungen mit dem Konnektor</b>
PAR Das Clientmodul MUSS konfigurierbar die Verwendung von HTTP-Basic-Authentifizierung in einem TLS-Kanal für Verbindungen mit dem Konnektor ermöglichen.
PAR <b>[<=]</b>

REQ(ids=A_21223-01)<b>A_21223-01 - Verbindungen mit dem Konnektor bei LDAP</b>
PAR Bei der Verwendung des LDAP-Proxies im Konnektor MUSS das Clientmodul die Vorgaben aus [gemSpec_Kon#3.4] erfüllen.<br>Die folgenden Vorgaben sind einzuhalten:

ORDERED-LIST->
LITEM->PAR Es ist immer TLS für die LDAP Verbindungen zu verwenden,LITEM->PAR für die Client-Authentifizierung bei LDAP ist nur die zertifikatsbasierte Client-Authentifizierung zu verwenden undLITEM->PAR die Verwendung von TLS mit oder ohne zertifikatsbasierter Client-Authentifizierung muss konfigurierbar sein.
PAR <b>[<=]</b>

PAR -HEADING(ids=4.1.4)4.1.4 Transportsicherung zwischen Clientmodul und Fachdienst
PAR Die Verbindungen zwischen KOM-LE-Clientmodul und KOM-LE-Fachdiensten (inklusive KAS) erfolgen immer über TLS. Der TLS Handshake zwischen dem Clientmodul und dem MTA sowie POP3-Server findet unmittelbar nach dem Aufbau der entsprechenden TCP-Verbindung statt. Damit wird sichergestellt, dass die Anmeldungsdaten des Nutzers immer über die mit TLS geschützte Verbindung transportiert werden.
PAR Während des Aufbaus der TLS-Verbindung authentifizieren sich die KOM-LE-Fachdienste bzw. der Verzeichnisdienst  gegenüber dem Clientmodul mit X.509 TLS-Server-Zertifikaten. Zur Überprüfung dieser Zertifikate verwendet das Clientmodul die Operation VerifyCertificate des Konnektors.
PAR Das Clientmodul wiederum authentisiert sich gegenüber den KOM-LE-Fachdiensten mit dem vom KOM-LE-Anbieter zur Verfügung gestellten TLS-Client-Zertifikat und dem entsprechenden privaten Schlüssel (KOM-LE-A_2065, KOM-LE-A_2300 und KOM-LE-A_2301 sind zu beachten).
REQ(ids=KOM-LE-A_2074)<b>KOM-LE-A_2074 - Verbindung zu KOM-LE-Fachdiensten immer über TLS</b>
PAR Das Clientmodul MUSS immer TLS mit beidseitiger Authentifizierung über X.509-Zertifikate aus der PKI der TI-Plattform für die Verbindung mit den KOM-LE-Fachdiensten verwenden. Das TLS-Handshake MUSS unmittelbar nach dem Aufbau der TCP-Verbindung initiiert werden.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2075-01)<b>KOM-LE-A_2075-01 - Prüfung von TLS-Server-Zertifikaten</b>
PAR Das Clientmodul MUSS für die Prüfung von TLS-Server-Zertifikaten der KOM-LE-Fachdienste die Operation VerifyCertificate des Konnektors benutzen. Wird durch die Operation ein Prüfergebnis "INVALID" zurückgegeben, MUSS der beabsichtigte Verbindungsaufbau abgebrochen werden.<br><b>[<=]</b>

REQ(ids=A_22348)<b>A_22348 - Caching der Prüfergebnisse der TLS-Server-Zertifikate</b>
PAR Das Clientmodul KANN das Ergebnisse der Zertifikatsprüfung für eine definierte Zeitdauer (Tabelle 15: Tab_Konf_Param Standardkonfiguration allgemeine Parameter) temporär und manipulationssicher speichern. Für die Zuordnung sind eindeutige Identifikatoren, wie bspw. der Zertifikats-Fingerabdruck, zu verwenden. Bei erneuter Prüfung eines gleichen Zertifikats kann das vorangegangene Verifikations-Ergebnis dieses Zertifikats genutzt werden. Die Speicherdauer ist an die zeitliche Gültigkeit ("notAfter") des Zertifikats anzupassen.<br> <b>[<=]</b>

REQ(ids=KOM-LE-A_2182-01)<b>KOM-LE-A_2182-01 - Verwendung des vom KOM-LE-Anbieter zur Verfügung gestellten Zertifikats für die clientseitige TLS-Authentifizierung</b>
PAR Das Clientmodul MUSS sich mit dem vom KOM-LE-Anbieter zur Verfügung gestellten TLS-Client-Zertifikat C.CM.TLS-CS gegenüber den KOM-LE-Fachdienst-Komponenten authentifizieren.<br><b>[<=]</b>

PAR -HEADING(ids=4.2)4.2 Nutzung von Webservice-Schnittstellen des Konnektors
PAR Aus der Herstellerdokumentation des Konnektors ist der FQDN zu entnehmen, unter dem der Konnektor seinen Dienstverzeichnisdienst anbietet. Innerhalb des FQDN können Hostname und Domain-Name je nach Konfiguration der LE-Umgebung individuell konfiguriert sein. Der resultierende FQDN des Dienstverzeichnisdienstes muss in die Konfiguration des Clientmoduls übernommen werden.
PAR Durch das Auslesen des Dienstverzeichnisdienstes erhält das Clientmodul Webservice-Endpunkte von Diensten des Konnektors. Die Dienste des Konnektors sind versioniert. Es ist möglich, dass ein Konnektor mehrere Versionen eines Dienstes gleichzeitig anbietet. Die Versionierung der Dienste hilft dem Clientmodul dabei, genau die Dienstversionen zu nutzen, die es clientseitig implementiert hat.
PAR Da nicht davon ausgegangen werden kann, dass die Inhalte des Dienstverzeichnisdienstes statisch sind, sollte das Lesen des Verzeichnisses beim Programmstart und in Fehlersituationen erfolgen, um den Dienstverzeichnis-Cache zu erneuern. Die weitere Kommunikation mit den Diensten des Konnektors erfolgt dann über die im Dienstverzeichnis-Cache propagierten Dienstendpunkte.
REQ(ids=KOM-LE-A_2076)<b>KOM-LE-A_2076 - Ermittlung der Serviceendpunkte des Konnektors</b>
PAR Das Clientmodul MUSS die Endpunkte der Services, die der Konnektor anbietet, aus dem Dienstverzeichnisdienst (DVD) ermitteln und die Endpunktinformationen der Dienste lokal cachen. Der DVD ist unter einem FQDN, der im Clientmodul konfiguriert ist, erreichbar. Wenn ein Verbindungsproblem auftritt (Dienst nicht erreichbar), MUSS das Clientmodul einen Refresh auf die Endpunktinformationen des Dienstverzeichnisdienstes durchführen.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2077)<b>KOM-LE-A_2077 - Auswahl der unterstützten Version einer Dienstschnittstelle des Konnektors</b>
PAR Das Clientmodul MUSS in der Lage sein, die von ihm unterstützte Dienstversion unter mehreren vom Konnektor angebotenen Dienstschnittstellen auszuwählen.
PAR <b>[<=]</b>

PAR -HEADING(ids=4.3)4.3 Protokollierung/Logging
PAR Das Clientmodul soll Protokolldateien schreiben, die eine Analyse technischer Vorgänge erlauben. Diese Protokolldateien sind dafür vorgesehen, aufgetretene Fehler zu identifizieren, die Performance zu analysieren und interne Abläufe zu beobachten. Um die Anforderungen an den Datenschutz zu gewährleisten, dürfen keine medizinischen und personenbezogenen Daten protokolliert werden. Geheimes Schlüsselmaterial darf ebenfalls nicht protokolliert werden.
REQ(ids=KOM-LE-A_2079)<b>KOM-LE-A_2079 - Protokolldateien für Ablauf, Performance und Fehler</b>
PAR Das Clientmodul MUSS das Protokollieren von Abläufen, Performanceinformationen und Fehlern ermöglichen.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2080)<b>KOM-LE-A_2080 - Keine Protokollierung sensibler Daten</b>
PAR Das Clientmodul DARF medizinische und personenbezogene Daten sowie geheimes Schlüsselmaterial und Passwörter NICHT protokollieren.
PAR <b>[<=]</b>

PAR Die Protokolldateien folgen einem einheitlichen Format, das vom Hersteller festgelegt wird. Es muss geeignet sein, automatische Auswertungen mit wenig Aufwand durch Dritte zu ermöglichen. Ein Vorbild ist das Weblog des Apache Webservers.
REQ(ids=KOM-LE-A_2081)<b>KOM-LE-A_2081 - Format der Protokolldateien</b>
PAR Das KOM-LE-Clientmodul MUSS Protokolldateien in einem einheitlichen Format erstellen, um eine automatisierte Auswertung zu ermöglichen.
PAR <b>[<=]</b>

PAR Der Zugriff auf Protokolldateien muss auf autorisierte Personen durch angemessene technische oder organisatorische Maßnahmen eingeschränkt werden. Die Logdateien können auf ein separates Speichermedium kopiert werden. Zudem soll der Administrator das Protokollieren für die Performanceanalyse und der internen Abläufe einzeln deaktivieren und wieder aktivieren können. Für den Produktivbetrieb soll das Protokollieren der internen Abläufe grundsätzlich deaktiviert sein. Damit die Protokolldateien nur begrenzten Speicherplatz belegen, werden sie automatisch nach einem konfigurierbaren Zeitraum gelöscht bzw. überschrieben.
REQ(ids=KOM-LE-A_2082)<b>KOM-LE-A_2082 - Zugriff auf Protokolldateien einschränken</b>
PAR Das KOM-LE-Clientmodul MUSS den Zugriff auf Protokolldateien auf autorisierte Personen durch angemessene technische oder organisatorische Maßnahmen einschränken.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2083)<b>KOM-LE-A_2083 - Kopien der Protokolldateien</b>
PAR Das KOM-LE-Clientmodul MUSS autorisiertem Personal das Anfertigen von Kopien der Protokolldateien auf separaten Speichermedien ermöglichen.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2084)<b>KOM-LE-A_2084 - Aktivierung und Deaktivierung der Protokollierung von Performanceinformationen</b>
PAR Das KOM-LE-Clientmodul MUSS das Aktivieren und Deaktivieren der Protokollierung von Performanceinformationen ermöglichen.
PAR <b>[<=]</b>

REQ(ids=KOM-LE-A_2085)<b>KOM-LE-A_2085 - Begrenzung des Speicherplatzes für Protokolldateien</b>
PAR Das KOM-LE-Clientmodul MUSS den verwendeten Speicherplatz für die Protokolldateien begrenzen, indem diese automatisch nach einem konfigurierbaren Zeitraum gelöscht oder überschrieben werden.
PAR <b>[<=]</b>

PAR Um mehrere Protokolleinträge zu korrelieren, soll beim Aufruf einer Operation eine Vorgangsnummer gebildet werden. Diese Vorgangsnummer wird in allen Protokolleinträgen dieses Operationsaufrufs genutzt. Die Vorgangsnummer wird vom KOM-LE-Clientmodul pseudozufällig gebildet.
REQ(ids=KOM-LE-A_2086)<b>KOM-LE-A_2086 - Vorgangsnummer für Protokolleinträge</b>
PAR Das KOM-LE-Clientmodul MUSS eine Vorgangsnummer beim Aufruf einer Operation pseudozufällig bilden, um alle zugehörigen Protokolleinträge zum Operationsaufruf zu korrelieren.
PAR <b>[<=]</b>

PAR -HEADING(ids=4.3.1)4.3.1 Ablaufprotokoll
PAR Die Protokolleinträge im Ablaufprotokoll enthalten mindestens die in Tabelle Tab_Felder_Ablauf_Prot aufgezählten Felder.
PAR (ids=Tabelle-9)Tabelle 9: Tab_Felder_Ablauf_Prot Felder im Ablaufprotokoll

TABLE(rows=4,cols=210+385)->
TR-> TH(0,0/1/1)->PAR Feld TH(0,1/1/1)->PAR Beschreibung
TR-> TD(1,0/1/1)->PAR Vorgangsnummer TD(1,1/1/1)->PAR Pseudo-zufällige Zeichenkette zur Korrelation der Protokolleinträge
TR-> TD(2,0/1/1)->PAR Zeitpunkt TD(2,1/1/1)->PAR Zeitpunkt der Erstellung des Protokolleintrags
TR-> TD(3,0/1/1)->PAR Beschreibung TD(3,1/1/1)->PAR Details zum Ausführungsschritt
PAR Das Ablaufprotokoll soll die Ausführungsschritte enthalten, die einen Einblick in den internen Ablauf für Administratoren, Anbieter und Tester ermöglichen und die Analyse von Fehlersituationen erleichtern.
REQ(ids=KOM-LE-A_2087)<b>KOM-LE-A_2087 - Felder zur Protokollierung des Ablaufs</b>
PAR Das KOM-LE-Clientmodul MUSS die Protokollierung des Ablaufs mit mindestens folgenden Feldern ermöglichen:

LIST->
LITEM->PAR pseudozufällige Zeichenkette zur Korrelation der Protokolleinträge,LITEM->PAR Zeitpunkt der Erstellung des Protokolleintrags undLITEM->PAR Details zum Ausführungsschritt.
PAR <b>[<=]</b>

PAR -HEADING(ids=4.3.2)4.3.2 Performance
PAR Die Protokolleinträge im Performanceprotokoll enthalten mindestens die in Tabelle Tab_Felder_Perf_Prot aufgezählten Felder und müssen geeignet sein, um die tatsächlichen Ausführungszeiten des KOM-LE-Clientmoduls mit den Vorgaben in Kapitel 4.6.1 zu vergleichen. Für jeden Aufruf einer Schnittstelle des Clientmoduls KOM-LE werden ein oder mehrere Protokolleinträge geschrieben.
PAR (ids=Tabelle-10)Tabelle 10: Tab_Felder_Perf_Prot Felder im Performance-Protokoll

TABLE(rows=6,cols=210+385)->
TR-> TH(0,0/1/1)->PAR Feld TH(0,1/1/1)->PAR Beschreibung
TR-> TD(1,0/1/1)->PAR Vorgangsnummer TD(1,1/1/1)->PAR Pseudozufällige Zeichenkette zur Korrelation der Protokolleinträge
TR-> TD(2,0/1/1)->PAR Name der Aktion TD(2,1/1/1)->PAR Name der Aktion für Protokolleintrag
TR-> TD(3,0/1/1)->PAR Startzeitpunk TD(3,1/1/1)->PAR Startzeitpunkt der Aktion
TR-> TD(4,0/1/1)->PAR Endezeitpunkt TD(4,1/1/1)->PAR Endezeitpunkt der Aktion
TR-> TD(5,0/1/1)->PAR Dauer in ms TD(5,1/1/1)->PAR Dauer in ms
REQ(ids=KOM-LE-A_2088)<b>KOM-LE-A_2088 - Felder zur Protokollierung der Performance</b>
PAR Das KOM-LE-Clientmodul MUSS die Protokollierung der Performance mit mindestens folgenden Feldern ermöglichen:

LIST->
LITEM->PAR pseudozufällige Zeichenkette zur Korrelation der Protokolleinträge,LITEM->PAR Name der Aktion für den Protokolleintrag,LITEM->PAR Startzeitpunkt der Aktion,LITEM->PAR Endezeitpunkt der Aktion undLITEM->PAR Dauer in ms.
PAR <b>[<=]</b>

PAR Jede der in Tabelle Tab_Auslöser_Prot_Entry aufgelisteten Aktionen führt zu einem Eintrag im Performanceprotokoll. Diese Durchlaufzeiten sollen separat protokolliert werden, damit die Ausführungszeit des Clientmoduls ohne Zeiten anderer Komponenten ermittelbar ist.
PAR (ids=Tabelle-11)Tabelle 11: Tab_Auslöser_Prot_Entry Auslöser Protokolleinträge im Performanceprotokoll

TABLE(rows=3,cols=162+194+253)->
TR-> TH(0,0/1/1)->PAR Auslöser TH(0,1/1/1)->PAR Name der Aktion für Protokolleintrag TH(0,2/1/1)->PAR Beschreibung
TR-> TD(1,0/1/1)->PAR Ankommen einer SMTP bzw. POP3-Meldung TD(1,1/1/1)->PAR SMTP bzw. POP3-Meldung TD(1,2/1/1)->PAR Wird beim Ankommen einer SMTP bzw. POP3-Meldung ausgelöst und endet mit der Weiterleitung an den Fachdienst oder der Antwort an das Clientsystem.
TR-> TD(2,0/1/1)->PAR Aufruf einer Operation des Konnektors TD(2,1/1/1)->PAR Name der Operation TD(2,2/1/1)->PAR Wird durch den Aufruf einer Operation des Konnektors ausgelöst und endet mit der Rückkehr der Aktion
REQ(ids=KOM-LE-A_2089)<b>KOM-LE-A_2089 - Aktionen zur Protokollierung der Performance</b>
PAR Das KOM-LE-Clientmodul MUSS für die folgenden Aktionen Einträge in das Performanceprotokoll schreiben:

LIST->
LITEM->PAR Ankommen einer SMTP bzw. POP3-Meldung undLITEM->PAR Aufruf einer Schnittstelle des Konnektors.
PAR <b>[<=]</b>

PAR -HEADING(ids=4.3.3)4.3.3 Fehler
PAR Tritt innerhalb einer Operation ein Fehler auf bzw. wird eine Operation nicht beendet, soll trotzdem ein Protokolleintrag erstellt werden, in dem eindeutig auswertbar ist, dass die Ausführung der Operation fehlerhaft war.
PAR Die Protokolleinträge im Fehlerprotokoll enthalten mindestens die in Tabelle Tab_Felder_Fehler_Prot aufgezählten Felder.
PAR (ids=Tabelle-12)Tabelle 12: Tab_Felder_Fehler_Prot Felder im Fehlerprotokoll

TABLE(rows=4,cols=210+385)->
TR-> TH(0,0/1/1)->PAR Feld TH(0,1/1/1)->PAR Beschreibung
TR-> TD(1,0/1/1)->PAR Vorgangsnummer TD(1,1/1/1)->PAR Pseudozufällige Zeichenkette zur Korrelation der Protokolleinträge
TR-> TD(2,0/1/1)->PAR Zeitpunkt TD(2,1/1/1)->PAR Zeitpunkt der Erstellung des Protokolleintrags
TR-> TD(3,0/1/1)->PAR Fehlerdetails TD(3,1/1/1)->PAR Weiterführende Details zur Fehlermeldung
REQ(ids=KOM-LE-A_2090)<b>KOM-LE-A_2090 - Felder zur Protokollierung der Fehler</b>
PAR Das KOM-LE-Clientmodul MUSS die Protokollierung von Fehlern mit mindestens folgenden Feldern ermöglichen:

LIST->
LITEM->PAR pseudozufällige Zeichenkette zur Korrelation der Protokolleinträge,LITEM->PAR Zeitpunkt der Erstellung des Protokolleintrags undLITEM->PAR Details zur Fehlermeldung.
PAR <b>[<=]</b>

PAR -HEADING(ids=4.4)4.4 Konfiguration
PAR Die in der Tabelle Tab_Konf_Param aufgeführten Parameter müssen über eine Managementoberfläche oder eine Konfigurationsdatei für das KOM-LE-Clientmodul konfigurierbar sein.
PAR (ids=Tabelle-13)Tabelle 13: Tab_Konf_Param Standardkonfiguration allgemeine Parameter

TABLE(rows=13,cols=224+394+118)->
TR-> TH(0,0/1/1)->PAR Parameter TH(0,1/1/1)->PAR Beschreibung des Parameters TH(0,2/1/1)->PAR Defaultwert
TR-> TD(1,0/1/1)->PAR TLS_AUTH_KONNEKTOR TD(1,1/1/1)->PAR Authentifizierung des Clientmoduls gegenüber dem Konnektor bei aktivierter TLS-Verbindung (zertifikatsbasiert, Basic-Authentifizierung, ohne) TD(1,2/1/1)->PAR zertifikats-basiert
TR-> TD(2,0/1/1)->PAR KONNEKTOR_TIMEOUT TD(2,1/1/1)->PAR Timeout für Aufrufe von  Schnittstellen des Konnektors TD(2,2/1/1)->PAR 1 Minute    
TR-> TD(3,0/1/1)->PAR SMTP_TIMEOUT_SERVER TD(3,1/1/1)->PAR Timeout für Antworten vom SMTP-Server auf SMTP-Kommandos TD(3,2/1/1)->PAR 5 Minuten
TR-> TD(4,0/1/1)->PAR SMTP_TIMEOUT_CLIENT TD(4,1/1/1)->PAR Timeout für das Warten auf neue SMTP-Kommandos vom Clientsystem TD(4,2/1/1)->PAR 5 Minuten
TR-> TD(5,0/1/1)->PAR POP3_TIMEOUT_SERVER TD(5,1/1/1)->PAR Timeout für Antworten vom POP3-Server auf POP3-Kommandos TD(5,2/1/1)->PAR 5 Minuten
TR-> TD(6,0/1/1)->PAR POP3_TIMEOUT_CLIENT TD(6,1/1/1)->PAR Timeout für das Warten auf neue POP3-Kommandos vom Clientsystem TD(6,2/1/1)->PAR 5 Minuten
TR-> TD(7,0/1/1)->PAR TTL_ENC_CERT TD(7,1/1/1)->PAR Time to Live für gecachte Verschlüsselungs-zertifikate und Prüfergebnisse TD(7,2/1/1)->PAR 12 Stunden
TR-> TD(8,0/1/1)->PAR TTL_EMAIL_ICCSN TD(8,1/1/1)->PAR Time to Live für gecachte Zuordnungen von E-Mail-Adressen der Sender bzw. Empfänger zu ICCSNs von deren HBAs/SM-Bs TD(8,2/1/1)->PAR 30 Tage
TR-> TD(9,0/1/1)->PAR TTL_PROTS TD(9,1/1/1)->PAR Time to Live für Protokolldateien. TD(9,2/1/1)->PAR 30 Tage
TR-> TD(10,0/1/1)->PAR PROT_PERF TD(10,1/1/1)->PAR Protokolldatei für Performance TD(10,2/1/1)->PAR JA
TR-> TD(11,0/1/1)->PAR KONNEKTOR_URI TD(11,1/1/1)->PAR URI des DVD des Konnektors TD(11,2/1/1)->PAR -
TR-> TD(12,0/1/1)->PAR CM_KAS_TIMEOUT TD(12,1/1/1)->PAR Timeout bei Inaktivität der Kommunikation zwischen Clientmodul und KAS TD(12,2/1/1)->PAR 30 Sekunden
REQ(ids=KOM-LE-A_2091-01)<b>KOM-LE-A_2091-01 - Konfigurationsparameter</b>
PAR Das KOM-LE-Clientmodul MUSS die in Tabelle Tab_Konf_Param aufgelisteten Parameter ausschließlich dem berechtigten Akteur über eine Managementoberfläche oder eine Konfigurationsdatei zur Konfiguration anbieten.<br><b>[<=]</b>

REQ(ids=KOM-LE-A_2184)<b>KOM-LE-A_2184 - Standardwerte der Konfigurationsparameter</b>
PAR Die Konfiguration des Clientmoduls MUSS mit den in Tabelle Tab_Konf_Param Standardkonfiguration allgemeine Parameter definierten Defaultwerten ausgeliefert werden.
PAR <b>[<=]</b>

PAR -HEADING(ids=4.5)4.5 Update-Mechanismen
REQ(ids=KOM-LE-A_2225)<b>KOM-LE-A_2225 - Update-Mechanismen</b>
PAR Der Hersteller des Clientmoduls MUSS Mechanismen für das Updaten des Clientmoduls zur Verfügung stellen. Diese Mechanismen MÜSSEN es auch ermöglichen, dass die TLS-Zertifikate und das zugehörige Schlüsselmaterial des Clientmoduls auf sichere Art und Weise erneuert werden können.
PAR <b>[<=]</b>

PAR -HEADING(ids=4.6)4.6 Produktleistungen
PAR -HEADING(ids=4.6.1)4.6.1 Performance
PAR Die durch das Clientmodul einzuhaltenden Performanceanforderungen werden in diesem Dokument nicht betrachtet sondern in [gemSpec_Perf] aufgeführt.
PAR -HEADING(ids=4.6.2)4.6.2 Skalierbarkeit
PAR Das Clientmodul kann in Einzelpraxen, Praxisgemeinschaften, Gemeinschaftspraxen oder in medizinischen Versorgungszentren (MVZ) eingesetzt werden. Zusätzlich ist der Einsatz in Krankenhäusern und Umgebungen der Kostenträger vorgesehen. In diesen Umgebungen sind gleichzeitige Sende- und Abholvorgänge möglich. Das Clientmodul muss in der Lage sein, solche Vorgänge parallel bearbeiten zu können.
PAR Im Rahmen dieser Spezifikation wird gefordert, dass ein KOM-LE-Clientmodul grundsätzlich beliebig viele parallele Sende- und Abholvorgänge unterstützt. Die Anzahl der tatsächlich unterstützten parallelen Aufrufe wird durch die eingesetzte Hardware und Beschränkungen des Herstellers begrenzt.
REQ(ids=KOM-LE-A_2094)<b>KOM-LE-A_2094 - Skalierbarkeit</b>
PAR Das Clientmodul MUSS gleichzeitig für mehrere Clientsysteme nutzbar sein, wobei die Anzahl der tatsächlich unterstützten parallelen Aufrufe dem Hersteller überlassen ist.<br><b>[<=]</b>

PAR -HEADING(ids=5)5 Anhang A – Verzeichnisse
PAR -HEADING(ids=5.1)5.1 Abkürzungen

TABLE(rows=26,cols=73+333)->
TR-> TH(0,0/1/1)->PAR Kürzel TH(0,1/1/1)->PAR Erläuterung
TR-> TD(1,0/1/1)->PAR AUTH TD(1,1/1/1)->PAR Authentisierung
TR-> TD(2,0/1/1)->PAR CMS TD(2,1/1/1)->PAR Cryptographic Message Syntax
TR-> TD(3,0/1/1)->PAR DER TD(3,1/1/1)->PAR Distinguished Encoding Rules
TR-> TD(4,0/1/1)->PAR DVD TD(4,1/1/1)->PAR Dienstverzeichnisdienst
TR-> TD(5,0/1/1)->PAR FQDN TD(5,1/1/1)->PAR Fully Qualified Domain Name
TR-> TD(6,0/1/1)->PAR HBA TD(6,1/1/1)->PAR Heilberufsausweis
TR-> TD(7,0/1/1)->PAR ICCSN TD(7,1/1/1)->PAR Integrated Circuit Card Serial Number
TR-> TD(8,0/1/1)->PAR ID TD(8,1/1/1)->PAR Identifier
TR-> TD(9,0/1/1)->PAR KAS TD(9,1/1/1)->PAR KOM-LE Attachment Service
TR-> TD(10,0/1/1)->PAR KOM-LE TD(10,1/1/1)->PAR Kommunikation für Leistungserbringer
TR-> TD(11,0/1/1)->PAR LDAP TD(11,1/1/1)->PAR Leightweight Directory Access Protocol
TR-> TD(12,0/1/1)->PAR LE TD(12,1/1/1)->PAR Leistungserbringer
TR-> TD(13,0/1/1)->PAR MTA TD(13,1/1/1)->PAR Mail Transfer Agent
TR-> TD(14,0/1/1)->PAR MUA TD(14,1/1/1)->PAR Mail User Agent
TR-> TD(15,0/1/1)->PAR OCSP TD(15,1/1/1)->PAR Online Certificate Status Protocol
TR-> TD(16,0/1/1)->PAR PIN TD(16,1/1/1)->PAR Personal Identification Number
TR-> TD(17,0/1/1)->PAR POP3 TD(17,1/1/1)->PAR Post Office Protocol Version 3
TR-> TD(18,0/1/1)->PAR S/MIME TD(18,1/1/1)->PAR Secure/Multipurpose Internet Mail Extensions
TR-> TD(19,0/1/1)->PAR SMTP TD(19,1/1/1)->PAR Simple Mail Transfer Protocol
TR-> TD(20,0/1/1)->PAR SSL TD(20,1/1/1)->PAR Secure Socket Layer
TR-> TD(21,0/1/1)->PAR TCP TD(21,1/1/1)->PAR Transmission Control Protocol
TR-> TD(22,0/1/1)->PAR TI TD(22,1/1/1)->PAR Telematikinfrastruktur
TR-> TD(23,0/1/1)->PAR TLS TD(23,1/1/1)->PAR Transport Layer Security
TR-> TD(24,0/1/1)->PAR URL TD(24,1/1/1)->PAR Uniform Resource Locator
TR-> TD(25,0/1/1)->PAR VZD TD(25,1/1/1)->PAR Verzeichnisdienst
PAR -HEADING(ids=5.2)5.2 Glossar
PAR Das Glossar wird als eigenständiges Dokument (vgl. [gemGlossar]) zur Verfügung gestellt.
PAR -HEADING(ids=5.3)5.3 Abbildungsverzeichnis

<PLACEHOLDER>

PAR -HEADING(ids=5.4)5.4 Tabellenverzeichnis

<PLACEHOLDER>

PAR -HEADING(ids=5.5)5.5 Referenzierte Dokumente
PAR -HEADING(ids=5.5.1)5.5.1 Dokumente der gematik
PAR Die nachfolgende Tabelle enthält die Bezeichnung der in dem vorliegenden Dokument referenzierten Dokumente der gematik zur Telematikinfrastruktur. Der mit der vorliegenden Version korrelierende Entwicklungsstand dieser Konzepte und Spezifikationen wird pro Release in einer Dokumentenlandkarte definiert; Version und Stand der referenzierten Dokumente sind daher in der nachfolgenden Tabelle nicht aufgeführt. Deren zu diesem Dokument jeweils gültige Versionsnummer entnehmen Sie bitte der aktuellen, auf der Internetseite der gematik veröffentlichten Dokumentenlandkarte, in der die vorliegende Version aufgeführt wird.

TABLE(rows=11,cols=167+560)->
TR-> TH(0,0/1/1)->PAR [Quelle] TH(0,1/1/1)->PAR Herausgeber: Titel
TR-> TD(1,0/1/1)->PAR [gemGlossar] TD(1,1/1/1)->PAR gematik: Glossar der Telematikinfrastruktur
TR-> TD(2,0/1/1)->PAR [gemLH_KOM-LE] TD(2,1/1/1)->PAR gematik: Lastenheft Adressierte Kommunikation Leistungserbringer
TR-> TD(3,0/1/1)->PAR [gemSpec_FD_KOMLE] TD(3,1/1/1)->PAR gematik: Spezifikation Fachdienst KOM-LE
TR-> TD(4,0/1/1)->PAR [gemSpec_Kon] TD(4,1/1/1)->PAR gematik: Spezifikation Konnektor
TR-> TD(5,0/1/1)->PAR [gemSpec_Krypt] TD(5,1/1/1)->PAR gematik: Verwendung kryptographischer Algorithmen in der Telematikinfrastruktur
TR-> TD(6,0/1/1)->PAR [gemSpec_PKI] TD(6,1/1/1)->PAR gematik: Spezifikation PKI
TR-> TD(7,0/1/1)->PAR [gemSMIME_KOMLE] TD(7,1/1/1)->PAR gematik: KOM-LE S/MIME Profil 1.0
TR-> TD(8,0/1/1)->PAR [gemSysL_KOMLE] TD(8,1/1/1)->PAR gematik: Systemspezifisches Konzept KOM-LE
TR-> TD(9,0/1/1)->PAR [AccountManager.yaml] TD(9,1/1/1)->PAR gematik: https://github.com/gematik/api-kim/blob/master/src/openapi/AccountManager.yaml https://github.com/gematik/api-kim/blob/master/src/openapi/AccountManager.yaml 
TR-> TD(10,0/1/1)->PAR [Attachment_Schema] TD(10,1/1/1)->PAR gematik: https://github.com/gematik/api-kim/blob/master/src/schema/Attachment_schema.jsonhttps://github.com/gematik/api-kim/blob/master/src/schema/Attachment_schema.json
PAR -HEADING(ids=5.5.2)5.5.2 Weitere Dokumente

TABLE(rows=14,cols=113+448)->
TR-> TH(0,0/1/1)->PAR [Quelle] TH(0,1/1/1)->PAR Herausgeber (Erscheinungsdatum): Titel
TR-> TD(1,0/1/1)->PAR [RFC1123] TD(1,1/1/1)->PAR RFC: Requirements for Internet Hosts -- Application and Support
TR-> TD(2,0/1/1)->PAR [RFC1939] TD(2,1/1/1)->PAR RFC 1939: Post Office Protocol – Version 3, J. Myers, M. Rose, Mai 1996
TR-> TD(3,0/1/1)->PAR [RFC2045] TD(3,1/1/1)->PAR RFC 2045: Multipurpose Internet Mail Extension (MIME) Part One: Format of Internet Message Bodies, N. Freed, N. Borenstein, November 1996
TR-> TD(4,0/1/1)->PAR [RFC2046] TD(4,1/1/1)->PAR RFC 2046: Multipurpose Internet Mail Extension (MIME) Part Two: Media Types, N. Feed, N. Borenstein, November 1996
TR-> TD(5,0/1/1)->PAR [RFC2449] TD(5,1/1/1)->PAR RFC 2449: POP3 Extension Mechanism, R. Gellens, C. Newman, L. Lundblade, November 1998
TR-> TD(6,0/1/1)->PAR [RFC2822] TD(6,1/1/1)->PAR RFC 2822: Internet Message Format
TR-> TD(7,0/1/1)->PAR [RFC3463] TD(7,1/1/1)->PAR RFC 3463: Enhanced Mail System Status Codes, G. Vaudreuil, Januar 2003
TR-> TD(8,0/1/1)->PAR [RFC4616] TD(8,1/1/1)->PAR RFC 4616: The PLAIN Simple Authentication and Security Layer (SASL) Mechanism, K. Zeilenga, August 2006
TR-> TD(9,0/1/1)->PAR [RFC4954] TD(9,1/1/1)->PAR RFC 4954: SMTP Service Extension for Authentication, R. Siemborski, A. Melnikov, März 2007
TR-> TD(10,0/1/1)->PAR [RFC5321] TD(10,1/1/1)->PAR RFC 5321: Simple Mail Transfer Protocol, J. Klensin, Oktober 2008
TR-> TD(11,0/1/1)->PAR [RFC5322] TD(11,1/1/1)->PAR RFC 5322: Internet Message Format, P. Resnick, Ed., Oktober 2008
TR-> TD(12,0/1/1)->PAR [RFC5750] TD(12,1/1/1)->PAR RFC 5750: Secure/Multipurpose Internet Mail Extensions (S/MIME) Version 3.2 Certificate Handiling, B. Ramsdell, S. Turner, Januar 2010
TR-> TD(13,0/1/1)->PAR [RFC5751] TD(13,1/1/1)->PAR RFC 5751: Secure/Multipurpose Internet Mail Extensions (S/MIME) Version 3.2 Message Specification, B. Ramsdell, S. Turner, Januar 2010
